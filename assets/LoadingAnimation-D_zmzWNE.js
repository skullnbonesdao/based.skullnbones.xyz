import{A as Rn,C as kt,bm as qa,E as Q,y as Z,G as Xa,K as Dn,J as En,b7 as Un,x as V,bn as On,bo as $n,Z as Kn,ag as et,a2 as Ln,I as Za,w as Ut,F as je,a5 as Gn,a0 as zn,a1 as Nn,z as Bn,P as v,bp as Be,aI as Wn,ao as O,aW as qn,a$ as Ot,b0 as B,aF as ae,bq as Ve,br as Xn,B as U,bs as k,b3 as E,b6 as wt,b9 as Je,aP as Zn,bt as Hn,bu as jn,bv as Vn,bw as Qn,bx as Yn,by as Jn,b5 as Ha,b1 as Ce,b2 as ja,bz as ei,N as ti,bA as ai,bB as si,bC as ni,ac as ii,ad as ri}from"./index-COgUWfzO.js";import{B as vt,C as oi,o as Ke,D as Ea,E as ci,F as ui,G as di}from"./QSelect-qA4vIaHT.js";import{Q as li,_ as mi}from"./use-checkbox-CTqGjcbb.js";import{b as Ua}from"./QSeparator-DpXbUoig.js";let fi=0;const gi=["click","keydown"],pi={icon:String,label:[Number,String],alert:[Boolean,String],alertIcon:String,name:{type:[Number,String],default:()=>`t_${fi++}`},noCaps:Boolean,tabindex:[String,Number],disable:Boolean,contentClass:String,ripple:{type:[Boolean,Object],default:!0}};function hi(a,e,t,n){const s=Rn(qa,kt);if(s===kt)return console.error("QTab/QRouteTab component needs to be child of QTabs"),kt;const{proxy:i}=Za(),r=Q(null),c=Q(null),u=Q(null),o=Z(()=>a.disable===!0||a.ripple===!1?!1:Object.assign({keyCodes:[13,32],early:!0},a.ripple===!0?{}:a.ripple)),d=Z(()=>s.currentModel.value===a.name),m=Z(()=>"q-tab relative-position self-stretch flex flex-center text-center"+(d.value===!0?" q-tab--active"+(s.tabProps.value.activeClass?" "+s.tabProps.value.activeClass:"")+(s.tabProps.value.activeColor?` text-${s.tabProps.value.activeColor}`:"")+(s.tabProps.value.activeBgColor?` bg-${s.tabProps.value.activeBgColor}`:""):" q-tab--inactive")+(a.icon&&a.label&&s.tabProps.value.inlineLabel===!1?" q-tab--full":"")+(a.noCaps===!0||s.tabProps.value.noCaps===!0?" q-tab--no-caps":"")+(a.disable===!0?" disabled":" q-focusable q-hoverable cursor-pointer")),f=Z(()=>"q-tab__content self-stretch flex-center relative-position q-anchor--skip non-selectable "+(s.tabProps.value.inlineLabel===!0?"row no-wrap q-tab__content--inline":"column")+(a.contentClass!==void 0?` ${a.contentClass}`:"")),l=Z(()=>a.disable===!0||s.hasFocus.value===!0||d.value===!1&&s.hasActiveTab.value===!0?-1:a.tabindex||0);function g(S,M){if(M!==!0&&r.value!==null&&r.value.focus(),a.disable!==!0){s.updateModel({name:a.name}),t("click",S);return}}function p(S){On(S,[13,32])?g(S,!0):$n(S)!==!0&&S.keyCode>=35&&S.keyCode<=40&&S.altKey!==!0&&S.metaKey!==!0&&s.onKbdNavigate(S.keyCode,i.$el)===!0&&Kn(S),t("keydown",S)}function h(){const S=s.tabProps.value.narrowIndicator,M=[],w=V("div",{ref:u,class:["q-tab__indicator",s.tabProps.value.indicatorClass]});a.icon!==void 0&&M.push(V(et,{class:"q-tab__icon",name:a.icon})),a.label!==void 0&&M.push(V("div",{class:"q-tab__label"},a.label)),a.alert!==!1&&M.push(a.alertIcon!==void 0?V(et,{class:"q-tab__alert-icon",color:a.alert!==!0?a.alert:void 0,name:a.alertIcon}):V("div",{class:"q-tab__alert"+(a.alert!==!0?` text-${a.alert}`:"")})),S===!0&&M.push(w);const R=[V("div",{class:"q-focus-helper",tabindex:-1,ref:r}),V("div",{class:f.value},Ln(e.default,M))];return S===!1&&R.push(w),R}const y={name:Z(()=>a.name),rootRef:c,tabIndicatorRef:u,routeData:n};Xa(()=>{s.unregisterTab(y)}),Dn(()=>{s.registerTab(y)});function b(S,M){const w={ref:c,class:m.value,tabindex:l.value,role:"tab","aria-selected":d.value===!0?"true":"false","aria-disabled":a.disable===!0?"true":void 0,onClick:g,onKeydown:p,...M};return En(V(S,w,h()),[[Un,o.value]])}return{renderTab:b,$tabs:s}}const Tl=Ut({name:"QTab",props:pi,emits:gi,setup(a,{slots:e,emit:t}){const{renderTab:n}=hi(a,e,t);return()=>n("div")}});function yi(a,e,t){const n=t===!0?["left","right"]:["top","bottom"];return`absolute-${e===!0?n[0]:n[1]}${a?` text-${a}`:""}`}const Si=["left","center","right","justify"],Pl=Ut({name:"QTabs",props:{modelValue:[Number,String],align:{type:String,default:"center",validator:a=>Si.includes(a)},breakpoint:{type:[String,Number],default:600},vertical:Boolean,shrink:Boolean,stretch:Boolean,activeClass:String,activeColor:String,activeBgColor:String,indicatorColor:String,leftIcon:String,rightIcon:String,outsideArrows:Boolean,mobileArrows:Boolean,switchIndicator:Boolean,narrowIndicator:Boolean,inlineLabel:Boolean,noCaps:Boolean,dense:Boolean,contentClass:String,"onUpdate:modelValue":[Function,Array]},setup(a,{slots:e,emit:t}){const{proxy:n}=Za(),{$q:s}=n,{registerTick:i}=vt(),{registerTick:r}=vt(),{registerTick:c}=vt(),{registerTimeout:u,removeTimeout:o}=Ua(),{registerTimeout:d,removeTimeout:m}=Ua(),f=Q(null),l=Q(null),g=Q(a.modelValue),p=Q(!1),h=Q(!0),y=Q(!1),b=Q(!1),S=[],M=Q(0),w=Q(!1);let R=null,K=null,$;const W=Z(()=>({activeClass:a.activeClass,activeColor:a.activeColor,activeBgColor:a.activeBgColor,indicatorClass:yi(a.indicatorColor,a.switchIndicator,a.vertical),narrowIndicator:a.narrowIndicator,inlineLabel:a.inlineLabel,noCaps:a.noCaps})),q=Z(()=>{const T=M.value,A=g.value;for(let _=0;_<T;_++)if(S[_].name.value===A)return!0;return!1}),H=Z(()=>`q-tabs__content--align-${p.value===!0?"left":b.value===!0?"justify":a.align}`),ee=Z(()=>`q-tabs row no-wrap items-center q-tabs--${p.value===!0?"":"not-"}scrollable q-tabs--${a.vertical===!0?"vertical":"horizontal"} q-tabs__arrows--${a.outsideArrows===!0?"outside":"inside"} q-tabs--mobile-with${a.mobileArrows===!0?"":"out"}-arrows`+(a.dense===!0?" q-tabs--dense":"")+(a.shrink===!0?" col-shrink":"")+(a.stretch===!0?" self-stretch":"")),Fe=Z(()=>"q-tabs__content scroll--mobile row no-wrap items-center self-stretch hide-scrollbar relative-position "+H.value+(a.contentClass!==void 0?` ${a.contentClass}`:"")),te=Z(()=>a.vertical===!0?{container:"height",content:"offsetHeight",scroll:"scrollHeight"}:{container:"width",content:"offsetWidth",scroll:"scrollWidth"}),xe=Z(()=>a.vertical!==!0&&s.lang.rtl===!0),Re=Z(()=>oi===!1&&xe.value===!0);je(xe,ze),je(()=>a.modelValue,T=>{De({name:T,setCurrent:!0,skipEmit:!0})}),je(()=>a.outsideArrows,re);function De({name:T,setCurrent:A,skipEmit:_}){g.value!==T&&(_!==!0&&a["onUpdate:modelValue"]!==void 0&&t("update:modelValue",T),(A===!0||a["onUpdate:modelValue"]===void 0)&&(We(g.value,T),g.value=T))}function re(){i(()=>{f.value&&Ze({width:f.value.offsetWidth,height:f.value.offsetHeight})})}function Ze(T){if(te.value===void 0||l.value===null)return;const A=T[te.value.container],_=Math.min(l.value[te.value.scroll],Array.prototype.reduce.call(l.value.children,(G,D)=>G+(D[te.value.content]||0),0)),L=A>0&&_>A;p.value=L,L===!0&&r(ze),b.value=A<parseInt(a.breakpoint,10)}function We(T,A){const _=T!=null&&T!==""?S.find(G=>G.name.value===T):null,L=A!=null&&A!==""?S.find(G=>G.name.value===A):null;if(He===!0)He=!1;else if(_&&L){const G=_.tabIndicatorRef.value,D=L.tabIndicatorRef.value;R!==null&&(clearTimeout(R),R=null),G.style.transition="none",G.style.transform="none",D.style.transition="none",D.style.transform="none";const F=G.getBoundingClientRect(),X=D.getBoundingClientRect();D.style.transform=a.vertical===!0?`translate3d(0,${F.top-X.top}px,0) scale3d(1,${X.height?F.height/X.height:1},1)`:`translate3d(${F.left-X.left}px,0,0) scale3d(${X.width?F.width/X.width:1},1,1)`,c(()=>{R=setTimeout(()=>{R=null,D.style.transition="transform .25s cubic-bezier(.4, 0, .2, 1)",D.style.transform="none"},70)})}L&&p.value===!0&&Ge(L.rootRef.value)}function Ge(T){const{left:A,width:_,top:L,height:G}=l.value.getBoundingClientRect(),D=T.getBoundingClientRect();let F=a.vertical===!0?D.top-L:D.left-A;if(F<0){l.value[a.vertical===!0?"scrollTop":"scrollLeft"]+=Math.floor(F),ze();return}F+=a.vertical===!0?D.height-G:D.width-_,F>0&&(l.value[a.vertical===!0?"scrollTop":"scrollLeft"]+=Math.ceil(F),ze())}function ze(){const T=l.value;if(T===null)return;const A=T.getBoundingClientRect(),_=a.vertical===!0?T.scrollTop:Math.abs(T.scrollLeft);xe.value===!0?(h.value=Math.ceil(_+A.width)<T.scrollWidth-1,y.value=_>0):(h.value=_>0,y.value=a.vertical===!0?Math.ceil(_+A.height)<T.scrollHeight:Math.ceil(_+A.width)<T.scrollWidth)}function va(T){K!==null&&clearInterval(K),K=setInterval(()=>{kn(T)===!0&&le()},5)}function Ia(){va(Re.value===!0?Number.MAX_SAFE_INTEGER:0)}function _a(){va(Re.value===!0?0:Number.MAX_SAFE_INTEGER)}function le(){K!==null&&(clearInterval(K),K=null)}function Mn(T,A){const _=Array.prototype.filter.call(l.value.children,X=>X===A||X.matches&&X.matches(".q-tab.q-focusable")===!0),L=_.length;if(L===0)return;if(T===36)return Ge(_[0]),_[0].focus(),!0;if(T===35)return Ge(_[L-1]),_[L-1].focus(),!0;const G=T===(a.vertical===!0?38:37),D=T===(a.vertical===!0?40:39),F=G===!0?-1:D===!0?1:void 0;if(F!==void 0){const X=xe.value===!0?-1:1,oe=_.indexOf(A)+F*X;return oe>=0&&oe<L&&(Ge(_[oe]),_[oe].focus({preventScroll:!0})),!0}}const An=Z(()=>Re.value===!0?{get:T=>Math.abs(T.scrollLeft),set:(T,A)=>{T.scrollLeft=-A}}:a.vertical===!0?{get:T=>T.scrollTop,set:(T,A)=>{T.scrollTop=A}}:{get:T=>T.scrollLeft,set:(T,A)=>{T.scrollLeft=A}});function kn(T){const A=l.value,{get:_,set:L}=An.value;let G=!1,D=_(A);const F=T<D?-1:1;return D+=F*5,D<0?(G=!0,D=0):(F===-1&&D<=T||F===1&&D>=T)&&(G=!0,D=T),L(A,D),ze(),G}function Ca(T,A){for(const _ in T)if(T[_]!==A[_])return!1;return!0}function wn(){let T=null,A={matchedLen:0,queryDiff:9999,hrefLen:0};const _=S.filter(F=>F.routeData!==void 0&&F.routeData.hasRouterLink.value===!0),{hash:L,query:G}=n.$route,D=Object.keys(G).length;for(const F of _){const X=F.routeData.exact.value===!0;if(F.routeData[X===!0?"linkIsExactActive":"linkIsActive"].value!==!0)continue;const{hash:oe,query:Mt,matched:Fn,href:xn}=F.routeData.resolvedLink.value,At=Object.keys(Mt).length;if(X===!0){if(oe!==L||At!==D||Ca(G,Mt)===!1)continue;T=F.name.value;break}if(oe!==""&&oe!==L||At!==0&&Ca(Mt,G)===!1)continue;const me={matchedLen:Fn.length,queryDiff:D-At,hrefLen:xn.length-oe.length};if(me.matchedLen>A.matchedLen){T=F.name.value,A=me;continue}else if(me.matchedLen!==A.matchedLen)continue;if(me.queryDiff<A.queryDiff)T=F.name.value,A=me;else if(me.queryDiff!==A.queryDiff)continue;me.hrefLen>A.hrefLen&&(T=F.name.value,A=me)}if(T===null&&S.some(F=>F.routeData===void 0&&F.name.value===g.value)===!0){He=!1;return}De({name:T,setCurrent:!0})}function vn(T){if(o(),w.value!==!0&&f.value!==null&&T.target&&typeof T.target.closest=="function"){const A=T.target.closest(".q-tab");A&&f.value.contains(A)===!0&&(w.value=!0,p.value===!0&&Ge(A))}}function In(){u(()=>{w.value=!1},30)}function qe(){xa.avoidRouteWatcher===!1?d(wn):m()}function Fa(){if($===void 0){const T=je(()=>n.$route.fullPath,qe);$=()=>{T(),$=void 0}}}function _n(T){S.push(T),M.value++,re(),T.routeData===void 0||n.$route===void 0?d(()=>{if(p.value===!0){const A=g.value,_=A!=null&&A!==""?S.find(L=>L.name.value===A):null;_&&Ge(_.rootRef.value)}}):(Fa(),T.routeData.hasRouterLink.value===!0&&qe())}function Cn(T){S.splice(S.indexOf(T),1),M.value--,re(),$!==void 0&&T.routeData!==void 0&&(S.every(A=>A.routeData===void 0)===!0&&$(),qe())}const xa={currentModel:g,tabProps:W,hasFocus:w,hasActiveTab:q,registerTab:_n,unregisterTab:Cn,verifyRouteModel:qe,updateModel:De,onKbdNavigate:Mn,avoidRouteWatcher:!1};Gn(qa,xa);function Ra(){R!==null&&clearTimeout(R),le(),$!==void 0&&$()}let Da,He;return Xa(Ra),zn(()=>{Da=$!==void 0,Ra()}),Nn(()=>{Da===!0&&(Fa(),He=!0,qe()),re()}),()=>V("div",{ref:f,class:ee.value,role:"tablist",onFocusin:vn,onFocusout:In},[V(li,{onResize:Ze}),V("div",{ref:l,class:Fe.value,onScroll:ze},Bn(e.default)),V(et,{class:"q-tabs__arrow q-tabs__arrow--left absolute q-tab__icon"+(h.value===!0?"":" q-tabs__arrow--faded"),name:a.leftIcon||s.iconSet.tabs[a.vertical===!0?"up":"left"],onMousedownPassive:Ia,onTouchstartPassive:Ia,onMouseupPassive:le,onMouseleavePassive:le,onTouchendPassive:le}),V(et,{class:"q-tabs__arrow q-tabs__arrow--right absolute q-tab__icon"+(y.value===!0?"":" q-tabs__arrow--faded"),name:a.rightIcon||s.iconSet.tabs[a.vertical===!0?"down":"right"],onMousedownPassive:_a,onTouchstartPassive:_a,onMouseupPassive:le,onMouseleavePassive:le,onTouchendPassive:le})])}});function Va(){return Ke().useSquads?new v(Ke().vaultPDA):Be().publicKey.value??new v("")}var P=Wn();async function bi(a){const[e]=await O().connection.getProgramAccounts(qn,{filters:[{memcmp:{offset:30,bytes:a.toBase58()}}]});return e?.pubkey}function Ti(a){return Ot.PlayerName.findAddress(B().playerProfileProgram.value,a)[0]}function Pi(a){return ae.ProfileFactionAccount.findAddress(B().profileFactionProgram.value,a)[0]}async function Mi(a){return await P.readFromRPCOrError(O().connection,B().playerProfileProgram.value,a,Ot.PlayerProfile,"confirmed")}async function Ai(a){return await P.readFromRPCOrError(O().connection,B().playerProfileProgram.value,a,Ot.PlayerName,"confirmed")}async function ki(a){return await P.readFromRPCOrError(O().connection,B().profileFactionProgram.value,a,ae.ProfileFactionAccount,"confirmed")}const C=new v("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"),It=new v("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"),wi=new v("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");new v("So11111111111111111111111111111111111111112");new v("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP");class vi extends Error{constructor(e){super(e)}}class Ii extends vi{constructor(){super(...arguments),this.name="TokenOwnerOffCurveError"}}const _i=Ve.struct([Ve.u32("mintAuthorityOption"),Ea("mintAuthority"),ci("supply"),Ve.u8("decimals"),ui("isInitialized"),Ve.u32("freezeAuthorityOption"),Ea("freezeAuthority")]);_i.span;function Qa(a,e,t=!1,n=C,s=wi){if(!t&&!v.isOnCurve(e.toBuffer()))throw new Ii;const[i]=v.findProgramAddressSync([e.toBuffer(),n.toBuffer(),a.toBuffer()],s);return i}var Ya=Xn(),Ci=Object.create,$t=Object.defineProperty,Fi=Object.getOwnPropertyDescriptor,xi=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Ja=a=>{throw TypeError(a)},Ri=(a,e,t)=>e in a?$t(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Di=(a,e)=>$t(a,"name",{value:e,configurable:!0}),Ei=a=>[,,,Ci(null)],Ui=["class","method","getter","setter","accessor","field","value","get","set"],es=a=>a!==void 0&&typeof a!="function"?Ja("Function expected"):a,Oi=(a,e,t,n,s)=>({kind:Ui[a],name:e,metadata:n,addInitializer:i=>t._?Ja("Already initialized"):s.push(es(i||null))}),$i=(a,e)=>Ri(e,xi("metadata"),a[3]),Ki=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Li=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Fi(s,t));Di(s,t);for(var g=n.length-1;g>=0;g--)u=Oi(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,es(r)&&(s=r);return $i(a,s),l&&$t(s,t,l),d?o^4?i:l:s},ts,Kt;ts=[P.staticImplements()];var j;let tt=(j=class{constructor(e,t,n){this._data=e,this._key=t,this._items=n}get data(){return this._data}get key(){return this._key}get items(){return this._items||[]}static findAddress(e,t){return v.findProgramAddressSync([U.from("ProgressionConfig"),t.toBuffer()],e.programId)}static registerProgressionConfig(e,t,n,s,i){const r=j.findAddress(e,s);return{configKey:r,instructions:async c=>[{instruction:await e.methods.registerProgressionConfig({...i,dailyLpLimit:i.dailyLpLimit??null,dailyCouncilRankXpLimit:i.dailyCouncilRankXpLimit??null,dailyPilotXpLimit:i.dailyPilotXpLimit??null,dailyDataRunningXpLimit:i.dailyDataRunningXpLimit??null,dailyMiningXpLimit:i.dailyMiningXpLimit??null,dailyCraftingXpLimit:i.dailyCraftingXpLimit??null}).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:s},funder:c.publicKey(),progressionConfig:r[0],systemProgram:k.programId}).instruction(),signers:[t,c]}]}}static updateProgressionConfig(e,t,n,s,i){return async()=>[{instruction:await e.methods.updateProgressionConfig({keyIndex:i.keyIndex,items:i.items??null,dailyLpLimit:i.dailyLpLimit??null,dailyCouncilRankXpLimit:i.dailyCouncilRankXpLimit??null,dailyPilotXpLimit:i.dailyPilotXpLimit??null,dailyDataRunningXpLimit:i.dailyDataRunningXpLimit??null,dailyMiningXpLimit:i.dailyMiningXpLimit??null,dailyCraftingXpLimit:i.dailyCraftingXpLimit??null}).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:s},progressionConfig:j.findAddress(e,s)[0],systemProgram:k.programId}).instruction(),signers:[t]}]}static deregisterProgressionConfig(e,t,n,s,i,r){return async c=>[{instruction:await e.methods.deregisterProgressionConfig(r).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},fundsTo:s==="funder"?c.publicKey():s,progressionConfig:j.findAddress(e,i)[0],systemProgram:k.programId}).instruction(),signers:[t,c]}]}static decodeData(e,t){return P.decodeAccountWithRemaining(e,t,j,(n,s)=>Array(s.numItems).fill(0).map((i,r)=>t.coder.types.decode("ProgressionItem",n.subarray(j.PROGRESSION_ITEM_DATA_SIZE*r).subarray(0,j.PROGRESSION_ITEM_DATA_SIZE))))}},j.ACCOUNT_NAME="progressionConfig",j.MIN_DATA_SIZE=91,j.PROGRESSION_ITEM_DATA_SIZE=4,j);Kt=Ei();tt=Li(Kt,0,"ProgressionConfig",ts,tt);Ki(Kt,1,tt);let pe=tt;var Gi=Object.create,Lt=Object.defineProperty,zi=Object.getOwnPropertyDescriptor,Ni=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),as=a=>{throw TypeError(a)},Bi=(a,e,t)=>e in a?Lt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Wi=(a,e)=>Lt(a,"name",{value:e,configurable:!0}),qi=a=>[,,,Gi(null)],Xi=["class","method","getter","setter","accessor","field","value","get","set"],ss=a=>a!==void 0&&typeof a!="function"?as("Function expected"):a,Zi=(a,e,t,n,s)=>({kind:Xi[a],name:e,metadata:n,addInitializer:i=>t._?as("Already initialized"):s.push(ss(i||null))}),Hi=(a,e)=>Bi(e,Ni("metadata"),a[3]),ji=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Vi=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&zi(s,t));Wi(s,t);for(var g=n.length-1;g>=0;g--)u=Zi(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,ss(r)&&(s=r);return Hi(a,s),l&&Lt(s,t,l),d?o^4?i:l:s},ns,Gt;ns=[P.staticImplements()];var he;let at=(he=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static calculateCraftingDuration(e,t,n,s=0,i=1){if(n.isZero())throw new Error("Invalid value for numCrew");const r=t.div(n),c=t.mod(n),u=r.add(E.min(c,new E(1))).mul(e),o=Number(u);if(s>=o)return new E(o);{const d=Math.max(0,s),f=(o-d)/i;return new E(d+f)}}static calculateUpgradeDuration(e,t,n){if(n.isZero())throw new Error("Invalid value for numCrew");const s=t.div(n),i=t.mod(n);return s.add(E.min(i,new E(1))).mul(e)}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("CraftingInstance"),t.toBuffer(),n.toBuffer()],e.programId)}static createCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l){const g=Ya.CraftingProcess.findAddress(t,d,m,l.craftingId)[0];return async p=>[{instruction:await e.methods.createCraftingProcess(l).accountsStrict({funder:p.publicKey(),starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:r},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:u,key:n.publicKey(),profile:s,profileFaction:i},gameState:o},craftingInstance:this.findAddress(e,r,g)[0],craftingProcess:g,craftingFacility:d,craftingRecipe:m,craftingDomain:f,craftingProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[n,p]}]}static depositCraftingIngredient(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M){return async()=>[{instruction:await e.methods.depositCraftingIngredient(M).accountsStrict({starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:c},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:b,key:s.publicKey(),profile:i,profileFaction:r},gameState:S},craftingInstance:o,craftingProcess:d,craftingFacility:m,craftingRecipe:f,cargoPodFrom:l,cargoType:g,cargoStatsDefinition:p,tokenFrom:h,tokenTo:y,craftingProgram:n.programId,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[s]}]}static withdrawCraftingIngredient(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w){return async()=>[{instruction:await e.methods.withdrawCraftingIngredient(w).accountsStrict({starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:c},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:S,key:s.publicKey(),profile:i,profileFaction:r},gameState:M},craftingInstance:o,craftingProcess:d,craftingFacility:m,craftingRecipe:f,cargoPodTo:l,cargoType:g,cargoStatsDefinition:p,tokenFrom:h,tokenTo:y,tokenMint:b,craftingProgram:n.programId,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[s]}]}static startCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){const S=[n],M=[];return p&&h&&y&&b&&(S.map(w=>w.publicKey().toBase58()).includes(h.publicKey().toBase58())||S.push(h),M.push({pubkey:p,isSigner:!1,isWritable:!1},{pubkey:h.publicKey(),isSigner:!0,isWritable:!0},{pubkey:y,isSigner:!1,isWritable:!0},{pubkey:b,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1})),async()=>[{instruction:await e.methods.startCraftingProcess(g).accountsStrict({starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:r},craftingInstance:u,craftingProcess:o,craftingRecipe:m,craftingFacility:d,gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:f,key:n.publicKey(),profile:s,profileFaction:i},gameState:l},craftingProgram:t.programId}).remainingAccounts(M).instruction(),signers:S}]}static stopCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h){const y=[];return p&&h&&y.push({pubkey:p,isSigner:!1,isWritable:!0},{pubkey:h,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1}),async()=>[{instruction:await e.methods.stopCraftingProcess(g).accountsStrict({starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:r},craftingInstance:u,craftingProcess:o,craftingRecipe:m,craftingFacility:d,gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:f,key:n.publicKey(),profile:s,profileFaction:i},gameState:l},craftingProgram:t.programId}).remainingAccounts(y).instruction(),signers:[n]}]}static cancelCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g){return async p=>[{instruction:await e.methods.cancelCraftingProcess(g).accountsStrict({fundsTo:r==="funder"?p.publicKey():r,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:c},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:f,key:n.publicKey(),profile:s,profileFaction:i},gameState:l},craftingInstance:o,craftingProcess:d,craftingFacility:m,craftingProgram:t.programId}).instruction(),signers:[n]}]}static claimCraftingNonConsumables(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){return async()=>[{instruction:await e.methods.claimCraftingNonConsumables(b).accountsStrict({starbaseAndStarbasePlayer:{starbase:i,starbasePlayer:s},gameAccounts:{gameId:l,gameState:g},craftingInstance:r,craftingProcess:c,craftingFacility:u,craftingRecipe:o,cargoPodTo:d,cargoType:m,cargoStatsDefinition:f,tokenFrom:p,tokenTo:h,tokenMint:y,craftingProgram:n.programId,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[]}]}static burnCraftingConsumables(e,t,n,s,i,r,c,u,o,d,m,f,l){return async()=>[{instruction:await e.methods.burnCraftingConsumables(l).accountsStrict({starbaseAndStarbasePlayer:{starbase:s,starbasePlayer:n},gameAccounts:{gameId:o,gameState:d},craftingInstance:i,craftingProcess:r,craftingFacility:c,craftingRecipe:u,tokenFrom:m,tokenMint:f,craftingProgram:t.programId,tokenProgram:C}).instruction(),signers:[]}]}static claimCraftingOutputs(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){return async()=>[{instruction:await e.methods.claimCraftingOutputs(b).accountsStrict({starbaseAndStarbasePlayer:{starbase:i,starbasePlayer:s},gameAccounts:{gameId:g,gameState:p},craftingInstance:r,craftingProcess:c,craftingFacility:u,craftingRecipe:o,craftableItem:d,cargoPodTo:m,cargoType:f,cargoStatsDefinition:l,tokenFrom:h,tokenTo:y,craftingProgram:n.programId,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[]}]}static closeCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w,R,K,$){const W=[];return K&&$&&W.push({pubkey:K,isSigner:!1,isWritable:!0},{pubkey:$,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1}),async q=>[{instruction:await e.methods.closeCraftingProcess(R).accountsStrict({fundsTo:c==="funder"?q.publicKey():c,starbaseAndStarbasePlayer:{starbase:o,starbasePlayer:u},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:M,key:s.publicKey(),profile:i,profileFaction:r},gameState:w},craftingInstance:d,craftingProcess:m,craftingRecipe:l,craftingFacility:f,craftingXpAccounts:{userPointsAccount:g,pointsCategory:p,pointsModifierAccount:h},councilRankXpAccounts:{userPointsAccount:y,pointsCategory:b,pointsModifierAccount:S},progressionConfig:pe.findAddress(e,M)[0],pointsProgram:n.programId,craftingProgram:t.programId}).remainingAccounts(W).instruction(),signers:[s]}]}static decodeData(e,t){return P.decodeAccount(e,t,he)}},he.ACCOUNT_NAME="craftingInstance",he.MIN_DATA_SIZE=85,he);Gt=qi();at=Vi(Gt,0,"CraftingInstance",ns,at);ji(Gt,1,at);let fe=at;var Qi=Object.create,zt=Object.defineProperty,Yi=Object.getOwnPropertyDescriptor,Ji=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),is=a=>{throw TypeError(a)},er=(a,e,t)=>e in a?zt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,tr=(a,e)=>zt(a,"name",{value:e,configurable:!0}),ar=a=>[,,,Qi(null)],sr=["class","method","getter","setter","accessor","field","value","get","set"],rs=a=>a!==void 0&&typeof a!="function"?is("Function expected"):a,nr=(a,e,t,n,s)=>({kind:sr[a],name:e,metadata:n,addInitializer:i=>t._?is("Already initialized"):s.push(rs(i||null))}),ir=(a,e)=>er(e,Ji("metadata"),a[3]),rr=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},or=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Yi(s,t));tr(s,t);for(var g=n.length-1;g>=0;g--)u=nr(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,rs(r)&&(s=r);return ir(a,s),l&&zt(s,t,l),d?o^4?i:l:s},os,Nt;const cr=9*2;os=[P.staticImplements()];var ye;let st=(ye=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t,n,s){return v.findProgramAddressSync([U.from("DisbandedFleet"),t.toBuffer(),n.toBuffer(),U.from(s)],e.programId)}static disbandedFleetToEscrow(e,t,n,s,i,r,c,u,o,d,m,f){return async l=>[{instruction:await e.methods.disbandedFleetToEscrow(f).accountsStrict({gameAccountsAndProfile:{gameAndProfileAndFaction:{key:t.publicKey(),profile:n,profileFaction:s,gameId:d},gameState:m},funder:l.publicKey(),disbandedFleet:i,fleetShips:r,ship:c,starbaseAndStarbasePlayer:{starbase:o,starbasePlayer:u},systemProgram:k.programId}).instruction(),signers:[t,l]}]}static closeDisbandedFleet(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.closeDisbandedFleet(c).accountsStrict({key:t.publicKey(),playerProfile:n,fundsTo:s==="funder"?u.publicKey():s,disbandedFleet:i,fleetShips:r}).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccount(e,t,ye)}},ye.ACCOUNT_NAME="disbandedFleet",ye.MIN_DATA_SIZE=137+cr+1,ye);Nt=ar();st=or(Nt,0,"DisbandedFleet",os,st);rr(Nt,1,st);let _t=st;var ur=Object.create,Bt=Object.defineProperty,dr=Object.getOwnPropertyDescriptor,lr=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),cs=a=>{throw TypeError(a)},mr=(a,e,t)=>e in a?Bt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,fr=(a,e)=>Bt(a,"name",{value:e,configurable:!0}),gr=a=>[,,,ur(null)],pr=["class","method","getter","setter","accessor","field","value","get","set"],us=a=>a!==void 0&&typeof a!="function"?cs("Function expected"):a,hr=(a,e,t,n,s)=>({kind:pr[a],name:e,metadata:n,addInitializer:i=>t._?cs("Already initialized"):s.push(us(i||null))}),yr=(a,e)=>mr(e,lr("metadata"),a[3]),Sr=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},br=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&dr(s,t));fr(s,t);for(var g=n.length-1;g>=0;g--)u=hr(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,us(r)&&(s=r);return yr(a,s),l&&Bt(s,t,l),d?o^4?i:l:s},ds,Wt;const Tr=46;ds=[P.staticImplements()];var Se;let nt=(Se=class{constructor(e,t,n){this._data=e,this._key=t,this._fleetShips=n}get data(){return this._data}get key(){return this._key}get fleetShips(){return this._fleetShips||[]}static findAddress(e,t){return v.findProgramAddressSync([U.from("FleetShips"),t.toBuffer()],e.programId)}static decodeData(e,t){return P.decodeAccountWithRemaining(e,t,Se,(s,i)=>Array(i.fleetShipsInfoCount).fill(0).map((r,c)=>t.coder.types.decode("FleetShipsInfo",s.subarray(48*c).subarray(0,48))))}},Se.ACCOUNT_NAME="fleetShips",Se.MIN_DATA_SIZE=Tr,Se);Wt=gr();nt=br(Wt,0,"FleetShips",ds,nt);Sr(Wt,1,nt);let Ee=nt;var Pr=Object.create,qt=Object.defineProperty,Mr=Object.getOwnPropertyDescriptor,Ar=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),ls=a=>{throw TypeError(a)},kr=(a,e,t)=>e in a?qt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,wr=(a,e)=>qt(a,"name",{value:e,configurable:!0}),vr=a=>[,,,Pr(null)],Ir=["class","method","getter","setter","accessor","field","value","get","set"],ms=a=>a!==void 0&&typeof a!="function"?ls("Function expected"):a,_r=(a,e,t,n,s)=>({kind:Ir[a],name:e,metadata:n,addInitializer:i=>t._?ls("Already initialized"):s.push(ms(i||null))}),Cr=(a,e)=>kr(e,Ar("metadata"),a[3]),Fr=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},xr=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Mr(s,t));wr(s,t);for(var g=n.length-1;g>=0;g--)u=_r(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,ms(r)&&(s=r);return Cr(a,s),l&&qt(s,t,l),d?o^4?i:l:s},fs,Xt;fs=[P.staticImplements()];var se;let it=(se=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("MineItem"),t.toBuffer(),n.toBuffer()],e.programId)}static registerMineItem(e,t,n,s,i,r){const c=se.findAddress(e,i,s);return{mineItemKey:c,instructions:async u=>[{instruction:await e.methods.registerMineItem(r).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},funder:u.publicKey(),mineItem:c[0],mint:s,systemProgram:k.programId}).instruction(),signers:[t,u]}]}}static fundMineItemBank(e,t,n,s,i){const r=Qa(t,e,!0);return P.transferToTokenAccount(n,s,r,i)}static updateMineItem(e,t,n,s,i,r){const c={...r,name:r.name==null?null:r.name,resourceHardness:r.resourceHardness==null?null:r.resourceHardness};return async()=>[{instruction:await e.methods.updateMineItem(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},mineItem:s}).instruction(),signers:[t]}]}static drainMineItemBank(e,t,n,s,i,r,c,u,o){return async d=>[{instruction:await e.methods.drainMineItemBank(o).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},fundsTo:s==="funder"?d.publicKey():s,mineItem:i,tokenFrom:c,tokenTo:u,tokenProgram:C}).instruction(),signers:[t]}]}static deregisterMineItem(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.deregisterMineItem(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},fundsTo:s==="funder"?u.publicKey():s,mineItem:i}).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccount(e,t,se)}},se.ACCOUNT_NAME="mineItem",se.MIN_DATA_SIZE=148,se.RESOURCE_HARDNESS_DECIMALS=100,se);Xt=vr();it=xr(Xt,0,"MineItem",fs,it);Fr(Xt,1,it);let gs=it;var Rr=Object.create,Zt=Object.defineProperty,Dr=Object.getOwnPropertyDescriptor,Er=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),ps=a=>{throw TypeError(a)},Ur=(a,e,t)=>e in a?Zt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Or=(a,e)=>Zt(a,"name",{value:e,configurable:!0}),$r=a=>[,,,Rr(null)],Kr=["class","method","getter","setter","accessor","field","value","get","set"],hs=a=>a!==void 0&&typeof a!="function"?ps("Function expected"):a,Lr=(a,e,t,n,s)=>({kind:Kr[a],name:e,metadata:n,addInitializer:i=>t._?ps("Already initialized"):s.push(hs(i||null))}),Gr=(a,e)=>Ur(e,Er("metadata"),a[3]),zr=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Nr=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Dr(s,t));Or(s,t);for(var g=n.length-1;g>=0;g--)u=Lr(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,hs(r)&&(s=r);return Gr(a,s),l&&Zt(s,t,l),d?o^4?i:l:s},ys,Ht;ys=[P.staticImplements()];var ne;let rt=(ne=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("Resource"),t.toBuffer(),n.toBuffer()],e.programId)}static registerResource(e,t,n,s,i,r,c){const u=ne.findAddress(e,i,s);return{resourceKey:u,instructions:async o=>[{instruction:await e.methods.registerResource(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},funder:o.publicKey(),resource:u[0],location:s,mineItem:i,systemProgram:k.programId}).instruction(),signers:[t,o]}]}}static updateResource(e,t,n,s,i,r,c){return async()=>[{instruction:await e.methods.updateResource({...c,systemRichness:c.systemRichness==null?null:c.systemRichness}).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},mineItem:i,resource:s}).instruction(),signers:[t]}]}static deregisterResource(e,t,n,s,i,r,c,u,o){return async d=>[{instruction:await e.methods.deregisterResource(o).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:u},fundsTo:s==="funder"?d.publicKey():s,resource:i,mineItem:r,location:c}).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccount(e,t,ne)}},ne.ACCOUNT_NAME="resource",ne.MIN_DATA_SIZE=125,ne.SYSTEM_RICHNESS_DECIMALS=100,ne);Ht=$r();rt=Nr(Ht,0,"Resource",ys,rt);zr(Ht,1,rt);let Ss=rt;var Br=Object.create,jt=Object.defineProperty,Wr=Object.getOwnPropertyDescriptor,qr=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),bs=a=>{throw TypeError(a)},Xr=(a,e,t)=>e in a?jt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Zr=(a,e)=>jt(a,"name",{value:e,configurable:!0}),Hr=a=>[,,,Br(null)],jr=["class","method","getter","setter","accessor","field","value","get","set"],Ts=a=>a!==void 0&&typeof a!="function"?bs("Function expected"):a,Vr=(a,e,t,n,s)=>({kind:jr[a],name:e,metadata:n,addInitializer:i=>t._?bs("Already initialized"):s.push(Ts(i||null))}),Qr=(a,e)=>Xr(e,qr("metadata"),a[3]),Yr=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Jr=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Wr(s,t));Zr(s,t);for(var g=n.length-1;g>=0;g--)u=Vr(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Ts(r)&&(s=r);return Qr(a,s),l&&jt(s,t,l),d?o^4?i:l:s},Ps,Vt;const Qe=(a,e)=>Math.sqrt(e[0].sub(a[0]).sqr().add(e[1].sub(a[1]).sqr()).toNumber()),Oa=32+8*2+1;function $a(a){return a.isJumpPoint?1:0}Ps=[P.staticImplements()];var ie;let ot=(ie=class{constructor(e,t,n){this._data=e,this._key=t,this._connections=n}get data(){return this._data}get key(){return this._key}get connections(){return this._connections}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("Sector"),t.toBuffer(),n[0].toTwos(64).toArrayLike(U,"le",8),n[1].toTwos(64).toArrayLike(U,"le",8)],e.programId)}static decodeData(e,t){return P.decodeAccountWithRemaining(e,t,ie,(n,s)=>Array(s.numConnections).fill(0).map((i,r)=>t.coder.types.decode("SectorConnection",n.subarray(Oa*r).subarray(0,Oa))))}static registerSector(e,t,n,s,i,r,c,u){const o=ie.findAddress(e,i,r);return{sectorKey:o,instructions:async d=>[{instruction:await e.methods.registerSector(r,P.stringToByteArray(c,64),u).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},funder:d.publicKey(),discoverer:s,sector:o[0],systemProgram:k.programId}).instruction(),signers:[t,d]}]}}static discoverSector(e,t,n,s,i,r,c,u,o){const d=ie.findAddress(e,r,u);return{sectorKey:d,instructions:async m=>[{instruction:await e.methods.discoverSector({coordinates:u,keyIndex:o}).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:r},gameState:c},funder:m.publicKey(),sector:d[0],systemProgram:k.programId}).instruction(),signers:[t,m]}]}}static addConnection(e,t,n,s,i,r,c,u,o,d,m){return async f=>[{instruction:await e.methods.addConnection(c,$a(u),o,$a(d),m).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},funder:f.publicKey(),sector1:s,sector2:i,systemProgram:k.programId}).instruction(),signers:[t,f]}]}static removeConnection(e,t,n,s,i,r,c,u){const o=i.connections.findIndex(m=>m.connectionSector.equals(r.key)),d=r.connections.findIndex(m=>m.connectionSector.equals(i.key));if(o===-1||d===-1)throw new Error("Connection not found");return async m=>[{instruction:await e.methods.removeConnection(o,d,c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:u},fundsTo:s==="funder"?m.publicKey():s,sector1:i.key,sector2:r.key,systemProgram:k.programId}).instruction(),signers:[t]}]}},ie.ACCOUNT_NAME="sector",ie.MIN_DATA_SIZE=41+8*2+32+64+2+2+2+2+2+8+4+1,ie);Vt=Hr();ot=Jr(Vt,0,"Sector",Ps,ot);Yr(Vt,1,ot);let eo=ot;var to=Object.create,Qt=Object.defineProperty,ao=Object.getOwnPropertyDescriptor,so=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Ms=a=>{throw TypeError(a)},no=(a,e,t)=>e in a?Qt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,io=(a,e)=>Qt(a,"name",{value:e,configurable:!0}),ro=a=>[,,,to(null)],oo=["class","method","getter","setter","accessor","field","value","get","set"],As=a=>a!==void 0&&typeof a!="function"?Ms("Function expected"):a,co=(a,e,t,n,s)=>({kind:oo[a],name:e,metadata:n,addInitializer:i=>t._?Ms("Already initialized"):s.push(As(i||null))}),uo=(a,e)=>no(e,so("metadata"),a[3]),lo=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},mo=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&ao(s,t));io(s,t);for(var g=n.length-1;g>=0;g--)u=co(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,As(r)&&(s=r);return uo(a,s),l&&Qt(s,t,l),d?o^4?i:l:s},ks,Yt,ce=(a=>(a[a.XxSmall=1]="XxSmall",a[a.XSmall=2]="XSmall",a[a.Small=3]="Small",a[a.Medium=4]="Medium",a[a.Large=5]="Large",a[a.Capital=6]="Capital",a[a.Commander=7]="Commander",a[a.Titan=9]="Titan",a))(ce||{});const fo=24,go=36,po=32,ws=fo+go+po,ho=186+ws;ks=[P.staticImplements()];var be;let ct=(be=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static registerShip(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.registerShip(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},funder:u.publicKey(),ship:s.publicKey(),mint:i,systemProgram:k.programId}).instruction(),signers:[t,u,s]}]}static updateShip(e,t,n,s,i,r){return async()=>[{instruction:await e.methods.updateShip(r).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},ship:s}).instruction(),signers:[t]}]}static invalidateShip(e,t,n,s,i,r){return async()=>[{instruction:await e.methods.invalidateShip(r).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},ship:s}).instruction(),signers:[t]}]}static setNextShip(e,t,n,s,i,r,c){return async()=>[{instruction:await e.methods.setNextShip(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},ship:s,nextShip:i}).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccount(e,t,be)}},be.ACCOUNT_NAME="ship",be.MIN_DATA_SIZE=ho,be);Yt=ro();ct=mo(Yt,0,"Ship",ks,ct);lo(Yt,1,ct);let yo=ct;var So=Object.create,Jt=Object.defineProperty,bo=Object.getOwnPropertyDescriptor,To=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),vs=a=>{throw TypeError(a)},Po=(a,e,t)=>e in a?Jt(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Mo=(a,e)=>Jt(a,"name",{value:e,configurable:!0}),Ao=a=>[,,,So(null)],ko=["class","method","getter","setter","accessor","field","value","get","set"],Is=a=>a!==void 0&&typeof a!="function"?vs("Function expected"):a,wo=(a,e,t,n,s)=>({kind:ko[a],name:e,metadata:n,addInitializer:i=>t._?vs("Already initialized"):s.push(Is(i||null))}),vo=(a,e)=>Po(e,To("metadata"),a[3]),Io=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},_o=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&bo(s,t));Mo(s,t);for(var g=n.length-1;g>=0;g--)u=wo(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Is(r)&&(s=r);return vo(a,s),l&&Jt(s,t,l),d?o^4?i:l:s},_s,ea;const Ka=0,La=20*100,Ne=1e8,z=5e7,Co=169+(2*8+4*2)+8+8+ws+32+32+32+8+32+1+1,Ct=100,Xe=1e4,Ga=1e6;_s=[P.staticImplements()];var x;let ut=(x=class{constructor(e,t,n){this._data=e,this._key=t,this._state=n}get data(){return this._data}get key(){return this._key}get state(){return this._state}static findAddress(e,t,n,s){return v.findProgramAddressSync([U.from("Fleet"),t.toBuffer(),n.toBuffer(),U.from(s)],e.programId)}static getFleetSize(e){return e.xxSmall*ce.XxSmall+e.xSmall*ce.XSmall+e.small*ce.Small+e.medium*ce.Medium+e.large*ce.Large+e.capital*ce.Capital+e.commander*ce.Commander+e.titan*ce.Titan}static calculateWarpTime(e,t){return e.movementStats.warpSpeed>0?t/(e.movementStats.warpSpeed/Ga):0}static calculateWarpTimeWithCoords(e,t,n){return this.calculateWarpTime(e,Qe(t,n))}static calculateWarpFuelBurnWithDistance(e,t){return t*(e.movementStats.warpFuelConsumptionRate/Ct)}static calculateWarpFuelBurnWithCoords(e,t,n){return this.calculateWarpFuelBurnWithDistance(e,Qe(t,n))}static calculateSubwarpTime(e,t){return e.movementStats.subwarpSpeed>0?t/(e.movementStats.subwarpSpeed/Ga):0}static calculateSubwarpTimeWithCoords(e,t,n){return this.calculateSubwarpTime(e,Qe(t,n))}static calculateSubwarpFuelBurnWithDistance(e,t){return t*(e.movementStats.subwarpFuelConsumptionRate/Ct)}static calculateSubwarpFuelBurnWithCoords(e,t,n){return this.calculateSubwarpFuelBurnWithDistance(e,Qe(t,n))}static calculateAsteroidMiningFoodDuration(e,t){return e.cargoStats.foodConsumptionRate>0?t/(e.cargoStats.foodConsumptionRate/Xe):0}static calculateAsteroidMiningFoodToConsume(e,t,n){const s=x.calculateAsteroidMiningFoodDuration(e,t),r=Math.min(n,s)*(e.cargoStats.foodConsumptionRate/Xe);return r>0?t>r?r:t:0}static calculateAsteroidMiningAmmoDuration(e,t){return e.cargoStats.ammoConsumptionRate>0?t/(e.cargoStats.ammoConsumptionRate/Xe):0}static calculateAsteroidMiningAmmoToConsume(e,t,n){const s=x.calculateAsteroidMiningAmmoDuration(e,t),r=Math.min(n,s)*(e.cargoStats.ammoConsumptionRate/Xe);return r>0?t>r?r:t:0}static applyAsteroidMiningRatePenalty(e,t){return t>=1?0:(1-t)*e}static calculateAsteroidMiningEmissionRateBareBones(e,t,n,s=0){const i=t/gs.RESOURCE_HARDNESS_DECIMALS;if(i>0){const r=n/Ss.SYSTEM_RICHNESS_DECIMALS,c=e.cargoStats.miningRate/Xe*r/i;return x.applyAsteroidMiningRatePenalty(c,s)}return 0}static calculateAsteroidMiningEmissionRate(e,t,n,s=0){return x.calculateAsteroidMiningEmissionRateBareBones(e,t.resourceHardness,n.systemRichness,s)}static calculateAsteroidMiningResourceExtractionDurationBareBones(e,t,n,s,i=0){const r=x.calculateAsteroidMiningEmissionRateBareBones(e,t,n,i);return r>0?s/r:0}static calculateAsteroidMiningResourceExtractionDuration(e,t,n,s){return x.calculateAsteroidMiningResourceExtractionDurationBareBones(e,t.resourceHardness,n.systemRichness,s)}static calculateAsteroidMiningResourceToExtractBareBones(e,t,n,s,i,r=0){const c=x.calculateAsteroidMiningEmissionRateBareBones(e,t,n,r);return Math.min(i,c*s)}static calculateAsteroidMiningResourceToExtract(e,t,n,s,i,r=0){return x.calculateAsteroidMiningResourceToExtractBareBones(e,t.resourceHardness,n.systemRichness,s,i,r)}normalizedCrew(){return this.data.stats.miscStats.crewCount>=this.data.stats.miscStats.requiredCrew}static createFleet(e,t,n,s,i,r,c,u,o,d,m,f){const l=x.findAddress(e,o,s,f.fleetLabel),g=Ee.findAddress(e,l[0]),p=wt.generate().publicKey.toBuffer(),h=wt.generate().publicKey.toBuffer(),y=wt.generate().publicKey.toBuffer(),b=Je.CargoPod.findAddress(t,p),S=Je.CargoPod.findAddress(t,h),M=Je.CargoPod.findAddress(t,y);return{fleetKey:l,cargoHoldKey:b,fuelTankKey:S,ammoBankKey:M,instructions:async w=>[{instruction:await e.methods.createFleet({...f,cargoHoldSeeds:Array.from(p),fuelTankSeeds:Array.from(h),ammoBankSeeds:Array.from(y)}).accountsStrict({gameAccountsAndProfile:{gameAndProfileAndFaction:{key:n.publicKey(),profile:s,profileFaction:i,gameId:o},gameState:d},funder:w.publicKey(),fleet:l[0],fleetShips:g[0],ship:r,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:c},cargoHold:b[0],fuelTank:S[0],ammoBank:M[0],cargoStatsDefinition:m,cargoProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[n,w]}]}}static addShipToFleet(e,t,n,s,i,r,c,u,o,d,m){return async f=>[{instruction:await e.methods.addShipToFleet(m).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:o},gameState:d},funder:f.publicKey(),fleetShips:Ee.findAddress(e,i)[0],ship:r,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:c},systemProgram:k.programId}).remainingAccounts([{pubkey:u,isSigner:!1,isWritable:!1}]).instruction(),signers:[t,f]}]}static updateShipInFleet(e,t,n,s,i,r,c){return async()=>[{instruction:await e.methods.updateShipInFleet(c).accountsStrict({fleet:t,fleetShips:Ee.findAddress(e,t)[0],oldShip:n,next:s,gameAccounts:{gameState:r,gameId:i}}).instruction(),signers:[]}]}static disbandFleet(e,t,n,s,i,r,c,u,o,d,m){return x.disbandFleetBareBones(e,t,n,s,i,r.key,r.data.fleetLabel,r.data.ammoBank,r.data.cargoHold,r.data.fuelTank,c,u,o,d,m)}static disbandFleetBareBones(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p){const h=_t.findAddress(e,l,s,c);return{disbandedFleetKey:h,instructions:async y=>[{instruction:await e.methods.disbandFleet(p).accountsStrict({gameAccountsAndProfile:{gameAndProfileAndFaction:{key:n.publicKey(),profile:s,profileFaction:i,gameId:l},gameState:g},funder:y.publicKey(),fleet:r,fleetShips:Ee.findAddress(e,r)[0],disbandedFleet:h[0],cargoHold:o,fuelTank:d,ammoBank:u,starbaseAndStarbasePlayer:{starbase:f,starbasePlayer:m},cargoProgram:t.programId,systemProgram:k.programId}).remainingAccounts([{pubkey:f,isSigner:!1,isWritable:!1}]).instruction(),signers:[n,y]}]}}static forceDisbandFleet(e,t,n,s,i,r,c,u,o,d,m){return x.forceDisbandFleetBareBones(e,t,n.key,n.data.ownerProfile,n.data.fleetLabel,n.data.ammoBank,n.data.cargoHold,n.data.fuelTank,s,i,r,c,u,o,d,m)}static forceDisbandFleetBareBones(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h){const y=_t.findAddress(e,f,s,i),b=p&&h?[{pubkey:p,isSigner:!1,isWritable:!0},{pubkey:h,isSigner:!1,isWritable:!0}]:[];return{disbandedFleetKey:y,instructions:async S=>[{instruction:await e.methods.forceDisbandFleet(g).accountsStrict({funder:S.publicKey(),fleet:n,fleetShips:Ee.findAddress(e,n)[0],disbandedFleet:y[0],cargoHold:c,fuelTank:u,ammoBank:r,starbaseAndStarbasePlayer:{starbase:d,starbasePlayer:o},ship:m,gameAccounts:{gameId:f,gameState:l},cargoProgram:t.programId,systemProgram:k.programId}).remainingAccounts(b).instruction(),signers:[S]}]}}static depositCargoToFleet(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S){return async M=>[{instruction:await e.methods.depositCargoToFleet(S).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:o,owningProfile:s,owningProfileFaction:i,key:n.publicKey()},gameId:y},gameState:b},fundsTo:r==="funder"?M.publicKey():r,starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:u},cargoPodFrom:d,cargoPodTo:m,cargoType:f,cargoStatsDefinition:l,tokenFrom:g,tokenTo:p,tokenMint:h,cargoProgram:t.programId,tokenProgram:C}).remainingAccounts([{pubkey:c,isSigner:!1,isWritable:!1}]).instruction(),signers:[n]}]}static transferCargoWithinFleet(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){const S=b?[{pubkey:b,isSigner:!1,isWritable:!1}]:[];return async M=>[{instruction:await e.methods.transferCargoWithinFleet(y).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:c,owningProfile:i,owningProfileFaction:r,key:n.publicKey()},gameId:p},gameState:h},cargoPodFrom:u,cargoPodTo:o,cargoType:d,cargoStatsDefinition:m,tokenFrom:f,tokenTo:l,tokenMint:g,fundsTo:s==="funder"?M.publicKey():s,cargoProgram:t.programId,tokenProgram:C}).remainingAccounts(S).instruction(),signers:[n]}]}static withdrawCargoFromFleet(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S){return async M=>[{instruction:await e.methods.withdrawCargoFromFleet(S).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:o,owningProfile:i,owningProfileFaction:r,key:n.publicKey()},gameId:y},gameState:b},starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:u},cargoPodFrom:d,cargoPodTo:m,cargoType:f,cargoStatsDefinition:l,tokenFrom:g,tokenTo:p,tokenMint:h,fundsTo:s==="funder"?M.publicKey():s,cargoProgram:t.programId,tokenProgram:C}).remainingAccounts([{pubkey:c,isSigner:!1,isWritable:!1}]).instruction(),signers:[n]}]}static closeFleetCargoPodTokenAccount(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p){return async h=>[{instruction:await e.methods.closeFleetCargoPodTokenAccount(p).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:c,owningProfile:i,owningProfileFaction:r,key:n.publicKey()},gameId:l},gameState:g},cargoPod:u,cargoType:o,cargoStatsDefinition:d,token:m,tokenMint:f,fundsTo:s==="funder"?h.publicKey():s,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[n]}]}static idleToLoadingBay(e,t,n,s,i,r,c,u,o,d){return async()=>[{instruction:await e.methods.idleToLoadingBay(d).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:u},gameState:o},starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:c}}).instruction(),signers:[t]}]}static idleToRespawn(e,t,n,s,i,r,c,u,o,d){return async()=>[{instruction:await e.methods.idleToRespawn(d).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:o},gameState:u},atlasTokenFrom:r,atlasTokenTo:c,tokenProgram:C}).instruction(),signers:[t]}]}static loadingBayToIdle(e,t,n,s,i,r,c,u,o,d){return async()=>[{instruction:await e.methods.loadingBayToIdle(d).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:u},gameState:o},starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:c}}).remainingAccounts([{pubkey:r,isSigner:!1,isWritable:!1}]).instruction(),signers:[t]}]}static moveWarpHandler(e,t,n,s,i,r,c,u,o,d,m){const f=[{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!1},{pubkey:d,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:pe.findAddress(e,m)[0],isSigner:!1,isWritable:!1},{pubkey:m,isSigner:!1,isWritable:!1},{pubkey:t.programId,isSigner:!1,isWritable:!1}];return this.fleetStateHandler(e,s,f)}static movementSubwarpHandler(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y){const b=x.getSubwarpRemainingAccounts(e,t,n,s,r,c,u,o,d,m,f,l,g,p,h,y);return this.fleetStateHandler(e,i,b)}static fleetStateHandler(e,t,n=[]){return async()=>[{instruction:await e.methods.fleetStateHandler().accountsStrict({fleet:t}).remainingAccounts(n).instruction(),signers:[]}]}static warpToCoordinate(e,t,n,s,i,r,c,u,o,d,m,f,l,g){return async()=>[{instruction:await e.methods.warpToCoordinate(g).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:f},gameState:m},fuelTank:r,cargoType:c,statsDefinition:u,tokenFrom:o,tokenMint:d,cargoProgram:l.programId,tokenProgram:C}).instruction(),signers:[t]}]}static warpLane(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w){return async()=>[{instruction:await e.methods.warpLane(w).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:S},gameState:b},fromStarbase:r,toStarbase:c,fromSector:u,toSector:o,fuelTank:d,cargoType:m,statsDefinition:f,fuelTokenFrom:l,fuelMint:g,feeTokenFrom:p,feeTokenTo:h,feeMint:y,cargoProgram:M.programId,tokenProgram:C}).instruction(),signers:[t]}]}static startSubwarp(e,t,n,s,i,r,c,u){return async()=>[{instruction:await e.methods.startSubwarp(u).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:r},gameState:c}}).instruction(),signers:[t]}]}static stopSubwarp(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w){const R=x.getSubwarpRemainingAccounts(e,t,n,i,u,o,d,m,f,l,g,p,h,y,b,S);return async()=>[{instruction:await e.methods.stopSubwarp(w).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:c,owningProfile:i,owningProfileFaction:r,key:s.publicKey()},gameId:S},gameState:M}}).remainingAccounts(R).instruction(),signers:[s]}]}static startMiningAsteroid(e,t,n,s,i,r,c,u,o,d,m,f,l,g){return async()=>[{instruction:await e.methods.startMiningAsteroid(g).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:f},gameState:m},starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:c},mineItem:u,resource:o,planet:d,fleetFuelTokenAccount:l}).instruction(),signers:[t]}]}static asteroidMiningHandler(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w){return this.fleetStateHandler(e,n,[{pubkey:u,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:c,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:h,isSigner:!1,isWritable:!0},{pubkey:y,isSigner:!1,isWritable:!0},{pubkey:b,isSigner:!1,isWritable:!0},{pubkey:S,isSigner:!1,isWritable:!0},{pubkey:M,isSigner:!1,isWritable:!0},{pubkey:w,isSigner:!1,isWritable:!0},{pubkey:d,isSigner:!1,isWritable:!1},{pubkey:m,isSigner:!1,isWritable:!1},{pubkey:f,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:g,isSigner:!1,isWritable:!1},{pubkey:p,isSigner:!1,isWritable:!1},{pubkey:t.programId,isSigner:!1,isWritable:!1},{pubkey:C,isSigner:!1,isWritable:!1}])}static stopMiningAsteroid(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w,R,K,$,W,q,H){return async()=>[{instruction:await e.methods.stopMiningAsteroid(H).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:c,owningProfile:i,owningProfileFaction:r,key:s.publicKey()},gameId:$},gameState:K},mineItem:u,resource:o,planet:d,fuelTank:m,cargoType:f,cargoStatsDefinition:l,tokenFrom:W,tokenMint:q,miningXpAccounts:{userPointsAccount:g,pointsCategory:p,pointsModifierAccount:h},pilotXpAccounts:{userPointsAccount:y,pointsCategory:b,pointsModifierAccount:S},councilRankXpAccounts:{userPointsAccount:M,pointsCategory:w,pointsModifierAccount:R},progressionConfig:pe.findAddress(e,$)[0],cargoProgram:t.programId,pointsProgram:n.programId,tokenProgram:C}).instruction(),signers:[s]}]}static mineAsteroidToRespawn(e,t,n,s,i,r,c,u,o,d,m,f){return async()=>[{instruction:await e.methods.mineAsteroidToRespawn(f).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:o},gameState:u},resource:r,planet:c,atlasTokenFrom:d,atlasTokenTo:m,tokenProgram:C}).instruction(),signers:[t]}]}static forceDropFleetCargo(e,t,n,s,i,r,c,u,o){const d=Ee.findAddress(e,n);return async()=>[{instruction:await e.methods.forceDropFleetCargo().accountsStrict({fleet:n,fleetShips:d[0],cargoPod:s,cargoType:i,cargoStatsDefinition:r,gameId:c,tokenFrom:u,tokenMint:o,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[]}]}static respawnToLoadingBay(e,t,n,s,i,r,c,u,o,d,m,f,l){return async()=>[{instruction:await e.methods.respawnToLoadingBay(l).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:i,owningProfile:n,owningProfileFaction:s,key:t.publicKey()},gameId:m},gameState:f},starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:c},cargoHold:u,fuelTank:o,ammoBank:d}).instruction(),signers:[t]}]}static loadFleetCrew(e,t,n,s,i,r,c,u,o){return async()=>[{instruction:await e.methods.loadFleetCrew(o).accountsStrict({fleetAndOwner:{fleet:i,key:t.publicKey(),owningProfile:n,owningProfileFaction:s},starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:c},gameId:u}).remainingAccounts([{pubkey:r,isSigner:!1,isWritable:!1}]).instruction(),signers:[t]}]}static unloadFleetCrew(e,t,n,s,i,r,c,u,o){return async()=>[{instruction:await e.methods.unloadFleetCrew(o).accountsStrict({fleetAndOwner:{fleet:i,key:t.publicKey(),owningProfile:n,owningProfileFaction:s},starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:c},gameId:u}).remainingAccounts([{pubkey:r,isSigner:!1,isWritable:!1}]).instruction(),signers:[t]}]}static addRental(e,t,n,s,i,r,c,u,o){const d=ae.ProfileFactionAccount.findAddress(t,r)[0];return async()=>[{instruction:await e.methods.addRental(o).accountsStrict({ownerKey:n.publicKey(),ownerProfile:i,invalidator:s.publicKey(),subProfileFaction:d,subProfile:r,fleet:c,gameId:u}).instruction(),signers:[n,s]}]}static changeRental(e,t,n,s,i,r){const c=ae.ProfileFactionAccount.findAddress(t,s)[0];return async()=>[{instruction:await e.methods.changeRental().accountsStrict({subProfileInvalidator:n.publicKey(),newSubProfile:s,subProfileFaction:c,fleet:i,gameId:r}).instruction(),signers:[n]}]}static invalidateRental(e,t,n,s,i,r,c){const u=s&&i&&r&&c?[{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!0}]:[];return async()=>[{instruction:await e.methods.invalidateRental().accountsStrict({subProfileInvalidator:t.publicKey(),fleet:n}).remainingAccounts(u).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccountWithRemaining(e,t,x,(n,s)=>{const i=n[0];let r;switch(i){case 0:{r={StarbaseLoadingBay:t.coder.types.decode("StarbaseLoadingBay",n.subarray(1))};break}case 1:{r={Idle:t.coder.types.decode("Idle",n.subarray(1))};break}case 2:{r={MineAsteroid:t.coder.types.decode("MineAsteroid",n.subarray(1))};break}case 3:{r={MoveWarp:t.coder.types.decode("MoveWarp",n.subarray(1))};break}case 4:{r={MoveSubwarp:t.coder.types.decode("MoveSubwarp",n.subarray(1))};break}case 5:{r={Respawn:t.coder.types.decode("Respawn",n.subarray(1))};break}default:throw new Error("Unknown fleet state: "+i)}return r})}static calculateCombinedStats(e,t,n){const s=e;return s.cargoStats=x.calculateCombinedCargoStats(e.cargoStats,this.multiplyCargoStats(t.cargoStats,n)),s.miscStats=x.calculateCombinedMiscStats(e.miscStats,this.multiplyMiscStats(t.miscStats,n)),s.movementStats=x.calculateCombinedMovementStats(e.movementStats,this.multiplyMovementStats(t.movementStats,n)),s}static multiplyShipStats(e,t){const n=e;return n.cargoStats=x.multiplyCargoStats(e.cargoStats,t),n.miscStats=x.multiplyMiscStats(e.miscStats,t),n.movementStats=x.multiplyMovementStats(e.movementStats,t),n}static calculateCombinedCargoStats(e,t){return{cargoCapacity:Math.min(Ne,e.cargoCapacity+t.cargoCapacity),fuelCapacity:Math.min(Ne,e.fuelCapacity+t.fuelCapacity),ammoCapacity:Math.min(Ne,e.ammoCapacity+t.ammoCapacity),ammoConsumptionRate:Math.min(z,e.ammoConsumptionRate+t.ammoConsumptionRate),foodConsumptionRate:Math.min(z,e.foodConsumptionRate+t.foodConsumptionRate),miningRate:Math.min(z,e.miningRate+t.miningRate),upgradeRate:Math.min(z,e.upgradeRate+t.upgradeRate),cargoTransferRate:Math.min(z,e.cargoTransferRate+t.cargoTransferRate),tractorBeamGatherRate:Math.min(z,e.tractorBeamGatherRate+t.tractorBeamGatherRate)}}static multiplyCargoStats(e,t){return{cargoCapacity:Math.min(Ne,t*e.cargoCapacity),fuelCapacity:Math.min(Ne,t*e.fuelCapacity),ammoCapacity:Math.min(Ne,t*e.ammoCapacity),ammoConsumptionRate:Math.min(z,t*e.ammoConsumptionRate),foodConsumptionRate:Math.min(z,t*e.foodConsumptionRate),miningRate:Math.min(z,t*e.miningRate),upgradeRate:Math.min(z,t*e.upgradeRate),cargoTransferRate:Math.min(z,t*e.cargoTransferRate),tractorBeamGatherRate:Math.min(z,t*e.tractorBeamGatherRate)}}static calculateCombinedMiscStats(e,t){return{requiredCrew:e.requiredCrew+t.requiredCrew,passengerCapacity:e.passengerCapacity+t.passengerCapacity,crewCount:e.crewCount+t.crewCount,rentedCrew:e.rentedCrew+t.rentedCrew,respawnTime:Math.max(e.respawnTime,t.respawnTime),scanCoolDown:Math.max(e.scanCoolDown,t.scanCoolDown),sduPerScan:e.sduPerScan+t.sduPerScan,scanCost:Math.min(z,e.scanCost+t.scanCost),placeholder:0,placeholder2:0,placeholder3:0}}static multiplyMiscStats(e,t){return{requiredCrew:e.requiredCrew*t,passengerCapacity:e.passengerCapacity*t,crewCount:e.crewCount*t,rentedCrew:e.rentedCrew*t,respawnTime:e.respawnTime,scanCoolDown:e.scanCoolDown,sduPerScan:e.sduPerScan*t,scanCost:Math.min(z,t*e.scanCost),placeholder:0,placeholder2:0,placeholder3:0}}static calculateCombinedMovementStats(e,t){return{subwarpSpeed:Math.min(e.subwarpSpeed,t.subwarpSpeed),warpSpeed:Math.min(e.warpSpeed,t.warpSpeed),maxWarpDistance:Math.min(La,Math.max(Ka,Math.max(e.maxWarpDistance,t.maxWarpDistance))),warpCoolDown:Math.max(e.warpCoolDown,t.warpCoolDown),subwarpFuelConsumptionRate:Math.min(z,e.subwarpFuelConsumptionRate+t.subwarpFuelConsumptionRate),warpFuelConsumptionRate:Math.min(z,e.warpFuelConsumptionRate+t.warpFuelConsumptionRate),planetExitFuelAmount:Math.min(z,e.planetExitFuelAmount+t.planetExitFuelAmount)}}static multiplyMovementStats(e,t){return{subwarpSpeed:e.subwarpSpeed,warpSpeed:e.warpSpeed,maxWarpDistance:Math.min(La,Math.max(Ka,e.maxWarpDistance)),warpCoolDown:e.warpCoolDown,subwarpFuelConsumptionRate:Math.min(z,t*e.subwarpFuelConsumptionRate),warpFuelConsumptionRate:Math.min(z,t*e.warpFuelConsumptionRate),planetExitFuelAmount:Math.min(z,t*e.planetExitFuelAmount)}}},x.ACCOUNT_NAME="fleet",x.MIN_DATA_SIZE=Co,x.getSubwarpRemainingAccounts=(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h)=>[{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:d,isSigner:!1,isWritable:!0},{pubkey:m,isSigner:!1,isWritable:!1},{pubkey:f,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!0},{pubkey:g,isSigner:!1,isWritable:!1},{pubkey:p,isSigner:!1,isWritable:!1},{pubkey:pe.findAddress(e,h)[0],isSigner:!1,isWritable:!1},{pubkey:h,isSigner:!1,isWritable:!1},{pubkey:n.programId,isSigner:!1,isWritable:!1},{pubkey:t.programId,isSigner:!1,isWritable:!1},{pubkey:C,isSigner:!1,isWritable:!1}],x);ea=Ao();ut=_o(ea,0,"Fleet",_s,ut);Io(ea,1,ut);let Fo=ut;var xo=Object.create,ta=Object.defineProperty,Ro=Object.getOwnPropertyDescriptor,Do=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Cs=a=>{throw TypeError(a)},Eo=(a,e,t)=>e in a?ta(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Uo=(a,e)=>ta(a,"name",{value:e,configurable:!0}),Oo=a=>[,,,xo(null)],$o=["class","method","getter","setter","accessor","field","value","get","set"],Fs=a=>a!==void 0&&typeof a!="function"?Cs("Function expected"):a,Ko=(a,e,t,n,s)=>({kind:$o[a],name:e,metadata:n,addInitializer:i=>t._?Cs("Already initialized"):s.push(Fs(i||null))}),Lo=(a,e)=>Eo(e,Do("metadata"),a[3]),Go=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},zo=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Ro(s,t));Uo(s,t);for(var g=n.length-1;g>=0;g--)u=Ko(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Fs(r)&&(s=r);return Lo(a,s),l&&ta(s,t,l),d?o^4?i:l:s},xs,aa;new E(0),new E(0),new E(0);const No=65,Bo=6*No,Wo=32,qo=32,Xo=89,Zo=36,Ho=Xo*21+Zo*7+4,jo=192,Vo=64,Qo=12,Yo=(8*2+8)*5;xs=[P.staticImplements()];var J;let dt=(J=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findPointsModifierAddress(e,t,n){return v.findProgramAddressSync([U.from("PointsModifier"),t.toBuffer(),n.toBuffer()],e.programId)}static initGame(e,t,n,s){return async i=>[{instruction:await e.methods.initGame().accountsStrict({signer:t.publicKey(),gameId:s.publicKey(),funder:i.publicKey(),profile:n,systemProgram:k.programId}).instruction(),signers:[t,i,s]}]}static updateGame(e,t,n,s,i,r,c,u,o,d,m){const f=[],l={mints:0,vaults:0,points:0,crafting:0,cargo:0,riskZones:m||null,keyIndex:i};return r&&(r.lpCategory&&(l.points|=1,f.push({isSigner:!1,isWritable:!1,pubkey:r.lpCategory})),r.councilRankXpCategory&&(l.points|=2,f.push({isSigner:!1,isWritable:!1,pubkey:r.councilRankXpCategory})),r.pilotXpCategory&&(l.points|=4,f.push({isSigner:!1,isWritable:!1,pubkey:r.pilotXpCategory})),r.dataRunningXpCategory&&(l.points|=8,f.push({isSigner:!1,isWritable:!1,pubkey:r.dataRunningXpCategory})),r.miningXpCategory&&(l.points|=16,f.push({isSigner:!1,isWritable:!1,pubkey:r.miningXpCategory})),r.craftingXpCategory&&(l.points|=32,f.push({isSigner:!1,isWritable:!1,pubkey:r.craftingXpCategory}))),c&&(c.atlas&&(l.mints|=1,f.push({isSigner:!1,isWritable:!1,pubkey:c.atlas})),c.polis&&(l.mints|=2,f.push({isSigner:!1,isWritable:!1,pubkey:c.polis})),c.ammo&&(l.mints|=4,f.push({isSigner:!1,isWritable:!1,pubkey:c.ammo})),c.food&&(l.mints|=8,f.push({isSigner:!1,isWritable:!1,pubkey:c.food})),c.fuel&&(l.mints|=16,f.push({isSigner:!1,isWritable:!1,pubkey:c.fuel})),c.repairKit&&(l.mints|=32,f.push({isSigner:!1,isWritable:!1,pubkey:c.repairKit}))),u&&(u.atlas&&(l.vaults|=1,f.push({isSigner:!1,isWritable:!1,pubkey:u.atlas})),u.polis&&(l.vaults|=2,f.push({isSigner:!1,isWritable:!1,pubkey:u.polis}))),o&&o.domain&&(l.crafting|=1,f.push({isSigner:!1,isWritable:!1,pubkey:o.domain})),d&&d.statsDefinition&&(l.cargo|=1,f.push({isSigner:!1,isWritable:!1,pubkey:d.statsDefinition})),async()=>[{instruction:await t.methods.updateGame(l).accountsStrict({gameAndProfile:{key:n.publicKey(),profile:s,gameId:e}}).remainingAccounts(f).instruction(),signers:[n]}]}static registerSagePointModifier(e,t,n,s,i,r,c,u){const o=J.findPointsModifierAddress(e,i,r);return{modifierKey:o,instructions:async d=>[{instruction:await e.methods.registerSagePointModifier({pointsCategoryType:c,keyIndex:u}).accountsStrict({gameAndProfile:{key:n.publicKey(),profile:s,gameId:i},funder:d.publicKey(),pointsCategory:r,pointsModifier:o[0],pointsProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[n,d]}]}}static decodeData(e,t){return P.decodeAccount(e,t,J)}},J.ACCOUNT_NAME="game",J.MIN_DATA_SIZE=81+Bo+Wo+qo+jo+Vo+Yo,J.MIN_STAR_BASE_LEVEL=0,J.MAX_STAR_BASE_LEVEL=6,J);aa=Oo();dt=zo(aa,0,"Game",xs,dt);Go(aa,1,dt);let Ft=dt;var Jo=Zn(),ec=Object.create,sa=Object.defineProperty,tc=Object.getOwnPropertyDescriptor,ac=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Rs=a=>{throw TypeError(a)},sc=(a,e,t)=>e in a?sa(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,nc=(a,e)=>sa(a,"name",{value:e,configurable:!0}),ic=a=>[,,,ec(null)],rc=["class","method","getter","setter","accessor","field","value","get","set"],Ds=a=>a!==void 0&&typeof a!="function"?Rs("Function expected"):a,oc=(a,e,t,n,s)=>({kind:rc[a],name:e,metadata:n,addInitializer:i=>t._?Rs("Already initialized"):s.push(Ds(i||null))}),cc=(a,e)=>sc(e,ac("metadata"),a[3]),uc=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},dc=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&tc(s,t));nc(s,t);for(var g=n.length-1;g>=0;g--)u=oc(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Ds(r)&&(s=r);return cc(a,s),l&&sa(s,t,l),d?o^4?i:l:s},Es,na,Us=(a=>(a[a.Inner=1]="Inner",a[a.Mid=2]="Mid",a[a.Outer=3]="Outer",a))(Us||{});Es=[P.staticImplements()];var Te;let lt=(Te=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}get prettyName(){return P.byteArrayToString(this.data.name)}static registerPlanet(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.registerPlanet({...c,name:P.stringToByteArray(c.name,64)}).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},funder:u.publicKey(),planet:s.publicKey(),sector:i,systemProgram:k.programId}).instruction(),signers:[t,u,s]}]}static updatePlanet(e,t,n,s,i,r){return async()=>[{instruction:await e.methods.updatePlanet({...r,name:r.name==null?null:P.stringToByteArray(r.name,64),size:r.size==null?null:r.size,maxHp:r.maxHp==null?null:r.maxHp,subCoordinates:r.subCoordinates==null?null:r.subCoordinates}).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},planet:s}).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccount(e,t,Te)}},Te.ACCOUNT_NAME="planet",Te.MIN_DATA_SIZE=105+8*2+8*2+1+1+8+8+8+8+1+8,Te);na=ic();lt=dc(na,0,"Planet",Es,lt);uc(na,1,lt);let lc=lt;var mc=Object.create,ia=Object.defineProperty,fc=Object.getOwnPropertyDescriptor,gc=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Os=a=>{throw TypeError(a)},pc=(a,e,t)=>e in a?ia(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,hc=(a,e)=>ia(a,"name",{value:e,configurable:!0}),yc=a=>[,,,mc(null)],Sc=["class","method","getter","setter","accessor","field","value","get","set"],$s=a=>a!==void 0&&typeof a!="function"?Os("Function expected"):a,bc=(a,e,t,n,s)=>({kind:Sc[a],name:e,metadata:n,addInitializer:i=>t._?Os("Already initialized"):s.push($s(i||null))}),Tc=(a,e)=>pc(e,gc("metadata"),a[3]),Pc=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Mc=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&fc(s,t));hc(s,t);for(var g=n.length-1;g>=0;g--)u=bc(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,$s(r)&&(s=r);return Tc(a,s),l&&ia(s,t,l),d?o^4?i:l:s},Ks,ra;Ks=[P.staticImplements()];var Pe;let mt=(Pe=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("GameState"),t.toBuffer(),n.toArrayLike(U,"le",8)],e.programId)}static initGameState(e,t,n,s,i,r){return async c=>[{instruction:await e.methods.initGameState(r).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:s},funder:c.publicKey(),gameState:i,systemProgram:k.programId}).instruction(),signers:[t,c]}]}static updateGameState(e,t,n,s,i,r,c,u){const o=[],d=u||null,m={starbaseLevelInfoArray:null,upkeepInfoArray:null,maxFleetSize:null},f=c?.starbaseLevels||[],l={fleet:m,misc:d,keyIndex:r},g=[f.filter(p=>p.faction==P.getNumberFromEnum(ae.Faction,ae.Faction.ONI)),f.filter(p=>p.faction==ae.Faction.MUD),f.filter(p=>p.faction==P.getNumberFromEnum(ae.Faction,ae.Faction.Ustur))];for(let p=0;p<g.length;p++){const h=g[p];if(h){const y=Jo.uniq(h.map(b=>b.level));if(y.length!==h.length)throw new Error("Starbase levels must be unique");if(Math.max(...y)>Ft.MAX_STAR_BASE_LEVEL||Math.min(...y)<Ft.MIN_STAR_BASE_LEVEL)throw new Error("Starbase levels must be between 0 and 6")}}f.sort((p,h)=>p.faction-h.faction||p.level-h.level);for(let p=0;p<f.length;p++){const h=f[p];if(h){const y={faction:h.faction,level:h.level,hp:h.hp,sp:h.sp,warpLaneMovementFee:h.warpLaneMovementFee,sectorRingAvailable:P.getAnchorEnum(Us,h.sectorRingAvailable)};m.starbaseLevelInfoArray==null?m.starbaseLevelInfoArray=[y]:m.starbaseLevelInfoArray.push(y),o.push({isSigner:!1,isWritable:!1,pubkey:h.oldRecipeForUpgrade}),o.push({isSigner:!1,isWritable:!1,pubkey:h.newRecipeForUpgrade}),o.push({isSigner:!1,isWritable:!1,pubkey:h.recipeCategoryForLevel})}}return c?.maxFleetSize&&(m.maxFleetSize=c.maxFleetSize),c?.starbaseUpkeep&&(m.upkeepInfoArray=c.starbaseUpkeep),l.fleet=P.isNull(m)?null:m,async()=>[{instruction:await e.methods.updateGameState(l).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:s},gameState:i}).remainingAccounts(o).instruction(),signers:[t]}]}static activateGameState(e,t,n,s,i,r){return async()=>[{instruction:await e.methods.activateGameState(r).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:s},gameState:i}).instruction(),signers:[t]}]}static copyGameState(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.copyGameState(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:s},funder:u.publicKey(),oldGameState:i,newGameState:r,systemProgram:k.programId}).instruction(),signers:[t,u]}]}static decodeData(e,t){return P.decodeAccount(e,t,Pe)}},Pe.ACCOUNT_NAME="gameState",Pe.MIN_DATA_SIZE=49+Ho+Qo+1,Pe);ra=yc();mt=Mc(ra,0,"GameState",Ks,mt);Pc(ra,1,mt);let Ac=mt;const Ls={version:"0.1.0",name:"sage",instructions:[{name:"activateGameState",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!0,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!0,isSigner:!1,docs:["The [`GameState`] account"]}],args:[{name:"input",type:{defined:"ManageGameInput"}}]},{name:"addConnection",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for adding the connection"]},{name:"sector1",isMut:!0,isSigner:!1,docs:["The first connected sector"]},{name:"sector2",isMut:!0,isSigner:!1,docs:["The second connected sector"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[{name:"subCoordinates1",type:{array:["i64",2]}},{name:"flags1",type:"u8"},{name:"subCoordinates2",type:{array:["i64",2]}},{name:"flags2",type:"u8"},{name:"keyIndex",type:"u16"}]},{name:"addCrewToGame",accounts:[{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"sageCrewConfig",isMut:!1,isSigner:!1,docs:["The [`SageCrewConfig`] Account"]},{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"crewConfig",isMut:!1,isSigner:!1,docs:["The crew program `CrewConfig` account"]},{name:"crewOwner",isMut:!1,isSigner:!0,docs:["The crew owner"]},{name:"crewDelegate",isMut:!1,isSigner:!1,docs:["The crew delegate"]},{name:"logWrapper",isMut:!1,isSigner:!1,docs:["The log wrapper"]},{name:"compressionProgram",isMut:!1,isSigner:!1,docs:["The compression program"]},{name:"bubblegumProgram",isMut:!1,isSigner:!1,docs:["The bubblegum program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"AddCrewInput"}}]},{name:"addRental",accounts:[{name:"ownerProfile",isMut:!1,isSigner:!1,docs:["The fleet owner's profile."]},{name:"ownerKey",isMut:!1,isSigner:!0,docs:["The key on the owner profile with renting permissions."]},{name:"invalidator",isMut:!1,isSigner:!0,docs:["The fleet rental invalidator - this is a signer to help make sure the fleet won't be locked."]},{name:"subProfile",isMut:!1,isSigner:!1,docs:["The profile to rent to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet to rent out."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"subProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the sub_profile belongs to."]}],args:[{name:"ownerKeyIndex",type:"u16"}]},{name:"addShipEscrow",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder - pays for account rent"]},{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"originTokenAccount",isMut:!0,isSigner:!1,docs:["The Origin Token Account"]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`] Account"]},{name:"shipEscrowTokenAccount",isMut:!0,isSigner:!1,docs:["The Escrow Token Account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The Token Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"AddShipEscrowInput"}}]},{name:"addShipToFleet",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new `Fleet`"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`] Account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"AddShipToFleetInput"}}]},{name:"burnCraftingConsumables",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The crafting facility account"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `crafting_process`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The token mint"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"IngredientIndexInput"}}]},{name:"cancelCraftingProcess",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!0,isSigner:!1,docs:["The [`CraftingInstance`] account to cancel"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"craftingFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"changeRental",accounts:[{name:"subProfileInvalidator",isMut:!1,isSigner:!0,docs:["The fleet rental invalidator"]},{name:"newSubProfile",isMut:!1,isSigner:!1,docs:["The new sub profile"]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"subProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the sub_profile belongs to."]}],args:[]},{name:"claimCraftingNonConsumables",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The crafting facility account"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod account"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The Cargo Type Account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `crafting_process`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination account of the tokens - owner should be `cargo_pod_to`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The token mint"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"IngredientIndexInput"}}]},{name:"claimCraftingOutputs",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The [`CraftingProcess`] account"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The crafting facility account"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting [`Recipe`]"]},{name:"craftableItem",isMut:!1,isSigner:!1,docs:["The craftable item"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod account"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The Cargo Type Account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `craftable_item`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination account of the tokens - owner should be `cargo_pod_to`"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"IngredientIndexInput"}}]},{name:"closeCraftingProcess",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!0,isSigner:!1,docs:["The [`CraftingInstance`] account to close"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe account"]},{name:"craftingFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"councilRankXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"progressionConfig",isMut:!1,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"pointsProgram",isMut:!1,isSigner:!1,docs:["The points program"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"closeDisbandedFleet",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the player profile."]},{name:"playerProfile",isMut:!1,isSigner:!1,docs:["The player profile."]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"disbandedFleet",isMut:!0,isSigner:!1,docs:["The [`DisbandedFleet`] account"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]}],args:[{name:"input",type:{defined:"CloseDisbandedFleetInput"}}]},{name:"closeFleetCargoPodTokenAccount",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The cargo pod, owned by the fleet"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"token",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"closePlayerCrewRecord",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"crewRecord",isMut:!0,isSigner:!1,docs:["The [`PlayerCrewRecord`] account"]},{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"crewConfig",isMut:!1,isSigner:!1,docs:["The [`SageCrewConfig`] Account"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"closeStarbaseCargoTokenAccount",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The new cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"token",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"closeUpgradeProcess",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"resourceCraftingInstance",isMut:!0,isSigner:!1,docs:["The [`CraftingInstance`] account to close"]},{name:"resourceCraftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"resourceRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the upgrade resource"]},{name:"resourceCraftingFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"completeStarbaseUpgrade",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account for crafting at this `Starbase`"]},{name:"upgradeFacility",isMut:!1,isSigner:!1,docs:["The `CraftingFacility` account for starbase upgrades"]},{name:"upgradeRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the starbase upgrade"]},{name:"newRecipeCategory",isMut:!1,isSigner:!1,docs:["The crafting recipe category for the next `Starbase` level"]},{name:"craftingDomain",isMut:!1,isSigner:!1,docs:["The crafting domain"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["Solana System program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"copyGameState",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new `GameState`"]},{name:"oldGameState",isMut:!1,isSigner:!1,docs:["The old [`GameState`] account"]},{name:"newGameState",isMut:!0,isSigner:!1,docs:["The [`GameState`] account","This will and should fail if there already exists a `GameState`for the desired `update_id`"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[{name:"input",type:{defined:"ManageGameInput"}}]},{name:"createCargoPod",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The new cargo pod"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[{name:"input",type:{defined:"StarbaseCreateCargoPodInput"}}]},{name:"createCertificateMint",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbase",isMut:!1,isSigner:!1,docs:["The Starbase to create a certificate mint for"]},{name:"cargoMint",isMut:!1,isSigner:!1,docs:["The mint to create a certificate mint for"]},{name:"certificateMint",isMut:!0,isSigner:!1,docs:["The new certificate mint"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type to associate with the `cargo_mint`","Included to ensure that this instruction can only be called for valid cargo types"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The game account"]},{name:"transferHookExtraAccountMetaList",isMut:!0,isSigner:!1,docs:["The transfer hook extra accounts list"]},{name:"transferHookProgram",isMut:!1,isSigner:!1,docs:["The transfer hook program"]},{name:"token2022Program",isMut:!1,isSigner:!1,docs:["The token 2022 program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[]},{name:"createCraftingProcess",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!0,isSigner:!1,docs:["The [`CraftingInstance`] account to initialize"]},{name:"craftingFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account (NOT initialized)"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe"]},{name:"craftingDomain",isMut:!1,isSigner:!1,docs:["The crafting domain"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["Solana System program"]}],args:[{name:"input",type:{defined:"StarbaseCreateCraftingProcessInput"}}]},{name:"createFleet",accounts:[{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new `Fleet`"]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The [`Fleet`] account"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"cargoHold",isMut:!0,isSigner:!1,docs:["The new fleet `cargo_hold` cargo pod (not initialized)"]},{name:"fuelTank",isMut:!0,isSigner:!1,docs:["The new fleet `fuel_tank` cargo pod (not initialized)"]},{name:"ammoBank",isMut:!0,isSigner:!1,docs:["The new fleet `ammo_bank` cargo pod (not initialized)"]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`] Account - represents the first ship in the new fleet"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"CreateFleetInput"}}]},{name:"createStarbaseUpgradeResourceProcess",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!0,isSigner:!1,docs:["The [`CraftingInstance`] account to initialize"]},{name:"upgradeFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account (NOT initialized)"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe"]},{name:"craftingDomain",isMut:!1,isSigner:!1,docs:["The crafting domain"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["Solana System program"]}],args:[{name:"input",type:{defined:"StarbaseCreateCraftingProcessInput"}}]},{name:"depositCargoToFleet",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPodFrom",isMut:!0,isSigner:!1,docs:["The origin cargo pod"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod_from`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod_to`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"DepositCargoToFleetInput"}}]},{name:"depositCargoToGame",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The new cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `key`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod`"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"CargoToGameInput"}}]},{name:"depositCraftingIngredient",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The [`CraftingFacility`](crafting::CraftingFacility) account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"cargoPodFrom",isMut:!0,isSigner:!1,docs:["The source cargo pod account"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The Cargo Type Account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `cargo_pod_from`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination account of the tokens - owner should be `crafting_process`"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"StarbaseDepositCraftingIngredientInput"}}]},{name:"depositStarbaseUpkeepResource",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPodFrom",isMut:!0,isSigner:!1,docs:["The source cargo pod account"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The Cargo Type Account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `cargo_pod_from`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The token mint"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"resourceRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the upkeep resource"]},{name:"loyaltyPointsAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"progressionConfig",isMut:!1,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"pointsProgram",isMut:!1,isSigner:!1,docs:["The points program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"DepositStarbaseUpkeepResourceInput"}}]},{name:"deregisterMineItem",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing funds go."]},{name:"mineItem",isMut:!0,isSigner:!1,docs:["The [`MineItem`] account"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"deregisterProgressionConfig",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing funds go."]},{name:"progressionConfig",isMut:!0,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"deregisterResource",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing funds go."]},{name:"mineItem",isMut:!0,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"resource",isMut:!0,isSigner:!1,docs:["The [`Resource`] account"]},{name:"location",isMut:!0,isSigner:!1,docs:["The Location address"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"deregisterStarbase",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing funds go."]},{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"deregisterSurveyDataUnitTracker",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing funds go."]},{name:"surveyDataUnitTracker",isMut:!0,isSigner:!1,docs:["The [`SurveyDataUnitTracker`] account"]}],args:[{name:"input",type:{defined:"DeregisterSurveyDataUnitTrackerInput"}}]},{name:"devAddCrewToGame",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The `StarbasePlayer` account to add crew to"]}],args:[{name:"input",type:{defined:"DevAddCrewInput"}}]},{name:"devDepositCargoToGame",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The new cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `key`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod`"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"CargoToGameInput"}}]},{name:"disbandFleet",accounts:[{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder - pays for account rent"]},{name:"disbandedFleet",isMut:!0,isSigner:!1,docs:["The [`DisbandedFleet`] account"]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The [`Fleet`] account","The fleet can only be disbanded by the `owner_profile` and not `sub_profile`","Fleet cannot be disbanded while rented"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"cargoHold",isMut:!0,isSigner:!1,docs:["The fleet `cargo_hold` cargo pod"]},{name:"fuelTank",isMut:!0,isSigner:!1,docs:["The fleet `fuel_tank` cargo pod"]},{name:"ammoBank",isMut:!0,isSigner:!1,docs:["The fleet `ammo_bank` cargo pod"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"DisbandFleetInput"}}]},{name:"disbandedFleetToEscrow",accounts:[{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder - pays for account rent"]},{name:"disbandedFleet",isMut:!0,isSigner:!1,docs:["The [`DisbandedFleet`] account"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`] Account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"DisbandedFleetToEscrowInput"}}]},{name:"discoverSector",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!1,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new sector"]},{name:"sector",isMut:!0,isSigner:!1,docs:["The [`Sector`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"DiscoverSectorInput"}}]},{name:"drainMineItemBank",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing funds go."]},{name:"mineItem",isMut:!0,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The mine item token bank to drain"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["Where to send tokens from the bank"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"drainSurveyDataUnitsBank",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the closing rent refunds go."]},{name:"surveyDataUnitTracker",isMut:!1,isSigner:!1,docs:["The [`SurveyDataUnitTracker`] account"]},{name:"surveyDataUnitTrackerSigner",isMut:!1,isSigner:!1,docs:["The `SurveyDataUnitTracker` signer"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The SDU token bank to drain"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["Where to send tokens from the bank"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"fleetStateHandler",accounts:[{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}],args:[]},{name:"forceDisbandFleet",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder - pays for account rent"]},{name:"disbandedFleet",isMut:!0,isSigner:!1,docs:["The new [`DisbandedFleet`] account"]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The [`Fleet`] account"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"cargoHold",isMut:!0,isSigner:!1,docs:["The fleet `cargo_hold` cargo pod"]},{name:"fuelTank",isMut:!0,isSigner:!1,docs:["The fleet `fuel_tank` cargo pod"]},{name:"ammoBank",isMut:!0,isSigner:!1,docs:["The fleet `ammo_bank` cargo pod"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`]","Must provide at least one ship that is invalid for this instruction"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"ForcedDisbandFleetInput"}}]},{name:"forceDropFleetCargo",accounts:[{name:"fleet",isMut:!0,isSigner:!1,docs:["The `Fleet` Account"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The origin cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The `cargo_type` for the token"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token account"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[]},{name:"idleToLoadingBay",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]}],args:[{name:"keyIndex",type:"u16"}]},{name:"idleToRespawn",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"atlasTokenFrom",isMut:!0,isSigner:!1,docs:["Source Token account for ATLAS, owned by the player"]},{name:"atlasTokenTo",isMut:!0,isSigner:!1,docs:["Vault Token account for ATLAS"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The Solana Token Program"]}],args:[{name:"input",type:{defined:"IdleToRespawnInput"}}]},{name:"initGame",accounts:[{name:"signer",isMut:!0,isSigner:!0,docs:["The entity calling this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The sector permissions [`Profile`]"]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new game"]},{name:"gameId",isMut:!0,isSigner:!0,docs:["The [`Game`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[]},{name:"initGameState",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new `GameState`"]},{name:"gameState",isMut:!0,isSigner:!1,docs:["The [`GameState`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[{name:"input",type:{defined:"InitGameStateInput"}}]},{name:"invalidateRental",accounts:[{name:"subProfileInvalidator",isMut:!1,isSigner:!0,docs:["The fleet rental invalidator"]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet"]}],args:[]},{name:"invalidateShip",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!0,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"ship",isMut:!0,isSigner:!1,docs:["The current [`Ship`] account"]}],args:[{name:"keyIndex",type:"u16"}]},{name:"loadFleetCrew",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}],args:[{name:"input",type:{defined:"FleetCrewInput"}}]},{name:"loadingBayToIdle",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]}],args:[{name:"keyIndex",type:"u16"}]},{name:"mineAsteroidToRespawn",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"resource",isMut:!0,isSigner:!1,docs:["The [`Resource`] account"]},{name:"planet",isMut:!0,isSigner:!1,docs:["The [`Planet`] account"]},{name:"atlasTokenFrom",isMut:!0,isSigner:!1,docs:["Source Token account for ATLAS, owned by the player"]},{name:"atlasTokenTo",isMut:!0,isSigner:!1,docs:["Vault Token account for ATLAS"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The Solana Token Program"]}],args:[{name:"input",type:{defined:"MineAsteroidToRespawnInput"}}]},{name:"mintCertificate",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoMint",isMut:!1,isSigner:!1,docs:["The mint of the cargo in question"]},{name:"certificateMint",isMut:!0,isSigner:!1,docs:["The cargo certificate mint"]},{name:"certificateTokenTo",isMut:!0,isSigner:!1,docs:["The token account where certificates are minted to"]},{name:"cargoTokenFrom",isMut:!0,isSigner:!1,docs:["The source token account for the cargo - owned by the `cargo_pod`"]},{name:"cargoTokenTo",isMut:!0,isSigner:!1,docs:["The destination token account for the cargo - owned by the Starbase"]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The cargo pod to take from"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The token program"]},{name:"token2022Program",isMut:!1,isSigner:!1,docs:["The token 2022 program"]}],args:[{name:"keyIndex",type:"u16"},{name:"amount",type:"u64"}]},{name:"mintCrewToGame",accounts:[{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"sageCrewConfig",isMut:!1,isSigner:!1,docs:["The [`SageCrewConfig`] Account"]},{name:"crewConfig",isMut:!1,isSigner:!1,docs:["The crew program `CrewConfig` account"]},{name:"instructionsSysvar",isMut:!1,isSigner:!1,docs:["Solana Instructions Sysvar"]}],args:[]},{name:"redeemCertificate",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"cargoMint",isMut:!1,isSigner:!1,docs:["The mint of the cargo in question"]},{name:"certificateMint",isMut:!0,isSigner:!1,docs:["The cargo certificate mint"]},{name:"certificateTokenFrom",isMut:!0,isSigner:!1,docs:["The source token account for the cargo certificate - owned by the starbase player or a","`certificate_owner_authority` sent through remaining accounts"]},{name:"cargoTokenFrom",isMut:!0,isSigner:!1,docs:["The source token account for the cargo - owned by the Starbase"]},{name:"cargoTokenTo",isMut:!0,isSigner:!1,docs:["The destination token account for the cargo - owned by the `cargo_pod`"]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The cargo pod to send to"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The token program"]},{name:"token2022Program",isMut:!1,isSigner:!1,docs:["The token 2022 program"]}],args:[{name:"keyIndex",type:"u16"},{name:"amount",type:"u64"}]},{name:"registerMineItem",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new mine item"]},{name:"mineItem",isMut:!0,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"mint",isMut:!0,isSigner:!1,docs:["The mint address representing the mine item"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterMineItemInput"}}]},{name:"registerPlanet",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new game"]},{name:"planet",isMut:!0,isSigner:!0,docs:["The [`Planet`] account"]},{name:"sector",isMut:!0,isSigner:!1,docs:["The [`Sector`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterPlanetInput"}}]},{name:"registerProgressionConfig",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new star base"]},{name:"progressionConfig",isMut:!0,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterProgressionConfigInput"}}]},{name:"registerResource",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new resource"]},{name:"resource",isMut:!0,isSigner:!1,docs:["The [`Resource`] account"]},{name:"location",isMut:!0,isSigner:!1,docs:["The Location address"]},{name:"mineItem",isMut:!0,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterResourceInput"}}]},{name:"registerSageCrewConfig",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new star base"]},{name:"sageCrewConfig",isMut:!0,isSigner:!1,docs:["The [`SageCrewConfig`] account"]},{name:"config",isMut:!1,isSigner:!1,docs:["The crew config"]},{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"registerSagePlayerProfile",accounts:[{name:"profile",isMut:!1,isSigner:!1,docs:["The player permissions [`Profile`]"]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new profile"]},{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The `SagePlayerProfile` account"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[]},{name:"registerSagePointModifier",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder - pays for account rent"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The `PointCategory`"]},{name:"pointsModifier",isMut:!0,isSigner:!1,docs:["The `PointsModifier` account to be created in Points CPI"]},{name:"pointsProgram",isMut:!1,isSigner:!1,docs:["The points program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterSagePointsModifierInput"}}]},{name:"registerSector",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new sector"]},{name:"discoverer",isMut:!1,isSigner:!1,docs:["The discoverer of this sector"]},{name:"sector",isMut:!0,isSigner:!1,docs:["The [`Sector`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"coordinates",type:{array:["i64",2]}},{name:"name",type:{array:["u8",64]}},{name:"keyIndex",type:"u16"}]},{name:"registerShip",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new game"]},{name:"ship",isMut:!0,isSigner:!0,docs:["The [`Ship`] account"]},{name:"mint",isMut:!1,isSigner:!1,docs:["The mint address representing the [`Ship`]"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterShipInput"}}]},{name:"registerStar",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder - pays for account rent"]},{name:"star",isMut:!0,isSigner:!0,docs:["The [`Star`] account"]},{name:"sector",isMut:!0,isSigner:!1,docs:["The [`Sector`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterStarInput"}}]},{name:"registerStarbase",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new star base"]},{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"sector",isMut:!1,isSigner:!1,docs:["The [`Sector`] account"]},{name:"gameStateAndProfile",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterStarbaseInputUnpacked"}}]},{name:"registerStarbasePlayer",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder -- pays account rent"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"sagePlayerProfile",isMut:!1,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the player belongs to."]},{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] account to initialize"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[]},{name:"registerSurveyDataUnitTracker",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new `SurveyDataUnitTracker`"]},{name:"surveyDataUnitTracker",isMut:!0,isSigner:!0,docs:["The [`SurveyDataUnitTracker`] account"]},{name:"sduMint",isMut:!1,isSigner:!1,docs:["The Survey Data Unit Mint"]},{name:"resourceMint",isMut:!1,isSigner:!1,docs:["The mint of the resource spent when scanning for SDUs"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RegisterSurveyDataUnitTrackerInput"}}]},{name:"removeCargoPod",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The cargo pod (should be empty)"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[{name:"input",type:{defined:"StarbaseRemoveCargoPodInput"}}]},{name:"removeConnection",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["Where the rent refund funds from the connections go to."]},{name:"sector1",isMut:!0,isSigner:!1,docs:["The first sector to remove from"]},{name:"sector2",isMut:!0,isSigner:!1,docs:["The second sector to remove from"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The system program"]}],args:[{name:"sector1Index",type:"u16"},{name:"sector2Index",type:"u16"},{name:"keyIndex",type:"u16"}]},{name:"removeCrewFromGame",accounts:[{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"sageCrewConfig",isMut:!1,isSigner:!1,docs:["The [`SageCrewConfig`] Account"]},{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"crewConfig",isMut:!1,isSigner:!1,docs:["The crew program `CrewConfig` account"]},{name:"newCrewOwner",isMut:!1,isSigner:!1,docs:["The new crew owner"]},{name:"crewDelegate",isMut:!1,isSigner:!1,docs:["The crew delegate"]},{name:"logWrapper",isMut:!1,isSigner:!1,docs:["The log wrapper"]},{name:"compressionProgram",isMut:!1,isSigner:!1,docs:["The compression program"]},{name:"bubblegumProgram",isMut:!1,isSigner:!1,docs:["The bubblegum program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RemoveCrewInput"}}]},{name:"removeInvalidShipEscrow",accounts:[{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"destinationTokenAccount",isMut:!0,isSigner:!1,docs:["The Destination Token Account"]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`] Account"]},{name:"shipEscrowTokenAccount",isMut:!0,isSigner:!1,docs:["The Escrow Token Account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The Token Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RemoveShipEscrowInput"}}]},{name:"removeShipEscrow",accounts:[{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"sagePlayerProfile",isMut:!0,isSigner:!1,docs:["The [`SagePlayerProfile`] account"]},{name:"destinationTokenAccount",isMut:!0,isSigner:!1,docs:["The Destination Token Account"]},{name:"ship",isMut:!1,isSigner:!1,docs:["The [`Ship`] Account"]},{name:"shipEscrowTokenAccount",isMut:!0,isSigner:!1,docs:["The Escrow Token Account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The Token Program"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"RemoveShipEscrowInput"}}]},{name:"respawnToLoadingBay",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoHold",isMut:!1,isSigner:!1,docs:["The fleet `cargo_hold` cargo pod"]},{name:"fuelTank",isMut:!1,isSigner:!1,docs:["The fleet `fuel_tank` cargo pod"]},{name:"ammoBank",isMut:!1,isSigner:!1,docs:["The fleet `ammo_bank` cargo pod"]}],args:[{name:"input",type:{defined:"RespawnToLoadingBayInput"}}]},{name:"scanForSurveyDataUnits",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"surveyDataUnitTracker",isMut:!1,isSigner:!1,docs:["The [`SurveyDataUnitTracker`] account"]},{name:"surveyDataUnitTrackerSigner",isMut:!1,isSigner:!1,docs:["The `SurveyDataUnitTracker` signer"]},{name:"cargoHold",isMut:!0,isSigner:!1,docs:["The general cargo hold cargo pod for the fleet"]},{name:"sector",isMut:!0,isSigner:!1,docs:["The [`Sector`] account"]},{name:"sduTokenFrom",isMut:!0,isSigner:!1,docs:["Source token account for the SDU, owned by `survey_data_unit_tracker_signer`"]},{name:"sduTokenTo",isMut:!0,isSigner:!1,docs:["Destination token account for the SDU, owned by cargo_hold"]},{name:"resourceTokenFrom",isMut:!0,isSigner:!1,docs:["Token account for `resource_mint`, owned by fleet"]},{name:"resourceMint",isMut:!0,isSigner:!1,docs:["The resource that is spent when scanning for Survey Data Units"]},{name:"sduCargoType",isMut:!1,isSigner:!1,docs:["The cargo type of the SDU"]},{name:"resourceCargoType",isMut:!1,isSigner:!1,docs:["The cargo type of `resource_mint`"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition"]},{name:"dataRunningXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"councilRankXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"progressionConfig",isMut:!1,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"pointsProgram",isMut:!1,isSigner:!1,docs:["The points program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The cargo program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The token program"]},{name:"instructionsSysvar",isMut:!1,isSigner:!1,docs:["Solana Instructions Sysvar"]},{name:"recentSlothashes",isMut:!1,isSigner:!1,docs:["Solana recent slothashes"]}],args:[{name:"input",type:{defined:"ScanForSurveyDataUnitsInput"}}]},{name:"setNextShip",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"ship",isMut:!0,isSigner:!1,docs:["The current [`Ship`] account"]},{name:"nextShip",isMut:!0,isSigner:!1,docs:["The next [`Ship`] account"]}],args:[{name:"keyIndex",type:"u16"}]},{name:"startCraftingProcess",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The [`CraftingProcess`] account"]},{name:"craftingRecipe",isMut:!0,isSigner:!1,docs:["The crafting [`Recipe`]"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"startMiningAsteroid",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fleetFuelTokenAccount",isMut:!1,isSigner:!1,docs:["The fleet fuel token account - owned by the `fuel_tank`"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"mineItem",isMut:!1,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"resource",isMut:!0,isSigner:!1,docs:["The [`Resource`] account"]},{name:"planet",isMut:!0,isSigner:!1,docs:["The [`Planet`] account"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"startStarbaseUpgrade",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"upgradeFacility",isMut:!0,isSigner:!1,docs:["The `CraftingFacility` account for starbase upgrades"]},{name:"upgradeRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the starbase upgrade"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["Solana System program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"startSubwarp",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]}],args:[{name:"input",type:{defined:"StartSubwarpInput"}}]},{name:"stopCraftingProcess",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The [`CraftingProcess`] account"]},{name:"craftingRecipe",isMut:!0,isSigner:!1,docs:["The crafting [`Recipe`]"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The `CraftingFacility` account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"stopMiningAsteroid",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"mineItem",isMut:!1,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"resource",isMut:!0,isSigner:!1,docs:["The [`Resource`] account"]},{name:"planet",isMut:!0,isSigner:!1,docs:["The [`Planet`] account"]},{name:"fuelTank",isMut:!0,isSigner:!1,docs:["The fuel tank cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account for fuel"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `fuel_tank`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token account"]},{name:"pilotXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"miningXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"councilRankXpAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"progressionConfig",isMut:!1,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"pointsProgram",isMut:!1,isSigner:!1,docs:["The points program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"StopMiningAsteroidInput"}}]},{name:"stopSubwarp",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]}],args:[{name:"input",type:{defined:"StopSubwarpInput"}}]},{name:"submitStarbaseUpgradeResource",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"resourceCraftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"resourceCraftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"resourceCraftingFacility",isMut:!1,isSigner:!1,docs:["The crafting facility account"]},{name:"upgradeProcessRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the submission of resources used in the upgrade process"]},{name:"starbaseUpgradeRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the starbase upgrade"]},{name:"resourceRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the resource being submitted","i.e. the recipe for crafting the resource whose mint would be `token_mint`"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod account"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The Cargo Type Account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `crafting_process`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination account of the tokens - owner should be `cargo_pod_to` (receives any refunds)"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The token mint"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"loyaltyPointsAccounts",accounts:[{name:"userPointsAccount",isMut:!0,isSigner:!1,docs:["The User Points Account"]},{name:"pointsCategory",isMut:!1,isSigner:!1,docs:["The Points Category Account"]},{name:"pointsModifierAccount",isMut:!1,isSigner:!1,docs:["The Points Modifier Account"]}]},{name:"progressionConfig",isMut:!1,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"pointsProgram",isMut:!1,isSigner:!1,docs:["The points program"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"SubmitStarbaseUpgradeResourceInput"}}]},{name:"syncStarbasePlayer",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]}],args:[]},{name:"syncStarbaseUpgradeIngredients",accounts:[{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new crafting process"]},{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"upgradeRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe for the starbase upgrade"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["Solana System program"]}],args:[{name:"input",type:{defined:"KeyIndexInput"}}]},{name:"transferCargoAtStarbase",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPodFrom",isMut:!0,isSigner:!1,docs:["The origin cargo pod"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod_from`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod_to`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"StarbaseTransferCargoInput"}}]},{name:"transferCargoWithinFleet",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoPodFrom",isMut:!0,isSigner:!1,docs:["The origin cargo pod"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod_from`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod_to`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"TransferCargoWithinFleetInput"}}]},{name:"unloadFleetCrew",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}],args:[{name:"input",type:{defined:"FleetCrewInput"}}]},{name:"updateGame",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!0,isSigner:!1,docs:["The [`Game`] account"]}]}],args:[{name:"input",type:{defined:"UpdateGameInput"}}]},{name:"updateGameState",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!0,isSigner:!1,docs:["The [`GameState`] account"]}],args:[{name:"input",type:{defined:"UpdateGameStateInput"}}]},{name:"updateMineItem",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"mineItem",isMut:!0,isSigner:!1,docs:["The [`MineItem`] account"]}],args:[{name:"input",type:{defined:"UpdateMineItemInput"}}]},{name:"updatePlanet",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"planet",isMut:!0,isSigner:!1,docs:["The [`Planet`] account"]}],args:[{name:"input",type:{defined:"UpdatePlanetInput"}}]},{name:"updateProgressionConfig",accounts:[{name:"progressionConfig",isMut:!0,isSigner:!1,docs:["The [`ProgressionConfig`] account"]},{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"UpdateProgressionConfigInput"}}]},{name:"updateResource",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"mineItem",isMut:!1,isSigner:!1,docs:["The [`MineItem`] account"]},{name:"resource",isMut:!0,isSigner:!1,docs:["The [`Resource`] account"]}],args:[{name:"input",type:{defined:"UpdateResourceInput"}}]},{name:"updateShip",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"ship",isMut:!0,isSigner:!1,docs:["The [`Ship`] account"]}],args:[{name:"input",type:{defined:"UpdateShipInput"}}]},{name:"updateShipEscrow",accounts:[{name:"oldShip",isMut:!1,isSigner:!1,docs:["The old [`Ship`] Account"]},{name:"next",isMut:!1,isSigner:!1,docs:["The address indicated as `next` in the `old_ship` account"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!0,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]}],args:[{name:"input",type:{defined:"UpdateShipEscrowInput"}}]},{name:"updateShipInFleet",accounts:[{name:"fleet",isMut:!0,isSigner:!1,docs:["The [`Fleet`] account"]},{name:"fleetShips",isMut:!0,isSigner:!1,docs:["The [`FleetShips`] account"]},{name:"oldShip",isMut:!1,isSigner:!1,docs:["The old [`Ship`] Account"]},{name:"next",isMut:!1,isSigner:!1,docs:["The address indicated as `next` in the `old_ship` account"]},{name:"gameAccounts",accounts:[{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]}],args:[{name:"input",type:{defined:"UpdateShipFleetInput"}}]},{name:"updateStar",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"star",isMut:!0,isSigner:!1,docs:["The [`Star`] account"]}],args:[{name:"input",type:{defined:"UpdateStarInput"}}]},{name:"updateStarbase",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"funder",isMut:!0,isSigner:!0,docs:["The funder for the new game"]},{name:"starbase",isMut:!0,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"systemProgram",isMut:!1,isSigner:!1,docs:["The Solana System program"]}],args:[{name:"input",type:{defined:"UpdateStarbaseInput"}}]},{name:"updateSurveyDataUnitTracker",accounts:[{name:"gameAndProfile",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"surveyDataUnitTracker",isMut:!0,isSigner:!1,docs:["The [`SurveyDataUnitTracker`] account"]}],args:[{name:"input",type:{defined:"UpdateSurveyDataUnitTrackerInput"}}]},{name:"warpLane",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fromStarbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"toStarbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"fromSector",isMut:!1,isSigner:!1,docs:["The Sector account representing the fleet`s  current sector"]},{name:"toSector",isMut:!1,isSigner:!1,docs:["The Sector account that `Fleet` will move to"]},{name:"fuelTank",isMut:!0,isSigner:!1,docs:["The fuel tank cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The `Cargo Type` Account"]},{name:"statsDefinition",isMut:!1,isSigner:!1,docs:["The `CargoStatsDefinition` for the cargo type"]},{name:"fuelTokenFrom",isMut:!0,isSigner:!1,docs:["The fuel source token account - owned by the `fuel_tank`"]},{name:"fuelMint",isMut:!0,isSigner:!1,docs:["Token Mint - The fuel mint"]},{name:"feeTokenFrom",isMut:!0,isSigner:!1,docs:["The fee source token account"]},{name:"feeTokenTo",isMut:!0,isSigner:!1,docs:["The fee destination token account"]},{name:"feeMint",isMut:!0,isSigner:!1,docs:["Fee Token Mint"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"WarpLaneInput"}}]},{name:"warpToCoordinate",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"fuelTank",isMut:!0,isSigner:!1,docs:["The fuel tank cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account for fuel"]},{name:"statsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `fuel_tank`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["Token Mint - The fuel mint"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"WarpToCoordinateInput"}}]},{name:"withdrawCargoFromFleet",accounts:[{name:"gameAccountsFleetAndOwner",accounts:[{name:"gameFleetAndOwner",accounts:[{name:"fleetAndOwner",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key on the profile."]},{name:"owningProfile",isMut:!1,isSigner:!1,docs:["The profile that owns the fleet."]},{name:"owningProfileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"fleet",isMut:!0,isSigner:!1,docs:["The fleet."]}]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"cargoPodFrom",isMut:!0,isSigner:!1,docs:["The origin cargo pod, owned by the fleet"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod, owned by the Starbase player"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod_from`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `cargo_pod_to`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"WithdrawCargoFromFleetInput"}}]},{name:"withdrawCargoFromGame",accounts:[{name:"fundsTo",isMut:!0,isSigner:!1,docs:["The funds_to - receives rent refund"]},{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"cargoPod",isMut:!0,isSigner:!1,docs:["The new cargo pod"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The cargo type account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source token account - owned by the `cargo_pod`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination token account - owned by the `key`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The mint of the token accounts"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["Token Program"]}],args:[{name:"input",type:{defined:"CargoToGameInput"}}]},{name:"withdrawCraftingIngredient",accounts:[{name:"starbaseAndStarbasePlayer",accounts:[{name:"starbase",isMut:!1,isSigner:!1,docs:["The [`Starbase`] account"]},{name:"starbasePlayer",isMut:!1,isSigner:!1,docs:["The [`StarbasePlayer`] Account"]}]},{name:"craftingInstance",isMut:!1,isSigner:!1,docs:["The [`CraftingInstance`] account"]},{name:"craftingFacility",isMut:!1,isSigner:!1,docs:["The [`CraftingFacility`](crafting::CraftingFacility) account"]},{name:"craftingProcess",isMut:!0,isSigner:!1,docs:["The crafting process account"]},{name:"cargoPodTo",isMut:!0,isSigner:!1,docs:["The destination cargo pod account"]},{name:"craftingRecipe",isMut:!1,isSigner:!1,docs:["The crafting recipe"]},{name:"cargoType",isMut:!1,isSigner:!1,docs:["The Cargo Type Account"]},{name:"cargoStatsDefinition",isMut:!1,isSigner:!1,docs:["The cargo stats definition account"]},{name:"gameAccountsAndProfile",accounts:[{name:"gameAndProfileAndFaction",accounts:[{name:"key",isMut:!1,isSigner:!0,docs:["The key authorized for this instruction"]},{name:"profile",isMut:!1,isSigner:!1,docs:["The [`Profile`] account"]},{name:"profileFaction",isMut:!1,isSigner:!1,docs:["The faction that the profile belongs to."]},{name:"gameId",isMut:!1,isSigner:!1,docs:["The [`Game`] account"]}]},{name:"gameState",isMut:!1,isSigner:!1,docs:["The [`GameState`] account"]}]},{name:"tokenFrom",isMut:!0,isSigner:!1,docs:["The source account of the tokens - owner should be `crafting_process`"]},{name:"tokenTo",isMut:!0,isSigner:!1,docs:["The destination account of the tokens - owner should be `cargo_pod_to`"]},{name:"tokenMint",isMut:!0,isSigner:!1,docs:["The token mint"]},{name:"craftingProgram",isMut:!1,isSigner:!1,docs:["The Crafting Program"]},{name:"cargoProgram",isMut:!1,isSigner:!1,docs:["The Cargo Program"]},{name:"tokenProgram",isMut:!1,isSigner:!1,docs:["The [Token] program"]}],args:[{name:"input",type:{defined:"StarbaseWithdrawCraftingIngredientInput"}}]}],accounts:[{name:"craftingInstance",docs:["This account is used to store relevant information for a crafting process instance"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account"],type:"u8"},{name:"seqId",docs:["The sequence id for the `Starbase`"],type:"u16"},{name:"authority",docs:["The authority over the `CraftingInstance`"],type:"publicKey"},{name:"craftingProcess",docs:["The `CraftingProcess` account address"],type:"publicKey"},{name:"instanceType",docs:["the planet type"],type:"u8"},{name:"numCrew",docs:["The number of crew taking part in the crafting process"],type:"u64"},{name:"bump",docs:["Bump of Account PDA"],type:"u8"}]}},{name:"disbandedFleet",docs:["Keeps track of a fleet while it is disbanded"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["The game id this belongs to."],type:"publicKey"},{name:"ownerProfile",docs:["The owner's profile."],type:"publicKey"},{name:"starbase",docs:["The `Starbase` at which the original `Fleet` was disbanded."],type:"publicKey"},{name:"fleetLabel",docs:["The label or name of the disbanded fleet."],type:{array:["u8",32]}},{name:"fleetShips",docs:["The `FleetShips` account belonging to the original `Fleet` that was disbanded."],type:"publicKey"},{name:"bump",docs:["The disbanded fleet's bump."],type:"u8"}]}},{name:"fleet",docs:["A `SAGE` fleet."],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["The game id this belongs to."],type:"publicKey"},{name:"ownerProfile",docs:["The owner's profile."],type:"publicKey"},{name:"fleetShips",docs:["Fleet Ships Key"],type:"publicKey"},{name:"subProfile",docs:["The fleet's sub-authority.","If [`Some`] will have the exclusive ability to interact with this fleet."],type:{defined:"OptionalNonSystemPubkey"}},{name:"subProfileInvalidator",docs:["The authority for revoking a sun-authority."],type:"publicKey"},{name:"faction",docs:["The faction of the profile."],type:"u8"},{name:"fleetLabel",docs:["The label or name of the fleet."],type:{array:["u8",32]}},{name:"shipCounts",docs:["The number of ships in the fleet."],type:{defined:"ShipCounts"}},{name:"warpCooldownExpiresAt",docs:["The time at which the warp cooldown expires"],type:"i64"},{name:"scanCooldownExpiresAt",docs:["The time at which the scan cooldown expires"],type:"i64"},{name:"stats",docs:["The fleet's stats."],type:{defined:"ShipStats"}},{name:"cargoHold",docs:["The Cargo pod representing the fleet's cargo hold"],type:"publicKey"},{name:"fuelTank",docs:["The Cargo pod representing the fleet's fuel tank"],type:"publicKey"},{name:"ammoBank",docs:["The Cargo pod representing the fleet's ammo bank"],type:"publicKey"},{name:"updateId",docs:["The update id for the `Fleet`"],type:"u64"},{name:"bump",docs:["The fleet's bump."],type:"u8"}]}},{name:"fleetShips",docs:["Keeps track of a the individual ships that make up a fleet"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"fleet",docs:["The `Fleet` account this belongs to"],type:"publicKey"},{name:"fleetShipsInfoCount",docs:["List length of `RemainingData`"],type:"u32"},{name:"bump",docs:["The disbanded fleet's bump."],type:"u8"}]}},{name:"game",docs:["Global Game Configuration variables"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"updateId",docs:["The sequence id for updates."],type:"u64"},{name:"profile",docs:["The [`Profile`](player_profile::state::Profile) that handles the sector program permissions"],type:"publicKey"},{name:"gameState",docs:["The associated `GameState` account."],type:"publicKey"},{name:"points",docs:["Points setting"],type:{defined:"Points"}},{name:"cargo",docs:["Cargo settings"],type:{defined:"Cargo"}},{name:"crafting",docs:["Crafting settings"],type:{defined:"Crafting"}},{name:"mints",docs:["mint related settings"],type:{defined:"Mints"}},{name:"vaults",docs:["vault related settings"],type:{defined:"Vaults"}},{name:"riskZones",docs:["Data for risk zones"],type:{defined:"RiskZonesData"}}]}},{name:"gameState",docs:["Keeps track of variables that may change frequently during a `Game` session"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account"],type:"u8"},{name:"updateId",docs:["The sequence id for updates"],type:"u64"},{name:"gameId",docs:["The `Game` that this belongs to"],type:"publicKey"},{name:"fleet",docs:["Fleet settings"],type:{defined:"FleetInfo"}},{name:"misc",docs:["Miscellaneous settings"],type:{defined:"MiscVariables"}},{name:"bump",docs:["PDA bump"],type:"u8"}]}},{name:"mineItem",docs:["Represents a token registered as an item that can be mined"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["the game_id account this item is registered with"],type:"publicKey"},{name:"name",docs:["The name of the `MineItem`"],type:{array:["u8",64]}},{name:"mint",docs:["the mint representing the items mined"],type:"publicKey"},{name:"resourceHardness",docs:["How hard it is to mine this item -> Ranges from 1-10"],type:"u16"},{name:"numResourceAccounts",docs:["The number of resource accounts for this mine item"],type:"u64"},{name:"bump",docs:["bump for PDA"],type:"u8"}]}},{name:"planet",docs:["Planet"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"name",docs:["The name of this `Planet`"],type:{array:["u8",64]}},{name:"gameId",docs:["the `Game` that this belongs to"],type:"publicKey"},{name:"sector",docs:["the sector that this belongs to"],type:{array:["i64",2]}},{name:"subCoordinates",docs:["sub_coordinates as [x, y]"],type:{array:["i64",2]}},{name:"planetType",docs:["the planet type"],type:"u8"},{name:"position",docs:["the planet position"],type:"u8"},{name:"size",docs:["size"],type:"u64"},{name:"maxHp",docs:["maximum health"],type:"u64"},{name:"currentHealth",docs:["The current health of the `Planet`."],type:"u64"},{name:"amountMined",docs:["the cumulative amount mined from this `Asteroid`"],type:"u64"},{name:"numResources",docs:["the number of resources at this `Asteroid`"],type:"u8"},{name:"numMiners",docs:["the number of entities currently mining at this `Asteroid`"],type:"u64"}]}},{name:"playerCrewRecord",docs:["An account used to record how many crew members have been added to the game by a player",'This is meant to be used temporarily during the crew "pre add" period where players can add crew members to the game but not use them'],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account"],type:"u8"},{name:"playerProfile",docs:["The `Profile` key"],type:"publicKey"},{name:"crewConfig",docs:["The `SageCrewConfig` key"],type:"publicKey"},{name:"gameId",docs:["The id of the `Game`"],type:"publicKey"},{name:"count",docs:["The number of crew members"],type:"u32"},{name:"bump",docs:["Bump of Account PDA"],type:"u8"}]}},{name:"progressionConfig",docs:["Progression Config"],type:{kind:"struct",fields:[{name:"version",docs:["the data version of this account."],type:"u8"},{name:"gameId",docs:["the `Game` that this belongs to"],type:"publicKey"},{name:"dailyLpLimit",docs:["the daily limit for Loyalty Points (LP)"],type:"u64"},{name:"dailyCouncilRankXpLimit",docs:["the daily limit for Council Rank Experience Points (CRXP)"],type:"u64"},{name:"dailyPilotXpLimit",docs:["the daily limit for Pilot License Experience Points (PXP)"],type:"u64"},{name:"dailyDataRunningXpLimit",docs:["the daily limit for Data Running Experience Points (DRXP)"],type:"u64"},{name:"dailyMiningXpLimit",docs:["the daily limit for Mining Experience Points (MXP)"],type:"u64"},{name:"dailyCraftingXpLimit",docs:["the daily limit for Crafting Experience Points (CXP)"],type:"u64"},{name:"numItems",docs:["number of progression items being tracked"],type:"u16"}]}},{name:"resource",docs:["Represents a mine-able item existing at a particular location (e.g. a planet)"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["the game_id pubkey"],type:"publicKey"},{name:"location",docs:["the location's pubkey"],type:"publicKey"},{name:"mineItem",docs:["the mine item pubkey"],type:"publicKey"},{name:"locationType",docs:["the location type"],type:"u8"},{name:"systemRichness",docs:["How abundant the resource is at the location -> Ranges from 1-5"],type:"u16"},{name:"amountMined",docs:["the cumulative amount mined from this resource"],type:"u64"},{name:"numMiners",docs:["the number of entities currently mining this resource"],type:"u64"},{name:"bump",docs:["bump for PDA"],type:"u8"}]}},{name:"sageCrewConfig",docs:["SAGE crew Config"],type:{kind:"struct",fields:[{name:"version",docs:["the data version of this account."],type:"u8"},{name:"gameId",docs:["the `Game` that this belongs to"],type:"publicKey"},{name:"config",docs:["the `CrewConfig` account address"],type:"publicKey"},{name:"bump",docs:["Bump of Account PDA"],type:"u8"}]}},{name:"sagePlayerProfile",docs:["A `SAGE` player's profile."],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account"],type:"u8"},{name:"playerProfile",docs:["The `Profile` key"],type:"publicKey"},{name:"gameId",docs:["The id of the `Game`"],type:"publicKey"},{name:"bump",docs:["Bump of Account PDA"],type:"u8"}]}},{name:"sector",docs:["Sector"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["the game_id that this belongs to"],type:"publicKey"},{name:"coordinates",docs:["coordinates as [x, y]"],type:{array:["i64",2]}},{name:"discoverer",docs:["The discoverer of this sector"],type:"publicKey"},{name:"name",docs:["The name of this sector"],type:{array:["u8",64]}},{name:"numStars",docs:["the number of stars in this system"],type:"u16"},{name:"numPlanets",docs:["the number of planets in this system"],type:"u16"},{name:"numMoons",docs:["the number of moons in this system"],type:"u16"},{name:"numAsteroidBelts",docs:["the number of num_asteroid belts in this system"],type:"u16"},{name:"lastScanTime",docs:["The last time the `Sector` was scanned"],type:"i64"},{name:"lastScanChance",docs:["The probability of finding SDUs in the `Sector` from the last time it was scanned"],type:"u32"},{name:"bump",docs:["PDA bump"],type:"u8"},{name:"numConnections",docs:["the number of connections in this system"],type:"u16"}]}},{name:"ship",docs:["This account represents a Ship"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["the game_id account this Ship is registered with"],type:"publicKey"},{name:"mint",docs:["the mint representing the Ship"],type:"publicKey"},{name:"name",docs:["The name of this `Ship`"],type:{array:["u8",64]}},{name:"sizeClass",docs:["the ship's size class"],type:"u8"},{name:"stats",docs:["The ship's stats"],type:{defined:"ShipStats"}},{name:"updateId",docs:["The `update_id` for the `Ship`"],type:"u64"},{name:"maxUpdateId",docs:["The max `Game` `update_id` that the `Ship` is valid for"],type:"u64"},{name:"next",docs:["the next `Ship` account to use when this `Ship` is updated"],type:{defined:"OptionalNonSystemPubkey"}}]}},{name:"star",docs:["`Star` account"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"name",docs:["The name of this `Star`"],type:{array:["u8",64]}},{name:"gameId",docs:["the game_id that this belongs to"],type:"publicKey"},{name:"sector",docs:["the sector that this belongs to"],type:{array:["i64",2]}},{name:"size",docs:["size"],type:"u64"},{name:"subCoordinates",docs:["sub_coordinates as [x, y]"],type:{array:["i64",2]}},{name:"starType",docs:["the star type"],type:"u8"}]}},{name:"starbase",docs:["Starbase"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this `Starbase` account."],type:"u8"},{name:"gameId",docs:["the game_id that this `Starbase` belongs to"],type:"publicKey"},{name:"sector",docs:["the sector that this `Starbase` belongs to"],type:{array:["i64",2]}},{name:"craftingFacility",docs:["the [`CraftingFacility`] to use for crafting at this `Starbase`"],type:"publicKey"},{name:"upgradeFacility",docs:["the [`CraftingFacility`] to use for upgrade jobs at this `Starbase`"],type:"publicKey"},{name:"name",docs:["The name of this `Starbase`"],type:{array:["u8",64]}},{name:"subCoordinates",docs:["coordinates as [x, y]"],type:{array:["i64",2]}},{name:"faction",docs:["The faction of the `Starbase`."],type:"u8"},{name:"bump",docs:["bump for PDA"],type:"u8"},{name:"seqId",docs:["The sequence id for the `Starbase`"],type:"u16"},{name:"state",docs:["The state of the `Starbase`. Is a [`StarbaseState`]."],type:"u8"},{name:"level",docs:["The level of the `Starbase`."],type:"u8"},{name:"hp",docs:["The `Starbase` health points."],type:"u64"},{name:"sp",docs:["The `Starbase` shield points."],type:"u64"},{name:"sectorRingAvailable",docs:["The planet position (`sector::state::Ring`) available for this `Starbase`"],type:"u8"},{name:"upgradeState",docs:["The `Starbase` upgrade state"],type:"u8"},{name:"upgradeIngredientsChecksum",docs:["used to check if expected upgrade ingredients have been supplied"],type:{array:["u8",16]}},{name:"numUpgradeIngredients",docs:["number of ingredients needed for starbase upgrade"],type:"u8"},{name:"upkeepAmmoBalance",docs:["The balance of ammo for upkeep"],type:"u64"},{name:"upkeepAmmoLastUpdate",docs:["The last time ammo for upkeep was updated (Local time)"],type:"i64"},{name:"upkeepAmmoGlobalLastUpdate",docs:["The last time ammo for upkeep was updated (Global time)"],type:"i64"},{name:"upkeepFoodBalance",docs:["The balance of food for upkeep"],type:"u64"},{name:"upkeepFoodLastUpdate",docs:["The last time food for upkeep was updated (Local time)"],type:"i64"},{name:"upkeepFoodGlobalLastUpdate",docs:["The last time food for upkeep was updated (Global time)"],type:"i64"},{name:"upkeepToolkitBalance",docs:["The balance of toolkits for upkeep"],type:"u64"},{name:"upkeepToolkitLastUpdate",docs:["The last time toolkits for upkeep was updated (Local time)"],type:"i64"},{name:"upkeepToolkitGlobalLastUpdate",docs:["The last time toolkits for upkeep was updated (Global time)"],type:"i64"},{name:"builtDestroyedTimestamp",docs:["The last time the starbase was built or destroyed"],type:"i64"}]}},{name:"starbasePlayer",docs:["The `SAGE` player info within a `Starbase`"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account"],type:"u8"},{name:"playerProfile",docs:["The `Profile` key"],type:"publicKey"},{name:"gameId",docs:["The id of the `Game`"],type:"publicKey"},{name:"starbase",docs:["The `Starbase` key"],type:"publicKey"},{name:"sagePlayerProfile",docs:["The `SagePlayerProfile` key"],type:"publicKey"},{name:"bump",docs:["Bump of Account PDA"],type:"u8"},{name:"shipEscrowCount",docs:["List length of `RemainingData`"],type:"u32"},{name:"oldTotalCrew",docs:["The old total crew members from the player's fleets at the `Starbase`","This is used BEFORE crew program features are turned ON"],type:"u32"},{name:"newTotalCrew",docs:["The new total crew members from the player's fleets at the `Starbase`","This is used AFTER crew program features are turned ON"],type:"u32"},{name:"busyCrew",docs:["The number of crew members that is engaged/busy and not available"],type:"u64"},{name:"updateId",docs:["The `Game` update id"],type:"u64"},{name:"updatedShipEscrowCount",docs:["Number of updated items in `RemainingData` list","This will be `ship_escrow_count` when all ships in escrow are up-to-date"],type:"u32"}]}},{name:"surveyDataUnitTracker",docs:["Survey Data Unit (SDU) Tracker"],type:{kind:"struct",fields:[{name:"version",docs:["The data version of this account."],type:"u8"},{name:"gameId",docs:["The game_id that this belongs to"],type:"publicKey"},{name:"sduMint",docs:["The Survey Data Unit Mint"],type:"publicKey"},{name:"resourceMint",docs:["The mint of the resource spent when scanning for SDUs"],type:"publicKey"},{name:"signer",docs:["The signer for this account"],type:"publicKey"},{name:"signerBump",docs:["The signer for this account"],type:"u8"},{name:"coordinatesRange",docs:["The valid coordinates range","e.g. a value of [-50, 50] means that coordinates from [-50, -50] to [50, 50] are valid for SDU scanning"],type:{array:["i64",2]}},{name:"cssCoordinates",docs:["The locations of the central space stations (CSS) of the three factions"],type:{array:[{array:["i64",2]},3]}},{name:"originCoordinates",docs:['The co-ordinates of the "origin"; used in calculating SDU probability'],type:{array:["i64",2]}},{name:"cssMaxDistance",docs:["The max distance from the nearest CSS; used in calculating SDU probability"],type:"u32"},{name:"originMaxDistance",docs:["The max distance from the `origin_coordinates`; used in calculating SDU probability"],type:"u32"},{name:"distanceWeighting",docs:["The distance weighting; used in calculating SDU probability"],type:"u32"},{name:"tMax",docs:["The maximum time before SDU probability at a location changes"],type:"i64"},{name:"xMul",docs:["Multiplier in the X dimension; used in noise function"],type:"u32"},{name:"yMul",docs:["Multiplier in the Y dimension; used in noise function"],type:"u32"},{name:"zMul",docs:["Multiplier in the Z dimension; used in noise function"],type:"u32"},{name:"sduMaxPerSector",docs:["The maximum number of SDUs that can be found per scan per sector"],type:"u32"},{name:"scanChanceRegenPeriod",docs:["The amount of time in seconds that it takes for a sector scan chance to fully regenerate"],type:"i16"}]}}],types:[{name:"AddCrewInput",docs:["Struct for data input for `AddCrew`"],type:{kind:"struct",fields:[{name:"items",docs:["inputs required to transfer crew cNFTs"],type:{vec:{defined:"CrewTransferInput"}}}]}},{name:"AddShipEscrowInput",docs:["Struct for data input for `AddShipEscrow`"],type:{kind:"struct",fields:[{name:"shipAmount",docs:["Amount of `Ship` tokens to transfer to escrow"],type:"u64"},{name:"index",docs:["Index of `WrappedShipEscrow` in remaining data of `StarbasePlayer`","Some index `WrappedShipEscrow`, or None for new `WrappedShipEscrow`"],type:{option:"u32"}}]}},{name:"AddShipToFleetInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"shipAmount",docs:["Number of ships to add to the fleet"],type:"u8"},{name:"shipEscrowIndex",docs:["Index of `WrappedShipEscrow` in remaining data of `StarbasePlayer`"],type:"u32"},{name:"fleetShipInfoIndex",docs:["Index of `FleetShipsInfo` in remaining data of `FleetShips`"],type:{option:"u32"}},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"Cargo",docs:["Variables for the Cargo program"],type:{kind:"struct",fields:[{name:"statsDefinition",docs:["The cargo stats definition account"],type:"publicKey"}]}},{name:"CargoStats",docs:["A ship's cargo stats"],type:{kind:"struct",fields:[{name:"cargoCapacity",docs:["the capacity of the ship's cargo hold"],type:"u32"},{name:"fuelCapacity",docs:["the capacity of the ship's fuel tank"],type:"u32"},{name:"ammoCapacity",docs:["the capacity of the ship's ammo bank"],type:"u32"},{name:"ammoConsumptionRate",docs:["the amount of ammo consumed per second by the ship when doing non-combat activities e.g. mining"],type:"u32"},{name:"foodConsumptionRate",docs:["the amount of food consumed per second by the ship when doing non-combat activities e.g. mining"],type:"u32"},{name:"miningRate",docs:["the amount of resources that can be mined by a ship per second"],type:"u32"},{name:"upgradeRate",docs:["the amount of upgrade material that is consumed by a ship per second while upgrading a Starbase"],type:"u32"},{name:"cargoTransferRate",docs:["the amount of cargo that a ship can transfer per second to another ship outside of dock"],type:"u32"},{name:"tractorBeamGatherRate",docs:["the amount of cargo that the ship can gather per second using its tractor beam"],type:"u32"}]}},{name:"CargoStatsUnpacked",docs:["Unpacked version of [`CargoStats`]"],type:{kind:"struct",fields:[{name:"cargoCapacity",docs:["the capacity of the ship's cargo hold"],type:"u32"},{name:"fuelCapacity",docs:["the capacity of the ship's fuel tank"],type:"u32"},{name:"ammoCapacity",docs:["the capacity of the ship's ammo bank"],type:"u32"},{name:"ammoConsumptionRate",docs:["the amount of ammo consumed per second by the ship when doing non-combat activities e.g. mining"],type:"u32"},{name:"foodConsumptionRate",docs:["the amount of food consumed per second by the ship when doing non-combat activities e.g. mining"],type:"u32"},{name:"miningRate",docs:["the amount of resources that can be mined by a ship per second"],type:"u32"},{name:"upgradeRate",docs:["the amount of upgrade material that is consumed by a ship per second while upgrading a Starbase"],type:"u32"},{name:"cargoTransferRate",docs:["the amount of cargo that a ship can transfer per second to another ship outside of dock"],type:"u32"},{name:"tractorBeamGatherRate",docs:["the amount of cargo that the ship can gather per second using its tractor beam"],type:"u32"}]}},{name:"CargoToGameInput",docs:["Struct for data input to `DepositCargoToGame`"],type:{kind:"struct",fields:[{name:"amount",docs:["cargo amount"],type:"u64"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"CloseDisbandedFleetInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"Crafting",docs:["Variables for the Crafting program"],type:{kind:"struct",fields:[{name:"domain",docs:["The crafting domain account"],type:"publicKey"}]}},{name:"CraftingInstanceType",docs:["Represents the type of `CraftingInstance`"],type:{kind:"enum",variants:[{name:"StarbaseCrafting"},{name:"StarbaseUpgradeMaterial"}]}},{name:"CreateFleetInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"shipAmount",docs:["Number of ships to add to the fleet"],type:"u8"},{name:"fleetLabel",docs:["the fleet label"],type:{array:["u8",32]}},{name:"shipEscrowIndex",docs:["Index of `WrappedShipEscrow` in remaining data of `StarbasePlayer`"],type:"u32"},{name:"cargoHoldSeeds",docs:["cargo hold seeds"],type:{array:["u8",32]}},{name:"fuelTankSeeds",docs:["fuel tank seeds"],type:{array:["u8",32]}},{name:"ammoBankSeeds",docs:["ammo bank seeds"],type:{array:["u8",32]}},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"CrewTransferInput",docs:["Struct for data input for crew cNFT transfer"],type:{kind:"struct",fields:[{name:"dataHash",docs:["The crew cNFT data hash"],type:{array:["u8",32]}},{name:"proofCount",docs:["The number of proofs for the crew cNFT"],type:"u8"},{name:"leafIndex",docs:["The crew cNFT index (index of the leaf node in the Merkle tree)"],type:"u32"}]}},{name:"DepositCargoToFleetInput",docs:["Struct for data input to `DepositCargoToFleet`"],type:{kind:"struct",fields:[{name:"amount",docs:["cargo amount"],type:"u64"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"DepositStarbaseUpkeepResourceInput",docs:["Submit starbase upkeep resource inputs"],type:{kind:"struct",fields:[{name:"pointsProgramPermissionsKeyIndex",docs:["the index of the points program permissions in the player profile"],type:"u16"},{name:"sagePermissionsKeyIndex",docs:["the index of the key in sage permissions in the player profile"],type:"u16"},{name:"resourceType",docs:["the resource type"],type:"u8"},{name:"resourceIndex",docs:["the index of the resource represented by `token_mint` in the `resource_recipe` ingredients list"],type:"u16"},{name:"amount",docs:["the amount"],type:"u64"},{name:"epochIndex",docs:["the index of the epoch in the `RedemptionConfig` account"],type:"u16"}]}},{name:"DeregisterSurveyDataUnitTrackerInput",docs:["Struct for data input that has `key_index`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"DevAddCrewInput",docs:["Struct for data input to Dev Add Crew"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["The index of the key in the permissions profile"],type:"u16"},{name:"crewCount",docs:["The number of crew to add or remove"],type:"i32"}]}},{name:"DisbandFleetInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"DisbandedFleetToEscrowInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"shipAmount",docs:["Number of ships to add to the fleet"],type:"u16"},{name:"shipEscrowIndex",docs:["Index of `WrappedShipEscrow` in remaining data of `StarbasePlayer`"],type:{option:"u32"}},{name:"fleetShipInfoIndex",docs:["Index of `FleetShipsInfo` in remaining data of `FleetShips`"],type:"u32"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"DiscoverSectorInput",docs:["Struct for data input for `DiscoverSector`"],type:{kind:"struct",fields:[{name:"coordinates",docs:["The coordinates of the new `Sector`"],type:{array:["i64",2]}},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"FactionsStarbaseLevelInfo",docs:["`Starbase` levels discriminated by faction"],type:{kind:"struct",fields:[{name:"mud",docs:["Mud Starbase Levels Info"],type:{array:[{defined:"StarbaseLevelInfo"},7]}},{name:"oni",docs:["Oni Starbase Levels Info"],type:{array:[{defined:"StarbaseLevelInfo"},7]}},{name:"ustur",docs:["Ustur Starbase Levels Info"],type:{array:[{defined:"StarbaseLevelInfo"},7]}}]}},{name:"FleetCrewInput",docs:["Struct for data input to `FleetCrew`"],type:{kind:"struct",fields:[{name:"count",docs:["passenger count"],type:"u16"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"FleetInfo",docs:["Variables for the Fleet program"],type:{kind:"struct",fields:[{name:"starbaseLevels",docs:["`Starbase` levels discriminated by faction"],type:{defined:"FactionsStarbaseLevelInfo"}},{name:"upkeep",docs:["`Starbase` upkeep discriminated by level"],type:{defined:"StarbaseUpkeepLevels"}},{name:"maxFleetSize",docs:["Maximum `Fleet` size allowed"],type:"u32"}]}},{name:"FleetInput",docs:["Struct for data input to Update fleet settings"],type:{kind:"struct",fields:[{name:"starbaseLevelInfoArray",docs:["`Starbase` Level Info array"],type:{option:{vec:{defined:"StarbaseLevelInfoArrayInput"}}}},{name:"upkeepInfoArray",docs:["`Starbase` Level Info array"],type:{option:{vec:{defined:"StarbaseUpkeepInfoArrayInput"}}}},{name:"maxFleetSize",docs:["Maximum `Fleet` size allowed"],type:{option:"u32"}}]}},{name:"FleetShipsInfo",docs:["Struct that represents info on a single ship type in a fleet"],type:{kind:"struct",fields:[{name:"ship",docs:["The `Ship` account address"],type:"publicKey"},{name:"amount",docs:["The `Ship` token amount in escrow"],type:"u64"},{name:"updateId",docs:["The update id for the `Ship`"],type:"u64"}]}},{name:"ForcedDisbandFleetInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"fleetShipInfoIndex",docs:["Index of `FleetShipsInfo` in remaining data of `FleetShips`"],type:"u32"}]}},{name:"Idle",docs:["The data for the [`FleetStateData::Idle`](crate::state_machine::FleetStateData::Idle) state"],type:{kind:"struct",fields:[{name:"sector",docs:["The star system the fleet is in"],type:{array:["i64",2]}}]}},{name:"IdleToRespawnInput",docs:["Struct for data input to initialize an `IdleToRespawn` Ix"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["index of the key in the player profile"],type:"u16"}]}},{name:"IngredientIndexInput",docs:["Struct for data input that has `key_index`"],type:{kind:"struct",fields:[{name:"ingredientIndex",docs:["the index of the recipe output"],type:"u16"}]}},{name:"InitGameStateInput",docs:["Struct for data input to `InitGameState`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"KeyIndexInput",docs:["Struct for data input that has `key_index`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"LocationType",docs:["Represents different types of locations that a `Resource` might be found"],type:{kind:"enum",variants:[{name:"Planet"}]}},{name:"ManageGameInput",docs:["Struct for data input to managing Game accounts"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"MineAsteroid",docs:["The data for the [`FleetStateData::MineAsteroid`](crate::state_machine::FleetStateData::MineAsteroid) state"],type:{kind:"struct",fields:[{name:"asteroid",docs:["The `Asteroid` the `Fleet` is mining (Must be an asteroid belt)"],type:"publicKey"},{name:"resource",docs:["The `Resource` being mined on the `Asteroid`"],type:"publicKey"},{name:"start",docs:["The timestamp at which mining activity started"],type:"i64"},{name:"end",docs:["The timestamp at which mining activity stops"],type:"i64"},{name:"amountMined",docs:["The cumulative amount mined"],type:"u64"},{name:"lastUpdate",docs:["The last time the `Fleet` was updated"],type:"i64"}]}},{name:"MineAsteroidToRespawnInput",docs:["Struct for data input for `MineAsteroidToRespawnInput`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"Mints",docs:["Token mints"],type:{kind:"struct",fields:[{name:"atlas",docs:["ATLAS token mint"],type:"publicKey"},{name:"polis",docs:["POLIS token mint"],type:"publicKey"},{name:"ammo",docs:["ammunition"],type:"publicKey"},{name:"food",docs:["food"],type:"publicKey"},{name:"fuel",docs:["fuel"],type:"publicKey"},{name:"repairKit",docs:["repair kit"],type:"publicKey"}]}},{name:"MiscStats",docs:["A ship's miscellaneous stats"],type:{kind:"struct",fields:[{name:"requiredCrew",docs:["Number of crew required to operate the ship"],type:"u16"},{name:"passengerCapacity",docs:["Number of crew that the ship can carry as passengers"],type:"u16"},{name:"crewCount",docs:["Total number of crew on the ship (required crew + passengers on board)","Will be zero until `CREW_FEATURE` is enabled"],type:"u16"},{name:"rentedCrew",docs:["Total number of crew that were rented out together with the fleet"],type:"u16"},{name:"respawnTime",docs:["the time it takes the ship to respawn"],type:"u16"},{name:"scanCoolDown",docs:["the time it takes the ship to be able to scan again after scanning"],type:"u16"},{name:"sduPerScan",docs:["The number of SDUs that can be found while scanning"],type:"u32"},{name:"scanCost",docs:["the amount of resource required to do a scan"],type:"u32"},{name:"placeholder",docs:["TODO: this is a placeholder stat for use in the future"],type:"u32"},{name:"placeholder2",docs:["TODO: this is a placeholder stat for use in the future"],type:"u32"},{name:"placeholder3",docs:["TODO: this is a placeholder stat for use in the future"],type:"u32"}]}},{name:"MiscStatsUnpacked",docs:["Unpacked version of [`MiscStats`]"],type:{kind:"struct",fields:[{name:"requiredCrew",docs:["Number of crew required to operate the ship"],type:"u16"},{name:"passengerCapacity",docs:["Number of crew that the ship can carry as passengers"],type:"u16"},{name:"crewCount",docs:["Total number of crew on the ship (required crew + passengers on board)","Will be zero until `CREW_FEATURE` is enabled"],type:"u16"},{name:"rentedCrew",docs:["Total number of crew that were rented out together with the fleet"],type:"u16"},{name:"respawnTime",docs:["the time it takes the ship to respawn"],type:"u16"},{name:"scanCoolDown",docs:["the time it takes the ship to be able to scan again after scanning"],type:"u16"},{name:"sduPerScan",docs:["The number of SDUs that can be found while scanning"],type:"u32"},{name:"scanCost",docs:["the amount of resource required to do a scan"],type:"u32"},{name:"placeholder",docs:["TODO: this is a placeholder stat for use in the future"],type:"u32"},{name:"placeholder2",docs:["TODO: this is a placeholder stat for use in the future"],type:"u32"},{name:"placeholder3",docs:["TODO: this is a placeholder stat for use in the future"],type:"u32"}]}},{name:"MiscVariables",docs:["Miscellaneous game state variables"],type:{kind:"struct",fields:[{name:"warpLaneFuelCostReduction",docs:['Percentage by which the "warp lane" movement type reduces warp fuel cost'],type:"i16"},{name:"respawnFee",docs:["Respawn fee; You cannot enter into the respawning state without paying this fee","Since ATLAS has 8 decimal places, units are in the smallest value of ATLAS possible."],type:"u64"},{name:"upkeepMiningEmissionsPenalty",docs:["Percentage by which to reduce the asteroid mining rate if a starbase ammo upkeep coffer is empty"],type:"i16"}]}},{name:"MiscVariablesInput",docs:["Struct for data input to update miscellaneous settings"],type:{kind:"struct",fields:[{name:"warpLaneFuelCostReduction",docs:['Percentage by which the "warp lane" movement type reduces warp fuel cost'],type:{option:"i16"}},{name:"upkeepMiningEmissionsPenalty",docs:["Percentage by which to reduce the asteroid mining rate if a starbase ammo upkeep coffer is empty"],type:{option:"i16"}},{name:"respawnFee",docs:["Respawn fee, charged in ATLAS"],type:{option:"u64"}}]}},{name:"MoveSubwarp",docs:["The data for the [`FleetStateData::MoveSubwarp`] state"],type:{kind:"struct",fields:[{name:"fromSector",docs:["The sector the fleet is coming from"],type:{array:["i64",2]}},{name:"toSector",docs:["The sector the fleet is going to"],type:{array:["i64",2]}},{name:"currentSector",docs:["The sector the fleet is currently in"],type:{array:["i64",2]}},{name:"departureTime",docs:["When the fleet started subwarp"],type:"i64"},{name:"arrivalTime",docs:["When the fleet will finish subwarp"],type:"i64"},{name:"fuelExpenditure",docs:["The fuel cost of the subwarp"],type:"u64"},{name:"lastUpdate",docs:["The last update time"],type:"i64"}]}},{name:"MoveWarp",docs:["The data for the [`FleetStateData::MoveWarp`] state"],type:{kind:"struct",fields:[{name:"fromSector",docs:["The star system the fleet is coming from"],type:{array:["i64",2]}},{name:"toSector",docs:["The star system the fleet is going to"],type:{array:["i64",2]}},{name:"warpStart",docs:["When the fleet started warping"],type:"i64"},{name:"warpFinish",docs:["When the warp will end"],type:"i64"}]}},{name:"MovementStats",docs:["A ship's movement stats"],type:{kind:"struct",fields:[{name:"subwarpSpeed",docs:["the amount of distance that the ship can cover in one second while sub-warping"],type:"u32"},{name:"warpSpeed",docs:["the amount of distance that the ship can cover in one second while warping"],type:"u32"},{name:"maxWarpDistance",docs:["the max distance that the ship can warp"],type:"u16"},{name:"warpCoolDown",docs:["the time it takes the ship to be able to warp again after a warp"],type:"u16"},{name:"subwarpFuelConsumptionRate",docs:["the amount of fuel consumed by the ship when sub-warp moving"],type:"u32"},{name:"warpFuelConsumptionRate",docs:["the amount of fuel consumed by the ship when warp moving"],type:"u32"},{name:"planetExitFuelAmount",docs:["the amount of fuel required to exit a planet"],type:"u32"}]}},{name:"MovementStatsUnpacked",docs:["Unpacked version of [`MovementStats`]"],type:{kind:"struct",fields:[{name:"subwarpSpeed",docs:["the amount of distance that the ship can cover in one second while sub-warping"],type:"u32"},{name:"warpSpeed",docs:["the amount of distance that the ship can cover in one second while warping"],type:"u32"},{name:"maxWarpDistance",docs:["the max distance that the ship can warp"],type:"u16"},{name:"warpCoolDown",docs:["the time it takes the ship to be able to warp again after a warp"],type:"u16"},{name:"subwarpFuelConsumptionRate",docs:["the amount of fuel consumed by the ship when sub-warp moving"],type:"u32"},{name:"warpFuelConsumptionRate",docs:["the amount of fuel consumed by the ship when warp moving"],type:"u32"},{name:"planetExitFuelAmount",docs:["the amount of fuel required to exit a planet"],type:"u32"}]}},{name:"OptionalNonSystemPubkey",docs:["A pubkey sized option that is none if set to the system program."],type:{kind:"struct",fields:[{name:"key",type:"publicKey"}]}},{name:"PlanetType",docs:["Represents different types a `Planet` could be"],type:{kind:"enum",variants:[{name:"Terrestrial"},{name:"Volcanic"},{name:"Barren"},{name:"AsteroidBelt"},{name:"GasGiant"},{name:"IceGiant"},{name:"Dark"}]}},{name:"Points",docs:["Variables for the Points program"],type:{kind:"struct",fields:[{name:"lpCategory",docs:["Represents the points category & modifier to use for Loyalty Points (LP)"],type:{defined:"SagePointsCategory"}},{name:"councilRankXpCategory",docs:["Represents the points category & modifier to use for Council Rank Experience Points (CRXP)"],type:{defined:"SagePointsCategory"}},{name:"pilotXpCategory",docs:["Represents the points category & modifier to use for Pilot License Experience Points (PXP)"],type:{defined:"SagePointsCategory"}},{name:"dataRunningXpCategory",docs:["Represents the points category & modifier to use for Data Running Experience Points (DRXP)"],type:{defined:"SagePointsCategory"}},{name:"miningXpCategory",docs:["Represents the points category & modifier to use for Mining Experience Points (MXP)"],type:{defined:"SagePointsCategory"}},{name:"craftingXpCategory",docs:["Represents the points category & modifier to use for Crafting Experience Points (CXP)"],type:{defined:"SagePointsCategory"}}]}},{name:"ProgressionItem",docs:["Progression Item"],type:{kind:"struct",fields:[{name:"value",docs:["The progression points value"],type:"u32"}]}},{name:"ProgressionItemInput",docs:["Progression Item for Data Input"],type:{kind:"struct",fields:[{name:"itemType",docs:["The type of progression item"],type:"u8"},{name:"item",docs:["The progression item"],type:{defined:"ProgressionItem"}}]}},{name:"ProgressionItemInputUnpacked",docs:["Unpacked version of [`ProgressionItemInput`]"],type:{kind:"struct",fields:[{name:"itemType",docs:["The type of progression item"],type:"u8"},{name:"item",docs:["The progression item"],type:{defined:"ProgressionItem"}}]}},{name:"ProgressionItemType",docs:["The different types of progression items"],type:{kind:"enum",variants:[{name:"Subwarp"},{name:"Warp"},{name:"WarpLane"},{name:"AsteroidExit"},{name:"ScanUnsuccessful"},{name:"ScanSuccessful"},{name:"Mining"},{name:"Crafting"},{name:"Upkeep"},{name:"Upgrade"}]}},{name:"ProgressionItemUnpacked",docs:["Unpacked version of [`ProgressionItem`]"],type:{kind:"struct",fields:[{name:"value",docs:["The progression points value"],type:"u32"}]}},{name:"RegisterMineItemInput",docs:["Struct for data input to Register a Resource"],type:{kind:"struct",fields:[{name:"name",docs:["The name of the `MineItem`"],type:{array:["u8",64]}},{name:"resourceHardness",docs:["How hard it is to mine this item"],type:"u16"},{name:"keyIndex",docs:["the index of the key in the fleet permissions profile"],type:"u16"}]}},{name:"RegisterPlanetInput",docs:["Struct for data input to Register Planet"],type:{kind:"struct",fields:[{name:"name",docs:["`Planet` name"],type:{array:["u8",64]}},{name:"size",docs:["`Planet` size"],type:"u64"},{name:"maxHp",docs:["`Planet` max health"],type:"u64"},{name:"subCoordinates",docs:["`Planet` sub_coordinates"],type:{array:["i64",2]}},{name:"planetType",docs:["`Planet` type"],type:"u8"},{name:"position",docs:["`Planet` position"],type:"u8"},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"RegisterProgressionConfigInput",docs:["Data input for RegisterProgressionConfig"],type:{kind:"struct",fields:[{name:"dailyLpLimit",docs:["the daily limit for Loyalty Points (LP)"],type:{option:"u64"}},{name:"dailyCouncilRankXpLimit",docs:["the daily limit for Council Rank Experience Points (CRXP)"],type:{option:"u64"}},{name:"dailyPilotXpLimit",docs:["the daily limit for Pilot License Experience Points (PXP)"],type:{option:"u64"}},{name:"dailyDataRunningXpLimit",docs:["the daily limit for Data Running Experience Points (DRXP)"],type:{option:"u64"}},{name:"dailyMiningXpLimit",docs:["the daily limit for Mining Experience Points (MXP)"],type:{option:"u64"}},{name:"dailyCraftingXpLimit",docs:["the daily limit for Crafting Experience Points (CXP)"],type:{option:"u64"}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"RegisterResourceInput",docs:["Struct for data input to Register a Resource"],type:{kind:"struct",fields:[{name:"locationType",docs:["`Resource` location type"],type:"u8"},{name:"systemRichness",docs:["`Resource` `system_richness`"],type:"u16"},{name:"keyIndex",docs:["the index of the key in the fleet permissions profile"],type:"u16"}]}},{name:"RegisterSagePointsModifierInput",docs:["Struct for data input to register a points modifier for SAGE program"],type:{kind:"struct",fields:[{name:"pointsCategoryType",docs:["The points category type of the modifier"],type:"u8"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"RegisterShipInput",docs:["Struct for data input to Register Ship"],type:{kind:"struct",fields:[{name:"name",docs:["The `Ship` name/label"],type:{array:["u8",64]}},{name:"sizeClass",docs:["the ship's size class"],type:{defined:"SizeClass"}},{name:"stats",docs:["The stats for the ship"],type:{defined:"ShipStatsUnpacked"}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"},{name:"isActive",docs:["Whether the ship is initialized to active (`update_id == current_update_id`)"],type:"bool"}]}},{name:"RegisterStarInput",docs:["Struct for data input to Register Star"],type:{kind:"struct",fields:[{name:"name",docs:["`Star` name"],type:{array:["u8",64]}},{name:"size",docs:["`Star` size"],type:"u64"},{name:"subCoordinates",docs:["`Star` sub_coordinates"],type:{array:["i64",2]}},{name:"starType",docs:["`Star` type"],type:"u8"},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"RegisterStarbaseInput",docs:["Struct for data input to Register `Starbase`"],type:{kind:"struct",fields:[{name:"name",docs:["`Starbase` name"],type:{array:["u8",64]}},{name:"subCoordinates",docs:["`Starbase` coordinates"],type:{array:["i64",2]}},{name:"starbaseLevelIndex",docs:["The index representing the level of the `Starbase` in the game variables."],type:"u8"},{name:"faction",docs:["The `Starbase` faction"],type:"u8"},{name:"keyIndex",docs:["the index of the key in the fleet permissions profile"],type:"u16"}]}},{name:"RegisterStarbaseInputUnpacked",docs:["Unpacked version of [`RegisterStarbaseInput`]"],type:{kind:"struct",fields:[{name:"name",docs:["`Starbase` name"],type:{array:["u8",64]}},{name:"subCoordinates",docs:["`Starbase` coordinates"],type:{array:["i64",2]}},{name:"starbaseLevelIndex",docs:["The index representing the level of the `Starbase` in the game variables."],type:"u8"},{name:"faction",docs:["The `Starbase` faction"],type:"u8"},{name:"keyIndex",docs:["the index of the key in the fleet permissions profile"],type:"u16"}]}},{name:"RegisterSurveyDataUnitTrackerInput",docs:["Struct for data input to Register SurveyDataUnitTracker"],type:{kind:"struct",fields:[{name:"coordinatesRange",docs:["The valid coordinates range","e.g. a value of [-50, 50] means that coordinates from [-50, -50] to [50, 50] are valid for SDU scanning"],type:{array:["i64",2]}},{name:"cssCoordinates",docs:["The locations of the central space stations (CSS) of the three factions"],type:{array:[{array:["i64",2]},3]}},{name:"originCoordinates",docs:['The co-ordinates of the "origin"; used in calculating SDU probability'],type:{array:["i64",2]}},{name:"cssMaxDistance",docs:["The max distance from the nearest CSS; used in calculating SDU probability"],type:"u32"},{name:"originMaxDistance",docs:["The max distance from the `origin_coordinates`; used in calculating SDU probability"],type:"u32"},{name:"distanceWeighting",docs:["The distance weighting; used in calculating SDU probability"],type:"u32"},{name:"tMax",docs:["The maximum time before SDU probability at a location changes"],type:"i64"},{name:"xMul",docs:["Multiplier in the X dimension; used in noise function"],type:"u32"},{name:"yMul",docs:["Multiplier in the Y dimension; used in noise function"],type:"u32"},{name:"zMul",docs:["Multiplier in the Z dimension; used in noise function"],type:"u32"},{name:"sduMaxPerSector",docs:["The maximum number of SDUs that can be found per scan per sector"],type:"u32"},{name:"scanChanceRegenPeriod",docs:["The amount of time in seconds that it takes for a sector scan chance to fully regenerate"],type:"i16"},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"RemoveCrewInput",docs:["Accounts for Struct for data input for `RemoveCrew`"],type:{kind:"struct",fields:[{name:"items",docs:["inputs required to transfer crew cNFTs"],type:{vec:{defined:"CrewTransferInput"}}},{name:"keyIndex",docs:["the index of the `ProfileKey` in `Profile` with required permissions"],type:"u16"}]}},{name:"RemoveShipEscrowInput",docs:["Struct for data input for `RemoveShipEscrow`"],type:{kind:"struct",fields:[{name:"shipAmount",docs:["Amount of `Ship` tokens to transfer from escrow"],type:"u64"},{name:"permissionKeyIndex",docs:["the index of the `ProfileKey` in `Profile` with required permissions"],type:"u16"},{name:"shipEscrowIndex",docs:["Index of `WrappedShipEscrow` in remaining data of `StarbasePlayer`"],type:"u32"}]}},{name:"Respawn",docs:["The data for the [`FleetStateData::Respawn`](crate::state_machine::FleetStateData::Respawn) state"],type:{kind:"struct",fields:[{name:"sector",docs:["The star system the fleet was in when it entered the `Respawn` state"],type:{array:["i64",2]}},{name:"start",docs:["The time `Respawn` started"],type:"i64"}]}},{name:"RespawnToLoadingBayInput",docs:["Struct for data input to `RespawnToLoadingBay`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"RiskZoneData",docs:["`RiskZone` center and radius"],type:{kind:"struct",fields:[{name:"center",docs:["Risk zone center"],type:{array:["i64",2]}},{name:"radius",docs:["Risk zone radius"],type:"u64"}]}},{name:"RiskZoneDataUnpacked",docs:["Unpacked version of [`RiskZoneData`]"],type:{kind:"struct",fields:[{name:"center",docs:["Risk zone center"],type:{array:["i64",2]}},{name:"radius",docs:["Risk zone radius"],type:"u64"}]}},{name:"RiskZonesData",docs:["[`RiskZoneData`] for [`RiskZones`]"],type:{kind:"struct",fields:[{name:"mudSecurityZone",docs:["Mud security zone"],type:{defined:"RiskZoneData"}},{name:"oniSecurityZone",docs:["Oni security zone"],type:{defined:"RiskZoneData"}},{name:"usturSecurityZone",docs:["Ustur security zone"],type:{defined:"RiskZoneData"}},{name:"highRiskZone",docs:["High risk zone"],type:{defined:"RiskZoneData"}},{name:"mediumRiskZone",docs:["Medium risk zone"],type:{defined:"RiskZoneData"}}]}},{name:"RiskZonesDataUnpacked",docs:["Unpacked version of [`RiskZonesData`]"],type:{kind:"struct",fields:[{name:"mudSecurityZone",docs:["Mud security zone"],type:{defined:"RiskZoneData"}},{name:"oniSecurityZone",docs:["Oni security zone"],type:{defined:"RiskZoneData"}},{name:"usturSecurityZone",docs:["Ustur security zone"],type:{defined:"RiskZoneData"}},{name:"highRiskZone",docs:["High risk zone"],type:{defined:"RiskZoneData"}},{name:"mediumRiskZone",docs:["Medium risk zone"],type:{defined:"RiskZoneData"}}]}},{name:"SagePointsCategory",docs:["Represents a points category & modifier as defined in the Points program"],type:{kind:"struct",fields:[{name:"category",docs:["The points category"],type:"publicKey"},{name:"modifier",docs:["The points category modifier"],type:"publicKey"},{name:"modifierBump",docs:["The points category modifier bump"],type:"u8"}]}},{name:"ScanForSurveyDataUnitsInput",docs:["Struct for data input to Scan For Survey Data Units"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["The index of the key in the player profile"],type:"u16"}]}},{name:"SectorConnection",docs:["Connection between sectors"],type:{kind:"struct",fields:[{name:"connectionSector",docs:["The sector connected to"],type:"publicKey"},{name:"subCoordinates",docs:["The location of the connection"],type:{array:["i64",2]}},{name:"flags",docs:["Connection flags"],type:"u8"}]}},{name:"SectorRing",docs:["Represents the orbital position of a `Planet` in the `Sector`"],type:{kind:"enum",variants:[{name:"Inner"},{name:"Mid"},{name:"Outer"}]}},{name:"ShipCounts",docs:["Ship counts for a fleet."],type:{kind:"struct",fields:[{name:"total",docs:["The total number of ships in the fleet."],type:"u32"},{name:"updated",docs:["Used when updating a fleet.","Value is 0 when fleet update is in progress"],type:"u32"},{name:"xxSmall",docs:["The number of xx small ships in the fleet."],type:"u16"},{name:"xSmall",docs:["The number of x small ships in the fleet."],type:"u16"},{name:"small",docs:["The number of small ships in the fleet."],type:"u16"},{name:"medium",docs:["The number of medium ships in the fleet."],type:"u16"},{name:"large",docs:["The number of large ships in the fleet."],type:"u16"},{name:"capital",docs:["The number of capital ships in the fleet."],type:"u16"},{name:"commander",docs:["The number of commander ships in the fleet."],type:"u16"},{name:"titan",docs:["The number of titan ships in the fleet."],type:"u16"}]}},{name:"ShipCountsUnpacked",docs:["Unpacked version of [`ShipCounts`]"],type:{kind:"struct",fields:[{name:"total",docs:["The total number of ships in the fleet."],type:"u32"},{name:"updated",docs:["Used when updating a fleet.","Value is 0 when fleet update is in progress"],type:"u32"},{name:"xxSmall",docs:["The number of xx small ships in the fleet."],type:"u16"},{name:"xSmall",docs:["The number of x small ships in the fleet."],type:"u16"},{name:"small",docs:["The number of small ships in the fleet."],type:"u16"},{name:"medium",docs:["The number of medium ships in the fleet."],type:"u16"},{name:"large",docs:["The number of large ships in the fleet."],type:"u16"},{name:"capital",docs:["The number of capital ships in the fleet."],type:"u16"},{name:"commander",docs:["The number of commander ships in the fleet."],type:"u16"},{name:"titan",docs:["The number of titan ships in the fleet."],type:"u16"}]}},{name:"ShipSizes",docs:["Ship sizes."],type:{kind:"struct",fields:[{name:"xxSmall",docs:["The size of xx small ships"],type:"u8"},{name:"xSmall",docs:["The size of x small ships"],type:"u8"},{name:"small",docs:["The size of small ships"],type:"u8"},{name:"medium",docs:["The size of medium ships"],type:"u8"},{name:"large",docs:["The size of large ships"],type:"u8"},{name:"capital",docs:["The size of capital ships"],type:"u8"},{name:"commander",docs:["The size of commander ships"],type:"u8"},{name:"titan",docs:["The size of titan ships"],type:"u8"}]}},{name:"ShipStats",docs:["A ship's stats"],type:{kind:"struct",fields:[{name:"movementStats",docs:["Movement stats for the ship"],type:{defined:"MovementStats"}},{name:"cargoStats",docs:["Cargo stats for the ship"],type:{defined:"CargoStats"}},{name:"miscStats",docs:["Miscellaneous stats for the ship"],type:{defined:"MiscStats"}}]}},{name:"ShipStatsUnpacked",docs:["Unpacked version of [`ShipStats`]"],type:{kind:"struct",fields:[{name:"movementStats",docs:["Movement stats for the ship"],type:{defined:"MovementStats"}},{name:"cargoStats",docs:["Cargo stats for the ship"],type:{defined:"CargoStats"}},{name:"miscStats",docs:["Miscellaneous stats for the ship"],type:{defined:"MiscStats"}}]}},{name:"SizeClass",docs:["Represents different types of Ships"],type:{kind:"enum",variants:[{name:"XxSmall"},{name:"XSmall"},{name:"Small"},{name:"Medium"},{name:"Large"},{name:"Capital"},{name:"Commander"},{name:"Titan"}]}},{name:"StarType",docs:["Represents different types of Stars"],type:{kind:"enum",variants:[{name:"WhiteDwarf"},{name:"RedDwarf"},{name:"Solar"},{name:"HotBlue"},{name:"RedGiant"}]}},{name:"StarbaseCreateCargoPodInput",docs:["Struct for data input to `StarbaseCreateCargoPod`"],type:{kind:"struct",fields:[{name:"podSeeds",docs:["cargo pod seeds"],type:{array:["u8",32]}},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StarbaseCreateCraftingProcessInput",docs:["Struct for data input to create a `CraftingProcess`"],type:{kind:"struct",fields:[{name:"craftingId",docs:["crafting id"],type:"u64"},{name:"recipeCategoryIndex",docs:["the index of the recipe's category"],type:"u16"},{name:"quantity",docs:["quantity of outputs to craft"],type:"u64"},{name:"numCrew",docs:["number of crew members to use for this crafting process"],type:"u64"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StarbaseDepositCraftingIngredientInput",docs:["Struct for data input to deposit an ingredient"],type:{kind:"struct",fields:[{name:"amount",docs:["the amount of ingredient to deposit"],type:"u64"},{name:"ingredientIndex",docs:["the index of the recipe ingredient"],type:"u16"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StarbaseLevelInfo",docs:["Information associated with `Starbase` levels"],type:{kind:"struct",fields:[{name:"recipeForUpgrade",docs:["The crafting recipe required to upgrade a `Starbase` to this level"],type:"publicKey"},{name:"recipeCategoryForLevel",docs:["The crafting recipe category enabled for crafting at a `Starbase` of this level."],type:"publicKey"},{name:"hp",docs:["The `Starbase` health points for this level."],type:"u64"},{name:"sp",docs:["The `Starbase` shield points for this level."],type:"u64"},{name:"sectorRingAvailable",docs:["The planet position `Ring` available for this level"],type:"u8"},{name:"warpLaneMovementFee",docs:['Fee charged for the "warp lane" movement type which is meant to be charged in ATLAS',"Since ATLAS has 8 decimal places, units are in the smallest value of ATLAS possible."],type:"u64"}]}},{name:"StarbaseLevelInfoArrayInput",docs:["Struct for data input to Update Starbase Level Settings"],type:{kind:"struct",fields:[{name:"level",docs:["The level of the `Starbase`."],type:"u8"},{name:"faction",docs:["The `Starbase` faction."],type:"u8"},{name:"hp",docs:["The `Starbase` health points for this level."],type:"u64"},{name:"sp",docs:["The `Starbase` shield points for this level."],type:"u64"},{name:"sectorRingAvailable",docs:["The planet position `Ring` available for this level"],type:{defined:"SectorRing"}},{name:"warpLaneMovementFee",docs:['Fee charged for the "warp lane" movement type which is meant to be charged in ATLAS'],type:"u64"}]}},{name:"StarbaseLoadingBay",docs:["The data for the [`FleetStateData::StarbaseLoadingBay`] state"],type:{kind:"struct",fields:[{name:"starbase",docs:["The `Starbase` is in the loading bay of"],type:"publicKey"},{name:"lastUpdate",docs:["The last time this fleet was updated"],type:"i64"}]}},{name:"StarbaseRemoveCargoPodInput",docs:["Struct for data input to `StarbaseRemoveCargoPod`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StarbaseState",docs:["The state of a `Starbase`."],type:{kind:"enum",variants:[{name:"Active"},{name:"Destroyed"}]}},{name:"StarbaseTransferCargoInput",docs:["Struct for data input to `DepositCargoToGame`"],type:{kind:"struct",fields:[{name:"amount",docs:["cargo amount"],type:"u64"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StarbaseUpgradeState",docs:["The state of a `Starbase`."],type:{kind:"enum",variants:[{name:"NotStarted"},{name:"Started"},{name:"Completed"}]}},{name:"StarbaseUpkeepInfo",docs:["Information associated with `Starbase` upkeep"],type:{kind:"struct",fields:[{name:"ammoReserve",docs:["The maximum amount of ammo that can be committed upkeep by players","If 0 (zero) then ammo upkeep is disabled"],type:"u64"},{name:"ammoDepletionRate",docs:["The per second rate at which the ammo reserve is emptied"],type:"u32"},{name:"foodReserve",docs:["The maximum amount of food that can be committed upkeep by players","If 0 (zero) then food upkeep is disabled"],type:"u64"},{name:"foodDepletionRate",docs:["The per second rate at which the food reserve is emptied"],type:"u32"},{name:"toolkitReserve",docs:["The maximum amount of toolkits that can be committed upkeep by players","If 0 (zero) then toolkit upkeep is disabled"],type:"u64"},{name:"toolkitDepletionRate",docs:["The per second rate at which the toolkit reserve is emptied"],type:"u32"}]}},{name:"StarbaseUpkeepInfoArrayInput",docs:["Struct for data input to Update Starbase Upkeep Settings"],type:{kind:"struct",fields:[{name:"level",docs:["The level of the `Starbase`."],type:"u8"},{name:"info",docs:["The stats for the ship"],type:{defined:"StarbaseUpkeepInfoUnpacked"}}]}},{name:"StarbaseUpkeepInfoUnpacked",docs:["Unpacked version of [`StarbaseUpkeepInfo`]"],type:{kind:"struct",fields:[{name:"ammoReserve",docs:["The maximum amount of ammo that can be committed upkeep by players","If 0 (zero) then ammo upkeep is disabled"],type:"u64"},{name:"ammoDepletionRate",docs:["The per second rate at which the ammo reserve is emptied"],type:"u32"},{name:"foodReserve",docs:["The maximum amount of food that can be committed upkeep by players","If 0 (zero) then food upkeep is disabled"],type:"u64"},{name:"foodDepletionRate",docs:["The per second rate at which the food reserve is emptied"],type:"u32"},{name:"toolkitReserve",docs:["The maximum amount of toolkits that can be committed upkeep by players","If 0 (zero) then toolkit upkeep is disabled"],type:"u64"},{name:"toolkitDepletionRate",docs:["The per second rate at which the toolkit reserve is emptied"],type:"u32"}]}},{name:"StarbaseUpkeepLevels",docs:["Information on `Starbase` upkeep by level"],type:{kind:"struct",fields:[{name:"level0",docs:["Upkeep info. for a level 0 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level1",docs:["Upkeep info. for a level 1 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level2",docs:["Upkeep info. for a level 2 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level3",docs:["Upkeep info. for a level 3 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level4",docs:["Upkeep info. for a level 4 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level5",docs:["Upkeep info. for a level 5 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level6",docs:["Upkeep info. for a level 6 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}}]}},{name:"StarbaseUpkeepLevelsUnpacked",docs:["Unpacked version of [`StarbaseUpkeepLevels`]"],type:{kind:"struct",fields:[{name:"level0",docs:["Upkeep info. for a level 0 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level1",docs:["Upkeep info. for a level 1 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level2",docs:["Upkeep info. for a level 2 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level3",docs:["Upkeep info. for a level 3 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level4",docs:["Upkeep info. for a level 4 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level5",docs:["Upkeep info. for a level 5 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}},{name:"level6",docs:["Upkeep info. for a level 6 `Starbase`"],type:{defined:"StarbaseUpkeepInfo"}}]}},{name:"StarbaseWithdrawCraftingIngredientInput",docs:["Struct for data input to withdraw an ingredient"],type:{kind:"struct",fields:[{name:"amount",docs:["the amount of ingredient to withdraw"],type:"u64"},{name:"ingredientIndex",docs:["the index of the recipe ingredient"],type:"u16"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StartSubwarpInput",docs:["Struct for data input to initialize an `SubwarpMovement`"],type:{kind:"struct",fields:[{name:"toSector",docs:["The destination coordinates"],type:{array:["i64",2]}},{name:"keyIndex",docs:["The index of the key in the player profile"],type:"u16"}]}},{name:"StopMiningAsteroidInput",docs:["Struct for data input for `StopMiningAsteroidInput`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"StopSubwarpInput",docs:["Struct for data input to stop an `SubwarpMovement`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["The index of the key in the player profile"],type:"u16"}]}},{name:"SubmitStarbaseUpgradeResourceInput",docs:["Submit starbase upgrade resource inputs"],type:{kind:"struct",fields:[{name:"pointsProgramPermissionsKeyIndex",docs:["the index of the point program permissions in the player profile"],type:"u16"},{name:"sagePermissionsKeyIndex",docs:["the index of the key in sage permissions in the player profile"],type:"u16"},{name:"upgradeProcessRecipeInputIndex",docs:["the index of the resource in the upgrade_process_recipe ingredients list","The resource is a non-consumable in this recipe"],type:"u16"},{name:"starbaseUpgradeRecipeInputIndex",docs:["the index of the resource in the upgrade recipe","The resource is a consumable in this recipe"],type:"u16"},{name:"resourceRecipeOutputIndex",docs:["the index of the resource represented by `token_mint` in the `resource_recipe` ingredients list","The resource is an output in this recipe"],type:"u16"},{name:"epochIndex",docs:["the index of the epoch in the `RedemptionConfig` account"],type:"u16"}]}},{name:"TransferCargoWithinFleetInput",docs:["Struct for data input to `TransferCargoWithinFleet`"],type:{kind:"struct",fields:[{name:"amount",docs:["cargo amount"],type:"u64"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"UpdateGameInput",docs:["Struct for data input to Update instruction"],type:{kind:"struct",fields:[{name:"cargo",docs:["Cargo settings"],type:"u8"},{name:"crafting",docs:["Crafting settings"],type:"u8"},{name:"mints",docs:["Mints"],type:"u8"},{name:"vaults",docs:["Vaults"],type:"u8"},{name:"points",docs:["Points settings"],type:"u8"},{name:"riskZones",docs:["Data for risk zones"],type:{option:{defined:"RiskZonesDataUnpacked"}}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpdateGameStateInput",docs:["Struct for data input to Update instruction"],type:{kind:"struct",fields:[{name:"fleet",docs:["Fleet settings"],type:{option:{defined:"FleetInput"}}},{name:"misc",docs:["Miscellaneous settings"],type:{option:{defined:"MiscVariablesInput"}}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpdateMineItemInput",docs:["Struct for data input to Register a Resource"],type:{kind:"struct",fields:[{name:"name",docs:["The name of the `MineItem`"],type:{option:{array:["u8",64]}}},{name:"resourceHardness",docs:["How hard it is to mine this item"],type:{option:"u16"}},{name:"keyIndex",docs:["the index of the key in the fleet permissions profile"],type:"u16"}]}},{name:"UpdatePlanetInput",docs:["Struct for data input to Update Planet"],type:{kind:"struct",fields:[{name:"name",docs:["`Planet` name"],type:{option:{array:["u8",64]}}},{name:"size",docs:["`Planet` size"],type:{option:"u64"}},{name:"maxHp",docs:["`Planet` max_hp"],type:{option:"u64"}},{name:"subCoordinates",docs:["`Planet` sub_coordinates"],type:{option:{array:["i64",2]}}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpdateProgressionConfigInput",docs:["Struct for data input for `UpdateProgressionConfig`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["the index of the key in the permissions profile"],type:"u16"},{name:"dailyLpLimit",docs:["the daily limit for Loyalty Points (LP)"],type:{option:"u64"}},{name:"dailyCouncilRankXpLimit",docs:["the daily limit for Council Rank Experience Points (CRXP)"],type:{option:"u64"}},{name:"dailyPilotXpLimit",docs:["the daily limit for Pilot License Experience Points (PXP)"],type:{option:"u64"}},{name:"dailyDataRunningXpLimit",docs:["the daily limit for Data Running Experience Points (DRXP)"],type:{option:"u64"}},{name:"dailyMiningXpLimit",docs:["the daily limit for Mining Experience Points (MXP)"],type:{option:"u64"}},{name:"dailyCraftingXpLimit",docs:["the daily limit for Crafting Experience Points (CXP)"],type:{option:"u64"}},{name:"items",docs:["the progression items"],type:{option:{vec:{defined:"ProgressionItemInputUnpacked"}}}}]}},{name:"UpdateResourceInput",docs:["Struct for data input to Update Resource"],type:{kind:"struct",fields:[{name:"systemRichness",docs:["`Resource` richness"],type:{option:"u16"}},{name:"keyIndex",docs:["the index of the key in the fleet permissions profile"],type:"u16"}]}},{name:"UpdateShipEscrowInput",docs:["Struct for data input for `UpdateShipEscrow`"],type:{kind:"struct",fields:[{name:"shipEscrowIndex",docs:["Index of `WrappedShipEscrow` in remaining data of `StarbasePlayer`"],type:"u32"}]}},{name:"UpdateShipFleetInput",docs:["Struct for data input for that has `key_index`"],type:{kind:"struct",fields:[{name:"shipAmount",docs:["Number of ships to add to the fleet"],type:"u16"},{name:"fleetShipInfoIndex",docs:["Index of `FleetShipsInfo` in remaining data of `FleetShips`"],type:"u32"}]}},{name:"UpdateShipInput",docs:["Struct for data input to Update Ship"],type:{kind:"struct",fields:[{name:"name",docs:["The `Ship` name/label"],type:{array:["u8",64]}},{name:"sizeClass",docs:["the ship's size class"],type:{defined:"SizeClass"}},{name:"stats",docs:["The stats for the ship"],type:{defined:"ShipStatsUnpacked"}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpdateStarInput",docs:["Struct for data input to Update Star"],type:{kind:"struct",fields:[{name:"name",docs:["`Star` name"],type:{option:{array:["u8",64]}}},{name:"size",docs:["`Star` size"],type:{option:"u64"}},{name:"starType",docs:["`Star` type"],type:{option:"u8"}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpdateStarbaseInput",docs:["Struct for data input to Update `Starbase`"],type:{kind:"struct",fields:[{name:"name",docs:["`Starbase` name"],type:{option:{array:["u8",64]}}},{name:"subCoordinates",docs:["`Starbase` coordinates"],type:{option:{array:["i64",2]}}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpdateSurveyDataUnitTrackerInput",docs:["Struct for data input to Update SurveyDataUnitTracker"],type:{kind:"struct",fields:[{name:"coordinatesRange",docs:["The valid coordinates range","e.g. a value of [-50, 50] means that coordinates from [-50, -50] to [50, 50] are valid for SDU scanning"],type:{option:{array:["i64",2]}}},{name:"cssCoordinates",docs:["The locations of the central space stations (CSS) of the three factions"],type:{option:{array:[{array:["i64",2]},3]}}},{name:"originCoordinates",docs:['The co-ordinates of the "origin"; used in calculating SDU probability'],type:{option:{array:["i64",2]}}},{name:"cssMaxDistance",docs:["The max distance from the nearest CSS; used in calculating SDU probability"],type:{option:"u32"}},{name:"originMaxDistance",docs:["The max distance from the `origin_coordinates`; used in calculating SDU probability"],type:{option:"u32"}},{name:"distanceWeighting",docs:["The distance weighting; used in calculating SDU probability"],type:{option:"u32"}},{name:"tMax",docs:["The maximum time before SDU probability at a location changes"],type:{option:"i64"}},{name:"xMul",docs:["Multiplier in the X dimension; used in noise function"],type:{option:"u32"}},{name:"yMul",docs:["Multiplier in the Y dimension; used in noise function"],type:{option:"u32"}},{name:"zMul",docs:["Multiplier in the Z dimension; used in noise function"],type:{option:"u32"}},{name:"sduMaxPerSector",docs:["The maximum number of SDUs that can be found per scan per sector"],type:{option:"u32"}},{name:"scanChanceRegenPeriod",docs:["The amount of time in seconds that it takes for a sector scan chance to fully regenerate"],type:{option:"i16"}},{name:"keyIndex",docs:["the index of the key in the sector permissions profile"],type:"u16"}]}},{name:"UpkeepResourceType",docs:["The different types of upkeep resources"],type:{kind:"enum",variants:[{name:"Ammo"},{name:"Food"},{name:"Toolkit"}]}},{name:"Vaults",docs:["Token vaults"],type:{kind:"struct",fields:[{name:"atlas",docs:["ATLAS token mint"],type:"publicKey"},{name:"polis",docs:["POLIS token mint"],type:"publicKey"}]}},{name:"WarpLaneInput",docs:["Struct for data input to initialize a `WarpLane`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["The index of the key in the player profile"],type:"u16"},{name:"toSectorIndex",docs:["Index of the to_sector in `SectorConnections` of the from_sector"],type:"u16"},{name:"fromSectorIndex",docs:["Index of the from_sector in `SectorConnections` of the to_sector"],type:"u16"}]}},{name:"WarpToCoordinateInput",docs:["Struct for data input to initialize a `WarpToCoordinate`"],type:{kind:"struct",fields:[{name:"keyIndex",docs:["The index of the key in the player profile"],type:"u16"},{name:"toSector",docs:["The destination coordinates"],type:{array:["i64",2]}}]}},{name:"WithdrawCargoFromFleetInput",docs:["Struct for data input to `WithdrawCargoFromFleet`"],type:{kind:"struct",fields:[{name:"amount",docs:["cargo amount"],type:"u64"},{name:"keyIndex",docs:["the index of the key in the player profile"],type:"u16"}]}},{name:"WrappedShipEscrow",docs:["Wrapped `Ship` escrow info"],type:{kind:"struct",fields:[{name:"ship",docs:["The `Ship` account address"],type:"publicKey"},{name:"amount",docs:["The `Ship` token amount in escrow"],type:"u64"},{name:"updateId",docs:["The update id for the `Ship`"],type:"u64"}]}}],errors:[{code:6e3,name:"IncorrectAdminAddress",msg:"Incorrect admin address."},{code:6001,name:"MissingRemainingAccount",msg:"An expected remaining account is missing."},{code:6002,name:"NoStargateConnectionsAvailable",msg:"No Stargate connections available."},{code:6003,name:"StargatesNotConnected",msg:"The provided Stargates are not connected."},{code:6004,name:"InvalidPlanetType",msg:"Invalid Planet Type."},{code:6005,name:"InvalidRingType",msg:"Invalid Ring Type."},{code:6006,name:"InvalidStarType",msg:"Invalid Star Type."},{code:6007,name:"InvalidOrInactiveGame",msg:"Invalid Or Inactive Game"},{code:6008,name:"InvalidShipSizeClass",msg:"Invalid Ship Size Class."},{code:6009,name:"IncorrectAccountSize",msg:"Incorrect Account Size."},{code:6010,name:"UpdateIdMismatch",msg:"The update_id is mismatched."},{code:6011,name:"AlreadyActive",msg:"The account is already active."},{code:6012,name:"InactiveAccount",msg:"The account is inactive."},{code:6013,name:"InvalidGame",msg:"The game account is invalid."},{code:6014,name:"InvalidGameState",msg:"The game state account is invalid."},{code:6015,name:"InvalidSector",msg:"The sector account is invalid."},{code:6016,name:"FleetCrewNotNormalized",msg:"Fleet Crew Not Normalized"},{code:6017,name:"InsufficientFuel",msg:"Insufficient Fuel to complete movement"},{code:6018,name:"DistanceGreaterThanMax",msg:"Distance of movement is greater than the allowed maximum"},{code:6019,name:"NumericOverflow",msg:"Numeric overflow"},{code:6020,name:"InvalidLocationType",msg:"Invalid Location Type."},{code:6021,name:"LocationTypeNotSupported",msg:"The provided location type is not supported."},{code:6022,name:"IncorrectMineItem",msg:"Incorrect mine item address."},{code:6023,name:"IncorrectAuthorityAddress",msg:"Incorrect authority address."},{code:6024,name:"IncorrectResourceAddress",msg:"Incorrect resource address."},{code:6025,name:"IncorrectMintAuthority",msg:"Incorrect mint authority."},{code:6026,name:"MintAuthorityIsNone",msg:"The mint authority should exist."},{code:6027,name:"InvalidCurrentFleetState",msg:"The current fleet state is not valid."},{code:6028,name:"InvalidCurrentStarbaseState",msg:"The current starbase state is not valid."},{code:6029,name:"AuthorityMismatch",msg:"Authority mismatch"},{code:6030,name:"MintMismatch",msg:"Mint mismatch"},{code:6031,name:"TokenMismatch",msg:"Incorrect token address."},{code:6032,name:"OwnerMismatch",msg:"Owner mismatch"},{code:6033,name:"GameMismatch",msg:"Game ID mismatch"},{code:6034,name:"ProfileMismatch",msg:"Profile mismatch"},{code:6035,name:"SagePlayerProfileMismatch",msg:"SagePlayerProfile mismatch"},{code:6036,name:"StarbaseMismatch",msg:"Starbase mismatch"},{code:6037,name:"FactionMismatch",msg:"Faction mismatch"},{code:6038,name:"SeqIdMismatch",msg:"Sequence id mismatch"},{code:6039,name:"ShipMismatch",msg:"Ship mismatch"},{code:6040,name:"CargoPodMismatch",msg:"Cargo Pod mismatch"},{code:6041,name:"PlanetMismatch",msg:"Planet mismatch"},{code:6042,name:"MineItemMismatch",msg:"MineItem mismatch"},{code:6043,name:"LocationMismatch",msg:"Location mismatch"},{code:6044,name:"InvalidEscrowKey",msg:"Escrow key not found in remaining data"},{code:6045,name:"InvalidShipAmount",msg:"Insufficient Ship token amount"},{code:6046,name:"InvalidShipHangarSpaceAmount",msg:"Insufficient Ship hangar space amount"},{code:6047,name:"InvalidCrewAmount",msg:"Invalid crew amount"},{code:6048,name:"InvalidState",msg:"Invalid state"},{code:6049,name:"InvalidDistance",msg:"Invalid distance"},{code:6050,name:"NotAtCentralSpaceStation",msg:"Not at central space station"},{code:6051,name:"ShipNotExpected",msg:"The instruction does not expect a ship account"},{code:6052,name:"AddressMismatch",msg:"Address mismatch"},{code:6053,name:"InvalidSectorConnection",msg:"Invalid sector connection"},{code:6054,name:"InvalidStarbaseLevel",msg:"Invalid Starbase level"},{code:6055,name:"InvalidStarbaseUpgradeRecipeCategory",msg:"Invalid Starbase upgrade recipe category"},{code:6056,name:"HangarUpgradeNotPossible",msg:"Hangar upgrade not Possible"},{code:6057,name:"DisbandedFleetNotEmpty",msg:"Disbanded fleet not empty"},{code:6058,name:"FaultyMovement",msg:"Faulty movement"},{code:6059,name:"IncorrectHandleRawAccount",msg:"Incorrect Account Type for Handle Raw"},{code:6060,name:"InsufficientShipCargoCapacity",msg:"Insufficient Ship Cargo Capacity"},{code:6061,name:"FleetDoesNotNeedUpdate",msg:"Fleet does not need update"},{code:6062,name:"MustDisbandFleet",msg:"Must disband fleet"},{code:6063,name:"CannotForceDisbandFleet",msg:"Cannot force-disband fleet"},{code:6064,name:"ShipMismatchOrAlreadyUpdated",msg:"Ship mismatch or already updated"},{code:6065,name:"ShipAlreadyUpdated",msg:"Ship already updated"},{code:6066,name:"InvalidNextShipAddress",msg:"Invalid next ship address"},{code:6067,name:"InvalidShipForForcedDisband",msg:"Ship is not valid for forced disband of fleet"},{code:6068,name:"InvalidWarpRange",msg:"Warp range exceeded"},{code:6069,name:"InvalidIngredient",msg:"Invalid Ingredient"},{code:6070,name:"StarbaseUpgradeNotInProgress",msg:"Starbase Upgrade Not in progress"},{code:6071,name:"MissingRentedCrew",msg:"Missing Rented Crew"},{code:6072,name:"NoPassengersAllowed",msg:"No Passengers Allowed"},{code:6073,name:"PlanetNotReachable",msg:"Planet Not Reachable"},{code:6074,name:"RespawnNotPossible",msg:"Respawn Not Possible"},{code:6075,name:"InvalidMovement",msg:"Cannot enter enemy faction's Security Zone"},{code:6076,name:"CargoAmountAboveZero",msg:"The Cargo Pod contains a non-zero amount of the Cargo Type"},{code:6077,name:"InvalidCargoPod",msg:"The Cargo Pod is invalid"},{code:6078,name:"InvalidZoneCoordinates",msg:"Invalid Zone Coordinates"},{code:6079,name:"RespawnTimeNotElapsed",msg:"Respawn time not elapsed"},{code:6080,name:"ActiveAccount",msg:"The Account is Active"},{code:6081,name:"StarbasePlayerMismatch",msg:"Starbase Player mismatch"},{code:6082,name:"AlreadyProcessed",msg:"The account has already been processed"},{code:6083,name:"InvalidAmount",msg:"The amount is invalid"},{code:6084,name:"WarpIsOnCooldown",msg:"Warp is on cooldown"},{code:6085,name:"ProgramMismatch",msg:"Program Mismatch"},{code:6086,name:"MustBeOnlyInstruction",msg:"Current Instruction Is Not Only Instruction"},{code:6087,name:"InvalidTime",msg:"Invalid Time"},{code:6088,name:"ScanIsOnCooldown",msg:"Scanning is on cooldown"},{code:6089,name:"InvalidFleetSize",msg:"Invalid Fleet Size"},{code:6090,name:"InactiveFeature",msg:"The feature is inactive"},{code:6091,name:"ZeroShipsAdded",msg:"Zero ships added to fleet"},{code:6092,name:"InvalidNoiseSeed",msg:"Invalid Noise Seed"},{code:6093,name:"InvalidType",msg:"Invalid type"},{code:6094,name:"RentedFleet",msg:"Rented Fleet"},{code:6095,name:"NoCrewItems",msg:"No Crew Items"},{code:6096,name:"GenericInvalid",msg:"Generic invalid data"}]};var kc=Object.create,oa=Object.defineProperty,wc=Object.getOwnPropertyDescriptor,vc=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Gs=a=>{throw TypeError(a)},Ic=(a,e,t)=>e in a?oa(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,_c=(a,e)=>oa(a,"name",{value:e,configurable:!0}),Cc=a=>[,,,kc(null)],Fc=["class","method","getter","setter","accessor","field","value","get","set"],zs=a=>a!==void 0&&typeof a!="function"?Gs("Function expected"):a,xc=(a,e,t,n,s)=>({kind:Fc[a],name:e,metadata:n,addInitializer:i=>t._?Gs("Already initialized"):s.push(zs(i||null))}),Rc=(a,e)=>Ic(e,vc("metadata"),a[3]),Dc=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Ec=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&wc(s,t));_c(s,t);for(var g=n.length-1;g>=0;g--)u=xc(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,zs(r)&&(s=r);return Rc(a,s),l&&oa(s,t,l),d?o^4?i:l:s},Ns,ca;const Uc=!0;Ns=[P.staticImplements()];var Me;let ft=(Me=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t){return v.findProgramAddressSync([U.from("SageCrewConfig"),t.toBuffer()],e.programId)}static registerSageCrewConfig(e){const{program:t,key:n,profile:s,crewProgramConfig:i,gameId:r,input:c}=e;return async u=>[{instruction:await t.methods.registerSageCrewConfig(c).accountsStrict({gameAndProfile:{key:n.publicKey(),profile:s,gameId:r},funder:u.publicKey(),sageCrewConfig:this.findAddress(t,r)[0],config:i,systemProgram:k.programId}).instruction(),signers:[n,u]}]}static decodeData(e,t){return P.decodeAccount(e,t,Me)}},Me.ACCOUNT_NAME="sageCrewConfig",Me.MIN_DATA_SIZE=74,Me);ca=Cc();ft=Ec(ca,0,"SageCrewConfig",Ns,ft);Dc(ca,1,ft);let gt=ft;var Oc=Object.create,ua=Object.defineProperty,$c=Object.getOwnPropertyDescriptor,Kc=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Bs=a=>{throw TypeError(a)},Lc=(a,e,t)=>e in a?ua(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Gc=(a,e)=>ua(a,"name",{value:e,configurable:!0}),zc=a=>[,,,Oc(null)],Nc=["class","method","getter","setter","accessor","field","value","get","set"],Ws=a=>a!==void 0&&typeof a!="function"?Bs("Function expected"):a,Bc=(a,e,t,n,s)=>({kind:Nc[a],name:e,metadata:n,addInitializer:i=>t._?Bs("Already initialized"):s.push(Ws(i||null))}),Wc=(a,e)=>Lc(e,Kc("metadata"),a[3]),qc=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Xc=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&$c(s,t));Gc(s,t);for(var g=n.length-1;g>=0;g--)u=Bc(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Ws(r)&&(s=r);return Wc(a,s),l&&ua(s,t,l),d?o^4?i:l:s},qs,da;qs=[P.staticImplements()];var Ae;let pt=(Ae=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("PlayerCrewRecord"),t.toBuffer(),n.toBuffer()],e.programId)}static closePlayerCrewRecord(e){const{profile:t,profileFaction:n,key:s,fundsTo:i,program:r,starbase:c,starbasePlayer:u,gameId:o,input:d}=e;return async m=>[{instruction:await r.methods.closePlayerCrewRecord(d).accountsStrict({fundsTo:i==="funder"?m.publicKey():i,gameAndProfileAndFaction:{key:s.publicKey(),profile:t,profileFaction:n,gameId:o},starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:u},crewRecord:this.findAddress(r,t,o)[0],crewConfig:gt.findAddress(r,o)[0]}).instruction(),signers:[s]}]}static decodeData(e,t){return P.decodeAccount(e,t,Ae)}},Ae.ACCOUNT_NAME="playerCrewRecord",Ae.MIN_DATA_SIZE=110,Ae);da=zc();pt=Xc(da,0,"PlayerCrewRecord",qs,pt);qc(da,1,pt);let Zc=pt;var Ue=Hn();function Hc(a){return new v(a)}var jc=jn(),Vc=Object.create,la=Object.defineProperty,Qc=Object.getOwnPropertyDescriptor,Yc=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Xs=a=>{throw TypeError(a)},Jc=(a,e,t)=>e in a?la(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,eu=(a,e)=>la(a,"name",{value:e,configurable:!0}),tu=a=>[,,,Vc(null)],au=["class","method","getter","setter","accessor","field","value","get","set"],Zs=a=>a!==void 0&&typeof a!="function"?Xs("Function expected"):a,su=(a,e,t,n,s)=>({kind:au[a],name:e,metadata:n,addInitializer:i=>t._?Xs("Already initialized"):s.push(Zs(i||null))}),nu=(a,e)=>Jc(e,Yc("metadata"),a[3]),iu=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},ru=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Qc(s,t));eu(s,t);for(var g=n.length-1;g>=0;g--)u=su(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Zs(r)&&(s=r);return nu(a,s),l&&la(s,t,l),d?o^4?i:l:s},Hs,ma;const ou=170;Hs=[P.staticImplements()];var ke;let ht=(ke=class{constructor(e,t,n){this._data=e,this._key=t,this._wrappedShipEscrows=n}get data(){return this._data}get key(){return this._key}get wrappedShipEscrows(){return this._wrappedShipEscrows||[]}totalCrew(e=Uc){return e?this.data.newTotalCrew:this.data.oldTotalCrew}static findAddress(e,t,n,s){const i=new ArrayBuffer(2),r=new DataView(i);r.setUint16(0,s,!0);const c=new Uint8Array(r.buffer);return v.findProgramAddressSync([U.from("starbase_player"),t.toBuffer(),n.toBuffer(),c],e.programId)}static registerStarbasePlayer(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.registerStarbasePlayer().accountsStrict({profileFaction:t,funder:u.publicKey(),gameAccounts:{gameId:i,gameState:r},sagePlayerProfile:n,starbase:s,starbasePlayer:this.findAddress(e,s,n,c)[0],systemProgram:k.programId}).instruction(),signers:[u]}]}static syncStarbasePlayer(e,t,n,s,i){return async()=>[{instruction:await e.methods.syncStarbasePlayer().accountsStrict({starbaseAndStarbasePlayer:{starbase:n,starbasePlayer:t},gameAccounts:{gameId:s,gameState:i}}).instruction(),signers:[]}]}static createCargoPod(e,t,n,s,i,r,c,u,o,d,m){const f=Je.CargoPod.findAddress(t,U.from(m.podSeeds))[0];return async l=>[{instruction:await e.methods.createCargoPod(m).accountsStrict({funder:l.publicKey(),starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:i,profileFaction:r,gameId:o},gameState:d},cargoPod:f,cargoStatsDefinition:u,cargoProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[s,l]}]}static depositCargoToGame(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p){return async()=>[{instruction:await e.methods.depositCargoToGame(p).accountsStrict({starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:i,profileFaction:r,gameId:l},gameState:g},cargoPod:u,cargoType:o,cargoStatsDefinition:d,tokenFrom:m,tokenTo:f,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[s]}]}static withdrawCargoFromGame(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y){return async b=>[{instruction:await e.methods.withdrawCargoFromGame(y).accountsStrict({fundsTo:i==="funder"?b.publicKey():i,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:r,profileFaction:c,gameId:p},gameState:h},cargoPod:o,cargoType:d,cargoStatsDefinition:m,tokenFrom:f,tokenTo:l,tokenMint:g,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[s]}]}static transferCargoAtStarbase(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){return async S=>[{instruction:await e.methods.transferCargoAtStarbase(b).accountsStrict({fundsTo:i==="funder"?S.publicKey():i,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:r,profileFaction:c,gameId:h},gameState:y},cargoPodFrom:o,cargoPodTo:d,cargoType:m,cargoStatsDefinition:f,tokenFrom:l,tokenTo:g,tokenMint:p,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[s]}]}static closeStarbaseCargoTokenAccount(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h){return async y=>[{instruction:await e.methods.closeStarbaseCargoTokenAccount(h).accountsStrict({fundsTo:i==="funder"?y.publicKey():i,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:r,profileFaction:c,gameId:g},gameState:p},cargoPod:o,cargoType:d,cargoStatsDefinition:m,token:f,tokenMint:l,cargoProgram:t.programId,tokenProgram:C}).instruction(),signers:[s]}]}static removeCargoPod(e,t,n,s,i,r,c,u,o,d,m,f){return async l=>[{instruction:await e.methods.removeCargoPod(f).accountsStrict({fundsTo:c==="funder"?l.publicKey():c,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:i,profileFaction:r,gameId:d},gameState:m},cargoPod:o,cargoProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[s]}]}static mintCertificate(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){return async()=>[{instruction:await e.methods.mintCertificate(b.keyIndex,b.amount).accountsStrict({starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:i,profileFaction:r,gameId:h},gameState:y},certificateTokenTo:m,certificateMint:f,cargoTokenFrom:l,cargoTokenTo:g,cargoMint:p,cargoPod:u,cargoType:o,cargoStatsDefinition:d,cargoProgram:t.programId,tokenProgram:C,token2022Program:It}).instruction(),signers:[s]}]}static redeemCertificate(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M){const w=[s],R=[];return P.isAsyncSigner(l)?(R.push({pubkey:l.publicKey(),isSigner:!0,isWritable:!1}),w.push(l)):jc.assert(n.equals(l)),async K=>[{instruction:await e.methods.redeemCertificate(M.keyIndex,M.amount).accountsStrict({fundsTo:c==="funder"?K.publicKey():c,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:n},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:s.publicKey(),profile:i,profileFaction:r,gameId:b},gameState:S},certificateTokenFrom:f,certificateMint:g,cargoTokenFrom:p,cargoTokenTo:h,cargoMint:y,cargoPod:o,cargoType:d,cargoStatsDefinition:m,cargoProgram:t.programId,tokenProgram:C,token2022Program:It}).remainingAccounts(R).instruction(),signers:w}]}static decodeData(e,t){return P.decodeAccountWithRemaining(e,t,ke,(s,i)=>Array(i.shipEscrowCount).fill(0).map((r,c)=>t.coder.types.decode("WrappedShipEscrow",s.subarray(48*c).subarray(0,48))))}},ke.ACCOUNT_NAME="starbasePlayer",ke.MIN_DATA_SIZE=ou,ke);ma=tu();ht=ru(ma,0,"StarbasePlayer",Hs,ht);iu(ma,1,ht);let cu=ht;const uu=(a,e)=>v.findProgramAddressSync([U.from("extra-account-metas"),e.toBuffer()],a),xt=a=>Array.isArray(a)?new v(a):a;var du=Object.create,fa=Object.defineProperty,lu=Object.getOwnPropertyDescriptor,mu=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),js=a=>{throw TypeError(a)},fu=(a,e,t)=>e in a?fa(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,gu=(a,e)=>fa(a,"name",{value:e,configurable:!0}),pu=a=>[,,,du(null)],hu=["class","method","getter","setter","accessor","field","value","get","set"],Vs=a=>a!==void 0&&typeof a!="function"?js("Function expected"):a,yu=(a,e,t,n,s)=>({kind:hu[a],name:e,metadata:n,addInitializer:i=>t._?js("Already initialized"):s.push(Vs(i||null))}),Su=(a,e)=>fu(e,mu("metadata"),a[3]),bu=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Tu=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&lu(s,t));gu(s,t);for(var g=n.length-1;g>=0;g--)u=yu(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Vs(r)&&(s=r);return Su(a,s),l&&fa(s,t,l),d?o^4?i:l:s},Qs,ga;function za(a){const e=xt(a.dataHash).toBytes();return{dataHash:Array.from(e),leafIndex:a.leafIndex,proofCount:a.proof.length}}function Na(a){const e=v.findProgramAddressSync([a.merkleTree.toBuffer()],Hc(Ue.MPL_BUBBLEGUM_PROGRAM_ID))[0],t=[{pubkey:a.merkleTree,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:xt(a.root),isSigner:!1,isWritable:!1},{pubkey:xt(a.creatorHash),isSigner:!1,isWritable:!1}];for(const n of a.proof)t.push({pubkey:n,isSigner:!1,isWritable:!1});return t}Qs=[P.staticImplements()];var we;let yt=(we=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("sage_player_profile"),t.toBuffer(),n.toBuffer()],e.programId)}static registerSagePlayerProfile(e,t,n,s){return async i=>[{instruction:await e.methods.registerSagePlayerProfile().accountsStrict({profile:t,funder:i.publicKey(),sagePlayerProfile:this.findAddress(e,t,n)[0],gameAccounts:{gameId:n,gameState:s},systemProgram:k.programId}).instruction(),signers:[i]}]}static addShipEscrow(e,t,n,s,i,r,c,u,o,d,m,f,l){return async g=>[{instruction:await e.methods.addShipEscrow(l).accountsStrict({funder:g.publicKey(),sagePlayerProfile:s,originTokenAccount:r,ship:c,shipEscrowTokenAccount:u,starbaseAndStarbasePlayer:{starbase:d,starbasePlayer:o},gameAccountsAndProfile:{gameAndProfileAndFaction:{key:i.publicKey(),profile:t,profileFaction:n,gameId:m},gameState:f},tokenProgram:C,systemProgram:k.programId}).instruction(),signers:[i,g]}]}static updateShipEscrow(e,t,n,s,i,r,c,u){return async()=>[{instruction:await e.methods.updateShipEscrow(u).accountsStrict({oldShip:t,next:n,starbaseAndStarbasePlayer:{starbase:i,starbasePlayer:s},gameAccounts:{gameId:r,gameState:c}}).instruction(),signers:[]}]}static removeShipEscrow(e,t,n,s,i,r,c,u,o,d,m,f,l){return async g=>[{instruction:await e.methods.removeShipEscrow(l).accountsStrict({gameAccountsAndProfile:{gameAndProfileAndFaction:{key:t.publicKey(),profile:n,profileFaction:s,gameId:m},gameState:f},fundsTo:g.publicKey(),sagePlayerProfile:i,destinationTokenAccount:r,ship:c,shipEscrowTokenAccount:u,starbaseAndStarbasePlayer:{starbase:d,starbasePlayer:o},tokenProgram:C,systemProgram:k.programId}).instruction(),signers:[t]}]}static removeInvalidShipEscrow(e,t,n,s,i,r,c,u,o,d,m,f,l){return async g=>[{instruction:await e.methods.removeInvalidShipEscrow(l).accountsStrict({gameAccountsAndProfile:{gameAndProfileAndFaction:{key:t.publicKey(),profile:n,profileFaction:s,gameId:m},gameState:f},fundsTo:g.publicKey(),sagePlayerProfile:i,destinationTokenAccount:r,ship:c,shipEscrowTokenAccount:u,starbaseAndStarbasePlayer:{starbase:d,starbasePlayer:o},tokenProgram:C,systemProgram:k.programId}).instruction(),signers:[t]}]}static addCrewToGame(e,t,n,s,i,r,c,u,o,d){const m=o.items.map(Na).flat();return async()=>[{instruction:await e.methods.addCrewToGame({items:o.items.map(za)}).accountsStrict({sagePlayerProfile:this.findAddress(e,t,u)[0],starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:i},sageCrewConfig:gt.findAddress(e,u)[0],gameAndProfileAndFaction:{key:s.publicKey(),profile:t,profileFaction:n,gameId:u},crewConfig:c,crewOwner:s.publicKey(),crewDelegate:d??s.publicKey(),compressionProgram:Ue.SPL_ACCOUNT_COMPRESSION_PROGRAM_ID,bubblegumProgram:Ue.MPL_BUBBLEGUM_PROGRAM_ID,logWrapper:Ue.SPL_NOOP_PROGRAM_ID,systemProgram:k.programId}).remainingAccounts(m).instruction(),signers:[s]}]}static removeCrewFromGame(e,t,n,s,i,r,c,u,o,d,m){if(d.items.length===0)throw new Error("No crew members being removed!");const f=d.items.map(Na).flat(),l=this.findAddress(e,n,o)[0];return async()=>[{instruction:await e.methods.removeCrewFromGame({keyIndex:d.keyIndex,items:d.items.map(za)}).accountsStrict({sagePlayerProfile:l,starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:r},sageCrewConfig:gt.findAddress(e,o)[0],gameAndProfileAndFaction:{key:t.publicKey(),profile:n,profileFaction:s,gameId:o},crewConfig:u,newCrewOwner:i,crewDelegate:m??l,compressionProgram:Ue.SPL_ACCOUNT_COMPRESSION_PROGRAM_ID,bubblegumProgram:Ue.MPL_BUBBLEGUM_PROGRAM_ID,logWrapper:Ue.SPL_NOOP_PROGRAM_ID,systemProgram:k.programId}).remainingAccounts(f).instruction(),signers:[t]}]}static decodeData(e,t){return P.decodeAccount(e,t,we)}},we.ACCOUNT_NAME="sagePlayerProfile",we.MIN_DATA_SIZE=74,we);ga=pu();yt=Tu(ga,0,"SagePlayerProfile",Qs,yt);bu(ga,1,yt);let pa=yt;var Pu=Object.create,ha=Object.defineProperty,Mu=Object.getOwnPropertyDescriptor,Au=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),Ys=a=>{throw TypeError(a)},ku=(a,e,t)=>e in a?ha(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,wu=(a,e)=>ha(a,"name",{value:e,configurable:!0}),vu=a=>[,,,Pu(null)],Iu=["class","method","getter","setter","accessor","field","value","get","set"],Js=a=>a!==void 0&&typeof a!="function"?Ys("Function expected"):a,_u=(a,e,t,n,s)=>({kind:Iu[a],name:e,metadata:n,addInitializer:i=>t._?Ys("Already initialized"):s.push(Js(i||null))}),Cu=(a,e)=>ku(e,Au("metadata"),a[3]),Fu=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},xu=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Mu(s,t));wu(s,t);for(var g=n.length-1;g>=0;g--)u=_u(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,Js(r)&&(s=r);return Cu(a,s),l&&ha(s,t,l),d?o^4?i:l:s},en,ya;en=[P.staticImplements()];var ve;let St=(ve=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}get prettyName(){return P.byteArrayToString(this.data.name)}static registerStar(e){const{program:t,key:n,profile:s,star:i,sector:r,gameId:c,input:u}=e;return async o=>[{instruction:await t.methods.registerStar({...u,name:P.stringToByteArray(u.name,64),starType:u.starType}).accountsStrict({gameAndProfile:{key:n.publicKey(),profile:s,gameId:c},funder:o.publicKey(),star:i.publicKey(),sector:r,systemProgram:k.programId}).instruction(),signers:[n,o,i]}]}static updateStar(e){const{profile:t,key:n,program:s,star:i,gameId:r,input:c}=e;return async()=>[{instruction:await s.methods.updateStar({keyIndex:c.keyIndex,name:c.name==null?null:P.stringToByteArray(c.name,64),size:c.size==null?null:c.size,starType:c.starType==null?null:c.starType}).accountsStrict({gameAndProfile:{key:n.publicKey(),profile:t,gameId:r},star:i}).instruction(),signers:[n]}]}static decodeData(e,t){return P.decodeAccount(e,t,ve)}},ve.ACCOUNT_NAME="star",ve.MIN_DATA_SIZE=105+8*2+8*2+1+8,ve);ya=vu();St=xu(ya,0,"Star",en,St);Fu(ya,1,St);let Ru=St;var Du=Object.create,Sa=Object.defineProperty,Eu=Object.getOwnPropertyDescriptor,Uu=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),tn=a=>{throw TypeError(a)},Ou=(a,e,t)=>e in a?Sa(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,$u=(a,e)=>Sa(a,"name",{value:e,configurable:!0}),Ku=a=>[,,,Du(null)],Lu=["class","method","getter","setter","accessor","field","value","get","set"],an=a=>a!==void 0&&typeof a!="function"?tn("Function expected"):a,Gu=(a,e,t,n,s)=>({kind:Lu[a],name:e,metadata:n,addInitializer:i=>t._?tn("Already initialized"):s.push(an(i||null))}),zu=(a,e)=>Ou(e,Uu("metadata"),a[3]),Nu=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Bu=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Eu(s,t));$u(s,t);for(var g=n.length-1;g>=0;g--)u=Gu(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,an(r)&&(s=r);return zu(a,s),l&&Sa(s,t,l),d?o^4?i:l:s},sn,ba;const Wu=6,qu=(a,e,t,n,s,i)=>{const{globalElapsedTime:r,adjustedLocalElapsedTime:c,maxElapsedTime:u,finalBalance:o}=Xu(a,e,t,n,s),d=E.min(c,u),m=d.eq(u)?r.mul(new E(100)).sub(d.mul(new E(100))).mul(new E(hd[i]*100)).div(new E(100)):new E(0);return{localTime:e.mul(new E(100)).add(c.mul(new E(100))).add(m).toNumber()/100,newBalance:o.toNumber()}},Xu=(a,e,t,n,s)=>{const i=a.gt(t)?a.sub(t):new E(0),r=s>0?n.div(new E(s)):new E(0),c=E.min(r,i),o=e.add(c).gt(a)?a.sub(e):c,d=o.mul(new E(s)),m=n.sub(d),f=m.lt(new E(0))?new E(0):m;return{globalElapsedTime:i,adjustedLocalElapsedTime:o,maxElapsedTime:r,finalBalance:f}};sn=[P.staticImplements()];var Ie;let bt=(Ie=class{constructor(e,t,n){this._data=e,this._key=t,this._upgradeIngredientAmounts=n}get data(){return this._data}get key(){return this._key}get upgradeIngredientAmounts(){return this._upgradeIngredientAmounts||[]}isCentralSpaceStation(){return this.data.level>=Wu}getUpkeepInfo(e){const t=e.data.fleet.upkeep;let n;switch(this.data.level){case 0:n=t.level0;break;case 1:n=t.level1;break;case 2:n=t.level2;break;case 3:n=t.level3;break;case 4:n=t.level4;break;case 5:n=t.level5;break;case 6:n=t.level6;break;default:throw"Invalid Starbase level."}return n}getStarbaseTime(e,t,n){const s=this.getUpkeepInfo(n);let i,r,c,u,o;switch(e){case 1:i=s.ammoReserve,r=s.ammoDepletionRate,c=this.data.upkeepAmmoBalance,u=this.data.upkeepAmmoLastUpdate,o=this.data.upkeepAmmoGlobalLastUpdate;break;case 2:i=s.foodReserve,r=s.foodDepletionRate,c=this.data.upkeepFoodBalance,u=this.data.upkeepFoodLastUpdate,o=this.data.upkeepFoodGlobalLastUpdate;break;case 3:i=s.toolkitReserve,r=s.toolkitDepletionRate,c=this.data.upkeepToolkitBalance,u=this.data.upkeepToolkitLastUpdate,o=this.data.upkeepToolkitGlobalLastUpdate;break;default:throw"Invalid resource type."}return r=r/Ct,i.eq(new E(0))?t:new E(qu(t,u,o,c,r,this.data.level).localTime)}static findAddress(e,t,n){return v.findProgramAddressSync([U.from("Starbase"),t.toBuffer(),n[0].toTwos(64).toArrayLike(U,"le",8),n[1].toTwos(64).toArrayLike(U,"le",8)],e.programId)}static registerStarbase(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.registerStarbase(c).accountsStrict({funder:u.publicKey(),starbase:this.findAddress(e,i,c.sectorCoordinates)[0],sector:s,gameStateAndProfile:{gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},gameState:r},systemProgram:k.programId}).instruction(),signers:[t,u]}]}static updateStarbase(e,t,n,s,i,r,c,u,o){const d=[];return[c,u,o].forEach(m=>m&&d.push({pubkey:m,isSigner:!1,isWritable:!1})),async m=>[{instruction:await e.methods.updateStarbase({name:r.name??null,subCoordinates:r.subCoordinates??null,keyIndex:r.keyIndex}).accountsStrict({gameAndProfile:{key:n.publicKey(),profile:s,gameId:i},funder:m.publicKey(),starbase:t,systemProgram:k.programId}).remainingAccounts(d).instruction(),signers:[n,m]}]}static createStarbaseUpgradeResourceProcess(e,t,n,s,i,r,c,u,o,d,m,f,l){const g=Ya.CraftingProcess.findAddress(t,d,m,l.craftingId),p=fe.findAddress(e,r,g[0]);return{craftingProcessKey:g,craftingInstanceKey:p,instructions:async h=>[{instruction:await e.methods.createStarbaseUpgradeResourceProcess(l).accountsStrict({funder:h.publicKey(),starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:r},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:u,key:n.publicKey(),profile:s,profileFaction:i},gameState:o},craftingInstance:p[0],craftingProcess:g[0],upgradeFacility:d,craftingRecipe:m,craftingDomain:f,craftingProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[n,h]}]}}static depositStarbaseUpgradeResourceIngredient(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M){return fe.depositCraftingIngredient(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M)}static withdrawStarbaseUpgradeResourceIngredient(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w){return fe.withdrawCraftingIngredient(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w)}static startStarbaseUpgradeCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b){return fe.startCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b)}static cancelStarbaseUpgradeCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g){return fe.cancelCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g)}static stopStarbaseUpgradeCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g){return fe.stopCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g)}static submitStarbaseUpgradeResource(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w,R,K,$,W,q,H,ee,Fe,te){const xe=[i],Re=[];let De=!1;const re=P.isAsyncSigner(H),Ze=re?H.publicKey():H;return Re.push({pubkey:Ze,isSigner:re,isWritable:!0},{pubkey:ee,isSigner:!1,isWritable:!0},{pubkey:Fe.programId,isSigner:!1,isWritable:!1}),re&&(xe.push(H),Re.push({pubkey:k.programId,isSigner:!1,isWritable:!1})),De=re,async We=>[{instruction:await e.methods.submitStarbaseUpgradeResource(te).accountsStrict({fundsTo:u==="funder"?We.publicKey():u,starbaseAndStarbasePlayer:{starbase:d,starbasePlayer:o},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:m,key:i.publicKey(),profile:r,profileFaction:c},gameState:f},resourceCraftingInstance:fe.findAddress(e,o,l)[0],resourceCraftingProcess:l,resourceCraftingFacility:g,upgradeProcessRecipe:p,starbaseUpgradeRecipe:h,resourceRecipe:y,cargoPodTo:b,cargoType:S,cargoStatsDefinition:M,tokenFrom:w,tokenTo:R,tokenMint:K,loyaltyPointsAccounts:{userPointsAccount:$,pointsCategory:W,pointsModifierAccount:q},progressionConfig:pe.findAddress(e,m)[0],pointsProgram:s.programId,craftingProgram:n.programId,cargoProgram:t.programId,tokenProgram:C}).remainingAccounts([...Re,...De?[{pubkey:We.publicKey(),isSigner:!0,isWritable:!0}]:[]]).instruction(),signers:[...xe,...De?[We]:[]]}]}static startStarbaseUpgrade(e,t,n,s,i,r,c,u,o,d,m){return async f=>[{instruction:await e.methods.startStarbaseUpgrade(m).accountsStrict({funder:f.publicKey(),starbaseAndStarbasePlayer:{starbase:r,starbasePlayer:i},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:c,key:t.publicKey(),profile:n,profileFaction:s},gameState:u},upgradeFacility:o,upgradeRecipe:d,systemProgram:k.programId}).instruction(),signers:[t,f]}]}static closeStarbaseUpgradeCraftingProcess(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y){const b=[];return h&&y&&b.push({pubkey:h,isSigner:!1,isWritable:!0},{pubkey:y,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1}),async S=>[{instruction:await e.methods.closeUpgradeProcess(p).accountsStrict({fundsTo:r==="funder"?S.publicKey():r,starbaseAndStarbasePlayer:{starbase:u,starbasePlayer:c},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:l,key:n.publicKey(),profile:s,profileFaction:i},gameState:g},resourceCraftingInstance:o,resourceCraftingProcess:d,resourceRecipe:f,resourceCraftingFacility:m,craftingProgram:t.programId}).remainingAccounts(b).instruction(),signers:[n]}]}static completeStarbaseUpgrade(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p){return async h=>[{instruction:await e.methods.completeStarbaseUpgrade(p).accountsStrict({funder:h.publicKey(),starbaseAndStarbasePlayer:{starbase:c,starbasePlayer:r},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:u,key:n.publicKey(),profile:s,profileFaction:i},gameState:o},craftingFacility:d,upgradeFacility:m,upgradeRecipe:l,newRecipeCategory:f,craftingDomain:g,craftingProgram:t.programId,systemProgram:k.programId}).instruction(),signers:[n,h]}]}static syncStarbaseUpgradeIngredients(e,t,n,s,i,r,c,u){return async o=>[{instruction:await e.methods.syncStarbaseUpgradeIngredients(u).accountsStrict({funder:o.publicKey(),starbase:s,gameAccountsAndProfile:{gameAndProfile:{gameId:i,key:t.publicKey(),profile:n},gameState:r},upgradeRecipe:c,systemProgram:k.programId}).instruction(),signers:[t,o]}]}static depositStarbaseUpkeepResource(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w,R,K,$){const W=[s],q=[];let H=!1;const ee=P.isAsyncSigner(w),Fe=ee?w.publicKey():w;return q.push({pubkey:Fe,isSigner:ee,isWritable:!0},{pubkey:R,isSigner:!1,isWritable:!0},{pubkey:K.programId,isSigner:!1,isWritable:!1}),ee&&(W.push(w),q.push({pubkey:k.programId,isSigner:!1,isWritable:!1})),H=ee,async te=>[{instruction:await e.methods.depositStarbaseUpkeepResource($).accountsStrict({fundsTo:c==="funder"?te.publicKey():c,starbaseAndStarbasePlayer:{starbase:o,starbasePlayer:u},gameAccountsAndProfile:{gameAndProfileAndFaction:{gameId:d,key:s.publicKey(),profile:i,profileFaction:r},gameState:m},cargoPodFrom:f,cargoType:l,cargoStatsDefinition:g,resourceRecipe:p,tokenFrom:h,tokenMint:y,loyaltyPointsAccounts:{userPointsAccount:b,pointsCategory:S,pointsModifierAccount:M},progressionConfig:pe.findAddress(e,d)[0],pointsProgram:n.programId,cargoProgram:t.programId,tokenProgram:C}).remainingAccounts([...q,...H?[{pubkey:te.publicKey(),isSigner:!0,isWritable:!0}]:[]]).instruction(),signers:[...W,...H?[te]:[]]}]}static createCertificateMint(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.createCertificateMint().accountsStrict({funder:u.publicKey(),starbase:n,cargoMint:s,cargoType:r,certificateMint:i,gameId:c,transferHookProgram:t,transferHookExtraAccountMetaList:uu(t,i)[0],token2022Program:It,systemProgram:k.programId}).instruction(),signers:[u]}]}static decodeData(e,t){return P.decodeAccountWithRemaining(e,t,Ie,(n,s)=>Array(s.numUpgradeIngredients).fill(0).map((i,r)=>new E(n.subarray(8*r).subarray(0,8),10,"le")))}},Ie.ACCOUNT_NAME="starbase",Ie.MIN_DATA_SIZE=41+8*2+32+32+64+8*2+1+1+2+1+1+8+8+1+1+1+16+8+8+8+8+8+8+8+8+8+8,Ie);ba=Ku();bt=Bu(ba,0,"Starbase",sn,bt);Nu(ba,1,bt);let Zu=bt;var Hu=Object.create,Ta=Object.defineProperty,ju=Object.getOwnPropertyDescriptor,Vu=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),nn=a=>{throw TypeError(a)},Qu=(a,e,t)=>e in a?Ta(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Yu=(a,e)=>Ta(a,"name",{value:e,configurable:!0}),Ju=a=>[,,,Hu(null)],ed=["class","method","getter","setter","accessor","field","value","get","set"],rn=a=>a!==void 0&&typeof a!="function"?nn("Function expected"):a,td=(a,e,t,n,s)=>({kind:ed[a],name:e,metadata:n,addInitializer:i=>t._?nn("Already initialized"):s.push(rn(i||null))}),ad=(a,e)=>Qu(e,Vu("metadata"),a[3]),sd=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},nd=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&ju(s,t));Yu(s,t);for(var g=n.length-1;g>=0;g--)u=td(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,rn(r)&&(s=r);return ad(a,s),l&&Ta(s,t,l),d?o^4?i:l:s},on,Pa;on=[P.staticImplements()];var _e;let Tt=(_e=class{constructor(e,t){this._data=e,this._key=t}get data(){return this._data}get key(){return this._key}static findSignerAddress(e,t){return v.findProgramAddressSync([U.from("SurveyDataUnitTracker"),t.toBuffer()],e.programId)}static findSignerTokenAccountAddress(e){return Qa(e.sduMint,e.signer,!0)}static fundSurveyDataUnitTrackerBank(e,t,n,s){const i=this.findSignerTokenAccountAddress(e);return P.transferToTokenAccount(t,n,i,s)}static registerSurveyDataUnitTracker(e,t,n,s,i,r,c,u){return async o=>[{instruction:await e.methods.registerSurveyDataUnitTracker(u).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:c},funder:o.publicKey(),surveyDataUnitTracker:s.publicKey(),sduMint:i,resourceMint:r,systemProgram:k.programId}).instruction(),signers:[t,o,s]}]}static updateSurveyDataUnitTracker(e,t,n,s,i,r,c){const u=c?[{pubkey:c.sduMint,isSigner:!1,isWritable:!1},{pubkey:c.resourceMint,isSigner:!1,isWritable:!1}]:[],o={...r,coordinatesRange:r.coordinatesRange??null,cssCoordinates:r.cssCoordinates??null,originCoordinates:r.originCoordinates??null,cssMaxDistance:r.cssMaxDistance??null,originMaxDistance:r.originMaxDistance??null,distanceWeighting:r.distanceWeighting??null,tMax:r.tMax??null,xMul:r.xMul??null,yMul:r.yMul??null,zMul:r.zMul??null,scanChanceRegenPeriod:r.scanChanceRegenPeriod??null,sduMaxPerSector:r.sduMaxPerSector??null};return async()=>[{instruction:await e.methods.updateSurveyDataUnitTracker(o).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:i},surveyDataUnitTracker:s}).remainingAccounts(u).instruction(),signers:[t]}]}static drainSurveyDataUnitsBank(e,t,n,s,i,r,c,u,o){return async d=>[{instruction:await e.methods.drainSurveyDataUnitsBank(o).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},fundsTo:s==="funder"?d.publicKey():s,surveyDataUnitTracker:i,surveyDataUnitTrackerSigner:this.findSignerAddress(e,i)[0],tokenFrom:c,tokenTo:u,tokenProgram:C}).instruction(),signers:[t]}]}static deregisterSurveyDataUnitTracker(e,t,n,s,i,r,c){return async u=>[{instruction:await e.methods.deregisterSurveyDataUnitTracker(c).accountsStrict({gameAndProfile:{key:t.publicKey(),profile:n,gameId:r},surveyDataUnitTracker:s,fundsTo:i==="funder"?u.publicKey():i}).instruction(),signers:[t]}]}static scanForSurveyDataUnits(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w,R,K,$,W,q){return async()=>[{instruction:await e.methods.scanForSurveyDataUnits(q).accountsStrict({gameAccountsFleetAndOwner:{gameFleetAndOwner:{fleetAndOwner:{fleet:c,owningProfile:i,owningProfileFaction:r,key:s.publicKey()},gameId:$},gameState:W},sector:u,surveyDataUnitTracker:o,surveyDataUnitTrackerSigner:this.findSignerAddress(e,o)[0],cargoHold:d,sduCargoType:m,resourceCargoType:f,cargoStatsDefinition:l,sduTokenFrom:g,sduTokenTo:p,resourceTokenFrom:h,resourceMint:y,dataRunningXpAccounts:{userPointsAccount:b,pointsCategory:S,pointsModifierAccount:M},councilRankXpAccounts:{userPointsAccount:w,pointsCategory:R,pointsModifierAccount:K},progressionConfig:pe.findAddress(e,$)[0],pointsProgram:n.programId,cargoProgram:t.programId,tokenProgram:C,recentSlothashes:Vn,instructionsSysvar:Qn}).instruction(),signers:[s]}]}static decodeData(e,t){return P.decodeAccount(e,t,_e)}},_e.ACCOUNT_NAME="surveyDataUnitTracker",_e.MIN_DATA_SIZE=138+8*2+8*2*3+8*2+4+4+4+8+4+4+4+4+2,_e);Pa=Ju();Tt=nd(Pa,0,"SurveyDataUnitTracker",on,Tt);sd(Pa,1,Tt);let id=Tt;var rd=Object.create,Ma=Object.defineProperty,od=Object.getOwnPropertyDescriptor,cn=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),un=a=>{throw TypeError(a)},cd=(a,e,t)=>e in a?Ma(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,ud=(a,e)=>Ma(a,"name",{value:e,configurable:!0}),dd=a=>[,,,rd(a?.[cn("metadata")]??null)],ld=["class","method","getter","setter","accessor","field","value","get","set"],dn=a=>a!==void 0&&typeof a!="function"?un("Function expected"):a,md=(a,e,t,n,s)=>({kind:ld[a],name:e,metadata:n,addInitializer:i=>t._?un("Already initialized"):s.push(dn(i||null))}),fd=(a,e)=>cd(e,cn("metadata"),a[3]),gd=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},pd=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&od(s,t));ud(s,t);for(var g=n.length-1;g>=0;g--)u=md(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,dn(r)&&(s=r);return fd(a,s),l&&Ma(s,t,l),d?o^4?i:l:s},ln,Aa,mn;const hd=[0,.2,.275,.35,.425,.5,.5];P.generateErrorMap(Ls);ln=[P.staticImplements()];class Rt extends(mn=P.ListenProgram){constructor(e){super(e,{craftingInstance:fe,disbandedFleet:_t,fleet:Fo,fleetShips:Ee,game:Ft,gameState:Ac,mineItem:gs,planet:lc,playerCrewRecord:Zc,progressionConfig:pe,resource:Ss,sageCrewConfig:gt,sagePlayerProfile:pa,sector:eo,ship:yo,star:Ru,starbase:Zu,starbasePlayer:cu,surveyDataUnitTracker:id})}static buildProgram(e,t,n){return new Yn(Ls,e,t,n)}}Aa=dd(mn);Rt=pd(Aa,0,"SageProgram",ln,Rt);gd(Aa,1,Rt);var yd=Object.create,ka=Object.defineProperty,Sd=Object.getOwnPropertyDescriptor,bd=(a,e)=>(e=Symbol[a])?e:Symbol.for("Symbol."+a),fn=a=>{throw TypeError(a)},Td=(a,e,t)=>e in a?ka(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,Pd=(a,e)=>ka(a,"name",{value:e,configurable:!0}),Md=a=>[,,,yd(null)],Ad=["class","method","getter","setter","accessor","field","value","get","set"],gn=a=>a!==void 0&&typeof a!="function"?fn("Function expected"):a,kd=(a,e,t,n,s)=>({kind:Ad[a],name:e,metadata:n,addInitializer:i=>t._?fn("Already initialized"):s.push(gn(i||null))}),wd=(a,e)=>Td(e,bd("metadata"),a[3]),vd=(a,e,t,n)=>{for(var s=0,i=a[e>>1],r=i&&i.length;s<r;s++)i[s].call(t);return n},Id=(a,e,t,n,s,i)=>{var r,c,u,o=e&7,d=!!(e&16),m=0,f=a[m]||(a[m]=[]),l=o&&(s=s.prototype,o<5&&(o>3||!d)&&Sd(s,t));Pd(s,t);for(var g=n.length-1;g>=0;g--)u=kd(o,t,c={},a[3],f),r=(0,n[g])(s,u),c._=1,gn(r)&&(s=r);return wd(a,s),l&&ka(s,t,l),d?o^4?i:l:s},pn,wa;pn=[P.staticImplements()];let Dt=class I{constructor(e,t,n,s,i,r,c,u,o,d,m,f,l,g,p,h,y,b,S,M,w,R,K,$,W,q,H,ee,Fe){this.manageGame=e,this.manageSector=t,this.manageStar=n,this.managePlanet=s,this.manageShip=i,this.manageSagePlayerProfile=r,this.manageStarbase=c,this.manageMineItem=u,this.manageResource=o,this.removeShipEscrow=d,this.moveFleet=m,this.transitionFromLoadingBay=f,this.transitionFromIdle=l,this.rentFleet=g,this.doCrafting=p,this.manageCargoPod=h,this.addRemoveCargo=y,this.doStarbaseUpgrades=b,this.manageFleet=S,this.manageFleetCargo=M,this.doMining=w,this.respawn=R,this.manageSurveyDataUnit=K,this.scanSurveyDataUnit=$,this.doStarbaseUpkeep=W,this.manageProgression=q,this.manageCrewConfig=H,this.manageCrew=ee,this.withdrawCrew=Fe}contains(e){return this.and(e).eq(e)}getPermissions(){const e=P.fixedSizeArray(8,0);return e[0]=(this.manageGame?1:0)|(this.manageSector?2:0)|(this.manageStar?4:0)|(this.managePlanet?8:0)|(this.manageShip?16:0)|(this.manageSagePlayerProfile?32:0)|(this.manageStarbase?64:0)|(this.manageMineItem?128:0),e[1]=(this.manageResource?1:0)|(this.removeShipEscrow?2:0)|(this.moveFleet?4:0)|(this.transitionFromLoadingBay?8:0)|(this.transitionFromIdle?16:0)|(this.rentFleet?32:0)|(this.doCrafting?64:0)|(this.manageCargoPod?128:0),e[2]=(this.addRemoveCargo?1:0)|(this.doStarbaseUpgrades?2:0)|(this.manageFleet?4:0)|(this.manageFleetCargo?8:0)|(this.doMining?16:0)|(this.respawn?32:0)|(this.manageSurveyDataUnit?64:0)|(this.scanSurveyDataUnit?128:0),e[3]=(this.doStarbaseUpkeep?1:0)|(this.manageProgression?2:0)|(this.manageCrewConfig?4:0)|(this.manageCrew?8:0)|(this.withdrawCrew?16:0),e}static empty(){return new I(!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1)}static all(){return new I(!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0)}static manageGamePermissions(){return I.permissionsBuilder("manageGame")}static manageSectorPermissions(){return I.permissionsBuilder("manageSector")}static manageStarPermissions(){return I.permissionsBuilder("manageStar")}static managePlanetPermissions(){return I.permissionsBuilder("managePlanet")}static manageShipPermissions(){return I.permissionsBuilder("manageShip")}static manageSagePlayerProfilePermissions(){return I.permissionsBuilder("manageSagePlayerProfile")}static manageStarbasePermissions(){return I.permissionsBuilder("manageStarbase")}static manageMineItemPermissions(){return I.permissionsBuilder("manageMineItem")}static manageResourcePermissions(){return I.permissionsBuilder("manageResource")}static removeShipEscrowPermissions(){return I.permissionsBuilder("removeShipEscrow")}static moveFleetPermissions(){return I.permissionsBuilder("moveFleet")}static transitionFromLoadingBayPermissions(){return I.permissionsBuilder("transitionFromLoadingBay")}static transitionFromIdlePermissions(){return I.permissionsBuilder("transitionFromIdle")}static rentFleetPermissions(){return I.permissionsBuilder("rentFleet")}static doCraftingPermissions(){return I.permissionsBuilder("doCrafting")}static manageCargoPodPermissions(){return I.permissionsBuilder("manageCargoPod")}static addRemoveCargoPermissions(){return I.permissionsBuilder("addRemoveCargo")}static doStarbaseUpgradesPermissions(){return I.permissionsBuilder("doStarbaseUpgrades")}static manageFleetPermissions(){return I.permissionsBuilder("manageFleet")}static manageFleetCargoPermissions(){return I.permissionsBuilder("manageFleetCargo")}static doMiningPermissions(){return I.permissionsBuilder("doMining")}static respawnPermissions(){return I.permissionsBuilder("respawn")}static manageSurveyDataUnitPermissions(){return I.permissionsBuilder("manageSurveyDataUnit")}static scanSurveyDataUnitPermissions(){return I.permissionsBuilder("scanSurveyDataUnit")}static doStarbaseUpkeepPermissions(){return I.permissionsBuilder("doStarbaseUpkeep")}static manageProgressionPermissions(){return I.permissionsBuilder("manageProgression")}static manageCrewConfigPermissions(){return I.permissionsBuilder("manageCrewConfig")}static manageCrewPermissions(){return I.permissionsBuilder("manageCrew")}static withdrawCrewPermissions(){return I.permissionsBuilder("withdrawCrew")}static fromPermissions(e){return new I((e[0]&1)!==0,(e[0]&2)!==0,(e[0]&4)!==0,(e[0]&8)!==0,(e[0]&16)!==0,(e[0]&32)!==0,(e[0]&64)!==0,(e[0]&128)!==0,(e[1]&1)!==0,(e[1]&2)!==0,(e[1]&4)!==0,(e[1]&8)!==0,(e[1]&16)!==0,(e[1]&32)!==0,(e[1]&64)!==0,(e[1]&128)!==0,(e[2]&1)!==0,(e[2]&2)!==0,(e[2]&4)!==0,(e[2]&8)!==0,(e[2]&16)!==0,(e[2]&32)!==0,(e[2]&64)!==0,(e[2]&128)!==0,(e[3]&1)!==0,(e[3]&2)!==0,(e[3]&4)!==0,(e[3]&8)!==0,(e[3]&16)!==0)}and(e){return new I(this.manageGame&&e.manageGame,this.manageSector&&e.manageSector,this.manageStar&&e.manageStar,this.managePlanet&&e.managePlanet,this.manageShip&&e.manageShip,this.manageSagePlayerProfile&&e.manageSagePlayerProfile,this.manageStarbase&&e.manageStarbase,this.manageMineItem&&e.manageMineItem,this.manageResource&&e.manageResource,this.removeShipEscrow&&e.removeShipEscrow,this.moveFleet&&e.moveFleet,this.transitionFromLoadingBay&&e.transitionFromLoadingBay,this.transitionFromIdle&&e.transitionFromIdle,this.rentFleet&&e.rentFleet,this.doCrafting&&e.doCrafting,this.manageCargoPod&&e.manageCargoPod,this.addRemoveCargo&&e.addRemoveCargo,this.doStarbaseUpgrades&&e.doStarbaseUpgrades,this.manageFleet&&e.manageFleet,this.manageFleetCargo&&e.manageFleetCargo,this.doMining&&e.doMining,this.respawn&&e.respawn,this.manageSurveyDataUnit&&e.manageSurveyDataUnit,this.scanSurveyDataUnit&&e.scanSurveyDataUnit,this.doStarbaseUpkeep&&e.doStarbaseUpkeep,this.manageProgression&&e.manageProgression,this.manageCrewConfig&&e.manageCrewConfig,this.manageCrew&&e.manageCrew,this.withdrawCrew&&e.withdrawCrew)}or(e){return new I(this.manageGame||e.manageGame,this.manageSector||e.manageSector,this.manageStar||e.manageStar,this.managePlanet||e.managePlanet,this.manageShip||e.manageShip,this.manageSagePlayerProfile||e.manageSagePlayerProfile,this.manageStarbase||e.manageStarbase,this.manageMineItem||e.manageMineItem,this.manageResource||e.manageResource,this.removeShipEscrow||e.removeShipEscrow,this.moveFleet||e.moveFleet,this.transitionFromLoadingBay||e.transitionFromLoadingBay,this.transitionFromIdle||e.transitionFromIdle,this.rentFleet||e.rentFleet,this.doCrafting||e.doCrafting,this.manageCargoPod||e.manageCargoPod,this.addRemoveCargo||e.addRemoveCargo,this.doStarbaseUpgrades||e.doStarbaseUpgrades,this.manageFleet||e.manageFleet,this.manageFleetCargo||e.manageFleetCargo,this.doMining||e.doMining,this.respawn||e.respawn,this.manageSurveyDataUnit||e.manageSurveyDataUnit,this.scanSurveyDataUnit||e.scanSurveyDataUnit,this.doStarbaseUpkeep||e.doStarbaseUpkeep,this.manageProgression||e.manageProgression,this.manageCrewConfig||e.manageCrewConfig,this.manageCrew||e.manageCrew,this.withdrawCrew||e.withdrawCrew)}eq(e){return this.manageGame===e.manageGame&&this.manageSector===e.manageSector&&this.manageStar===e.manageStar&&this.managePlanet===e.managePlanet&&this.manageShip===e.manageShip&&this.manageSagePlayerProfile===e.manageSagePlayerProfile&&this.manageStarbase===e.manageStarbase&&this.manageMineItem===e.manageMineItem&&this.manageResource===e.manageResource&&this.removeShipEscrow===e.removeShipEscrow&&this.moveFleet==e.moveFleet&&this.transitionFromLoadingBay===e.transitionFromLoadingBay&&this.transitionFromIdle===e.transitionFromIdle&&this.rentFleet===e.rentFleet&&this.doCrafting===e.doCrafting&&this.manageCargoPod===e.manageCargoPod&&this.addRemoveCargo===e.addRemoveCargo&&this.doStarbaseUpgrades===e.doStarbaseUpgrades&&this.manageFleet===e.manageFleet&&this.manageFleetCargo===e.manageFleetCargo&&this.doMining===e.doMining&&this.respawn===e.respawn&&this.manageSurveyDataUnit===e.manageSurveyDataUnit&&this.scanSurveyDataUnit===e.scanSurveyDataUnit&&this.doStarbaseUpkeep===e.doStarbaseUpkeep&&this.manageProgression===e.manageProgression&&this.manageCrewConfig===e.manageCrewConfig&&this.manageCrew===e.manageCrew&&this.withdrawCrew===e.withdrawCrew}static permissionsBuilder(e){const t=Array.isArray(e)?e:[e],n=Object.keys(I.empty()).map(s=>t.includes(s));if(n.length!=I.length)throw"Incorrect permissions array";return new I(...n)}};wa=Md();Dt=Id(wa,0,"SagePermissions",pn,Dt);vd(wa,1,Dt);Jn();const _d="gameStore",Ba="gameStore_starbase",$e=Ha(_d,{state:()=>({wallet:void 0,gameID:new v("GAMEzqJehF8yAnKiTARUuhZMvLvkZVAsCVri5vSfemLr"),cargoStatsDefinition:new v("CSTatsVpHbvZmwHbCjZKVfYQT5JXfsXccXufhEcwCqTg"),game:void 0,starbases:[],ships:[],starbase:void 0,fleets:[],starbasePlayer:void 0}),actions:{initStore(){const a=localStorage.getItem(Ba);if(a)try{const e=JSON.parse(a);this.starbase=e}catch(e){this.starbase=void 0,console.warn(`[${this.$id}]parsing stored starbase`,e)}},async updateStore(){try{this.game=await xd(this.gameID),this.starbases=await Rd(),this.ships=await Dd(),this.fleets=await Ed()}catch(a){console.error(`[${this.$id}] waring:`,a)}finally{console.log(`[${this.$id}] updated`)}},async updateStarbasePlayer(){try{this.starbasePlayer=await Ud()}catch(a){console.error(`[${this.$id}] waring:`,a)}finally{console.log(`[${this.$id}] updated`)}},setStarbase(){localStorage.setItem(Ba,JSON.stringify(this.starbase))}}});function hn(a,e){return pa.findAddress(B().sageProgram.value,a,e)[0]}function Cd(){if(!$e().starbase)throw Error("starbase is not set");return Ce.StarbasePlayer.findAddress(B().sageProgram.value,$e().starbase.key,hn(yn().playerProfileAddress,$e().gameID),$e().starbase.data.seqId)[0]}async function Fd(a){return await P.readFromRPCOrError(O().connection,B().sageProgram.value,a,pa)}async function xd(a){return await P.readFromRPCOrError(O().connection,B().sageProgram.value,a,Ce.Game,"confirmed")}async function Rd(){const a=await P.readAllFromRPC(O().connection,B().sageProgram.value,Ce.Starbase,"confirmed"),e=[];return a.map(t=>{t.type=="ok"&&e.push(new Ce.Starbase(t.data.data,t.data.key,t.data.upgradeIngredientAmounts))}),e}async function Dd(){const a=await P.readAllFromRPC(O().connection,B().sageProgram.value,Ce.Ship),e=[];return a.map(t=>{t.type=="ok"&&e.push(new Ce.Ship(t.data.data,t.data.key))}),e}async function Ed(){const a=[],e=await O().connection.getProgramAccounts(B().sageProgram.value.programId,{filters:[{memcmp:{offset:41,bytes:yn().playerProfileAddress.toBase58()}}]});for(const t of e)a.push(await P.readFromRPCOrError(O().connection,B().sageProgram.value,t.pubkey,Ce.Fleet));return a}function Ml(a){if(!$e().ships)throw Error("ships not set");return $e().ships?.find(e=>e.data.mint.toString()==a.toString()&&e.data.next.key.toString()==v.default.toString()).key}async function Ud(){return await P.readFromRPCOrError(O().connection,B().sageProgram.value,Cd(),Ce.StarbasePlayer,"confirmed")}var Oe=(a=>(a[a.NONE=0]="NONE",a[a.LP=1]="LP",a[a.PILOT=2]="PILOT",a[a.DATA=3]="DATA",a[a.MINE=4]="MINE",a[a.CRAFT=5]="CRAFT",a))(Oe||{});const Od=[{kind:1,key:new v("LPkmmDQG8iBDAfKkWN6QadeoiLSvD1p3fGgq8m8QdMu")},{kind:2,key:new v("PiLotBQoUBUvKxMrrQbuR3qDhqgwLJctWsXj3uR7fGs")},{kind:3,key:new v("DataJpxFgHhzwu4zYJeHCnAv21YqWtanEBphNxXBHdEY")},{kind:4,key:new v("MineMBxARiRdMh7s1wdStSK4Ns3YfnLjBfvF5ZCnzuw")},{kind:5,key:new v("CraftndAV62acibnaW7TiwEYwu8MmJZBdyrfyN54nre7")}];function $d(a,e){return ja.UserPoints.findAddress(B().pointsProgram.value,Od.find(t=>t.kind==e).key,a)[0]}async function Kd(a){return await P.readFromRPCOrError(O().connection,B().pointsProgram.value,a,ja.UserPoints)}function Ld(a){return Oe[a]}function Al(a){return ae.Faction[a]}const yn=Ha("profileStore",{state:()=>({wallet:void 0,gameID:new v("GAMEzqJehF8yAnKiTARUuhZMvLvkZVAsCVri5vSfemLr"),playerProfileAddress:void 0,nameProfileAddress:void 0,factionProfileAddress:void 0,sageProfileAddress:void 0,pointsLPAddress:void 0,pointsPILOTAddress:void 0,pointsDATAAddress:void 0,pointsMINEAddress:void 0,pointsCRAFTAddress:void 0,playerProfile:void 0,nameProfile:void 0,factionProfile:void 0,sageProfile:void 0,points:[{category:Oe.LP,address:void 0,points:void 0},{category:Oe.PILOT,address:void 0,points:void 0},{category:Oe.DATA,address:void 0,points:void 0},{category:Oe.MINE,address:void 0,points:void 0},{category:Oe.CRAFT,address:void 0,points:void 0}]}),actions:{async updateStore(a){try{this.wallet=a,this.resetStore(),this.playerProfileAddress=await bi(this.wallet),this.playerProfileAddress&&(this.nameProfileAddress=Ti(this.playerProfileAddress),this.factionProfileAddress=Pi(this.playerProfileAddress),this.sageProfileAddress=hn(this.playerProfileAddress,$e().gameID),this.points.map(e=>e.address=$d(this.playerProfileAddress,e.category)),this.playerProfile=await Mi(this.playerProfileAddress).catch(()=>{console.warn(`[${this.$id}] player profile does not exist!`)}),this.nameProfile=await Ai(this.nameProfileAddress).catch(()=>{console.warn(`[${this.$id}] name profile does not exist!`)}),this.factionProfile=await ki(this.factionProfileAddress).catch(()=>{console.warn(`[${this.$id}] faction profile does not exist!`)}),this.sageProfile=await Fd(this.sageProfileAddress).catch(()=>{console.warn(`[${this.$id}] sage profile does not exist!`)}),this.points.map(async e=>{e.points=await Kd(e.address).catch(()=>{console.warn(`[${this.$id}] points profile ${Ld(e.category)} does not exist!`)})}))}catch(e){console.error(`[${this.$id}]`,e)}finally{console.log(`[${this.$id}] updated`)}},resetStore(){this.playerProfileAddress=void 0,this.nameProfileAddress=void 0,this.factionProfileAddress=void 0,this.sageProfileAddress=void 0,this.pointsLPAddress=void 0,this.pointsPILOTAddress=void 0,this.pointsDATAAddress=void 0,this.pointsMINEAddress=void 0,this.pointsCRAFTAddress=void 0,this.playerProfile=void 0,this.nameProfile=void 0,this.factionProfile=void 0,this.sageProfile=void 0,this.points.map(a=>{a.address=void 0,a.points=void 0})}}}),Gd={withStackTrace:!1},Sn=(a,e,t=Gd)=>{const n=e.isOk()?{type:"Ok",value:e.value}:{type:"Err",value:e.error},s=t.withStackTrace?new Error().stack:void 0;return{data:n,message:a,stack:s}};function Ye(a,e,t,n){function s(i){return i instanceof t?i:new t(function(r){r(i)})}return new(t||(t=Promise))(function(i,r){function c(d){try{o(n.next(d))}catch(m){r(m)}}function u(d){try{o(n.throw(d))}catch(m){r(m)}}function o(d){d.done?i(d.value):s(d.value).then(c,u)}o((n=n.apply(a,[])).next())})}function Wa(a){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&a[e],n=0;if(t)return t.call(a);if(a&&typeof a.length=="number")return{next:function(){return a&&n>=a.length&&(a=void 0),{value:a&&a[n++],done:!a}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Le(a){return this instanceof Le?(this.v=a,this):new Le(a)}function zd(a,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n=t.apply(a,e||[]),s,i=[];return s={},r("next"),r("throw"),r("return"),s[Symbol.asyncIterator]=function(){return this},s;function r(f){n[f]&&(s[f]=function(l){return new Promise(function(g,p){i.push([f,l,g,p])>1||c(f,l)})})}function c(f,l){try{u(n[f](l))}catch(g){m(i[0][3],g)}}function u(f){f.value instanceof Le?Promise.resolve(f.value.v).then(o,d):m(i[0][2],f)}function o(f){c("next",f)}function d(f){c("throw",f)}function m(f,l){f(l),i.shift(),i.length&&c(i[0][0],i[0][1])}}function Nd(a){var e,t;return e={},n("next"),n("throw",function(s){throw s}),n("return"),e[Symbol.iterator]=function(){return this},e;function n(s,i){e[s]=a[s]?function(r){return(t=!t)?{value:Le(a[s](r)),done:s==="return"}:i?i(r):r}:i}}function Bd(a){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=a[Symbol.asyncIterator],t;return e?e.call(a):(a=typeof Wa=="function"?Wa(a):a[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(i){t[i]=a[i]&&function(r){return new Promise(function(c,u){r=a[i](r),s(c,u,r.done,r.value)})}}function s(i,r,c,u){Promise.resolve(u).then(function(o){i({value:o,done:c})},r)}}class N{constructor(e){this._promise=e}static fromSafePromise(e){const t=e.then(n=>new ue(n));return new N(t)}static fromPromise(e,t){const n=e.then(s=>new ue(s)).catch(s=>new ge(t(s)));return new N(n)}static fromThrowable(e,t){return(...n)=>new N(Ye(this,void 0,void 0,function*(){try{return new ue(yield e(...n))}catch(s){return new ge(t?t(s):s)}}))}static combine(e){return Hd(e)}static combineWithAllErrors(e){return jd(e)}map(e){return new N(this._promise.then(t=>Ye(this,void 0,void 0,function*(){return t.isErr()?new ge(t.error):new ue(yield e(t.value))})))}mapErr(e){return new N(this._promise.then(t=>Ye(this,void 0,void 0,function*(){return t.isOk()?new ue(t.value):new ge(yield e(t.error))})))}andThen(e){return new N(this._promise.then(t=>{if(t.isErr())return new ge(t.error);const n=e(t.value);return n instanceof N?n._promise:n}))}orElse(e){return new N(this._promise.then(t=>Ye(this,void 0,void 0,function*(){return t.isErr()?e(t.error):new ue(t.value)})))}match(e,t){return this._promise.then(n=>n.match(e,t))}unwrapOr(e){return this._promise.then(t=>t.unwrapOr(e))}safeUnwrap(){return zd(this,arguments,function*(){return yield Le(yield Le(yield*Nd(Bd(yield Le(this._promise.then(t=>t.safeUnwrap()))))))})}then(e,t){return this._promise.then(e,t)}}const Wd=a=>new N(Promise.resolve(new ue(a))),Et=a=>new N(Promise.resolve(new ge(a))),qd=N.fromPromise,Xd=N.fromSafePromise,Zd=N.fromThrowable,bn=a=>{let e=de([]);for(const t of a)if(t.isErr()){e=Y(t.error);break}else e.map(n=>n.push(t.value));return e},Hd=a=>N.fromSafePromise(Promise.all(a)).andThen(bn),Tn=a=>{let e=de([]);for(const t of a)t.isErr()&&e.isErr()?e.error.push(t.error):t.isErr()&&e.isOk()?e=Y([t.error]):t.isOk()&&e.isOk()&&e.value.push(t.value);return e},jd=a=>N.fromSafePromise(Promise.all(a)).andThen(Tn);var Pt;(function(a){function e(s,i){return(...r)=>{try{const c=s(...r);return de(c)}catch(c){return Y(i?i(c):c)}}}a.fromThrowable=e;function t(s){return bn(s)}a.combine=t;function n(s){return Tn(s)}a.combineWithAllErrors=n})(Pt||(Pt={}));const de=a=>new ue(a),Y=a=>new ge(a);function Vd(a){const e=a().next();return e instanceof Promise?e.then(t=>t.value):e.value}class ue{constructor(e){this.value=e}isOk(){return!0}isErr(){return!this.isOk()}map(e){return de(e(this.value))}mapErr(e){return de(this.value)}andThen(e){return e(this.value)}orElse(e){return de(this.value)}asyncAndThen(e){return e(this.value)}asyncMap(e){return N.fromSafePromise(e(this.value))}unwrapOr(e){return this.value}match(e,t){return e(this.value)}safeUnwrap(){const e=this.value;return function*(){return e}()}_unsafeUnwrap(e){return this.value}_unsafeUnwrapErr(e){throw Sn("Called `_unsafeUnwrapErr` on an Ok",this,e)}}class ge{constructor(e){this.error=e}isOk(){return!1}isErr(){return!this.isOk()}map(e){return Y(this.error)}mapErr(e){return Y(e(this.error))}andThen(e){return Y(this.error)}orElse(e){return e(this.error)}asyncAndThen(e){return Et(this.error)}asyncMap(e){return Et(this.error)}unwrapOr(e){return e}match(e,t){return t(this.error)}safeUnwrap(){const e=this.error;return function*(){throw yield Y(e),new Error("Do not use this generator out of `safeTry`")}()}_unsafeUnwrap(e){throw Sn("Called `_unsafeUnwrap` on an Err",this,e)}_unsafeUnwrapErr(e){return this.error}}const Qd=Pt.fromThrowable,kl=Object.freeze(Object.defineProperty({__proto__:null,Err:ge,Ok:ue,get Result(){return Pt},ResultAsync:N,err:Y,errAsync:Et,fromAsyncThrowable:Zd,fromPromise:qd,fromSafePromise:Xd,fromThrowable:Qd,ok:de,okAsync:Wd,safeTry:Vd},Symbol.toStringTag,{value:"Module"}));function Yd(a){if(a.length>=255)throw new TypeError("Alphabet too long");const e=new Uint8Array(256);for(let o=0;o<e.length;o++)e[o]=255;for(let o=0;o<a.length;o++){const d=a.charAt(o),m=d.charCodeAt(0);if(e[m]!==255)throw new TypeError(d+" is ambiguous");e[m]=o}const t=a.length,n=a.charAt(0),s=Math.log(t)/Math.log(256),i=Math.log(256)/Math.log(t);function r(o){if(o instanceof Uint8Array||(ArrayBuffer.isView(o)?o=new Uint8Array(o.buffer,o.byteOffset,o.byteLength):Array.isArray(o)&&(o=Uint8Array.from(o))),!(o instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(o.length===0)return"";let d=0,m=0,f=0;const l=o.length;for(;f!==l&&o[f]===0;)f++,d++;const g=(l-f)*i+1>>>0,p=new Uint8Array(g);for(;f!==l;){let b=o[f],S=0;for(let M=g-1;(b!==0||S<m)&&M!==-1;M--,S++)b+=256*p[M]>>>0,p[M]=b%t>>>0,b=b/t>>>0;if(b!==0)throw new Error("Non-zero carry");m=S,f++}let h=g-m;for(;h!==g&&p[h]===0;)h++;let y=n.repeat(d);for(;h<g;++h)y+=a.charAt(p[h]);return y}function c(o){if(typeof o!="string")throw new TypeError("Expected String");if(o.length===0)return new Uint8Array;let d=0,m=0,f=0;for(;o[d]===n;)m++,d++;const l=(o.length-d)*s+1>>>0,g=new Uint8Array(l);for(;o[d];){let b=e[o.charCodeAt(d)];if(b===255)return;let S=0;for(let M=l-1;(b!==0||S<f)&&M!==-1;M--,S++)b+=t*g[M]>>>0,g[M]=b%256>>>0,b=b/256>>>0;if(b!==0)throw new Error("Non-zero carry");f=S,d++}let p=l-f;for(;p!==l&&g[p]===0;)p++;const h=new Uint8Array(m+(l-p));let y=m;for(;p!==l;)h[y++]=g[p++];return h}function u(o){const d=c(o);if(d)return d;throw new Error("Non-base"+t+" character")}return{encode:r,decodeUnsafe:c,decode:u}}var Jd="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";Yd(Jd);function Pn(a){return"version"in a}function el(a){if(Pn(a)){const e=a.message.serialize();for(const[t,n]of a.signatures.entries()){const s=a.message.staticAccountKeys[t];if(n.every(i=>i===0))throw new Error(`Missing required signature for key ${s} at index ${t}`);if(!ei.verify(n,e,s.toBytes()))throw new Error(`Signature ${t} failed to verify for key ${s}`)}}else a.serialize()}const tl=0,al=0,sl=new v("feeYA2tAXP7a38Dcf43Xap4CxxzAaSWZ28NT3Xpx8Hm");var nl=(a=>(a[a.DEFAULT_FEE=0]="DEFAULT_FEE",a[a.CREATE_FEE=1]="CREATE_FEE",a))(nl||{});class il{signer;constructor(e){this.signer=e}transferFeeIx(e){let t=tl;return e===1&&(t=al),k.transfer({fromPubkey:this.signer.publicKey(),toPubkey:sl,lamports:t})}}async function wl(a="Unlabeled transaction",e,t,n,s=0,i=3e3,r=10){const c=ti.create({group:!1,timeout:0,spinner:!0,message:a,position:"bottom-right"});try{c({caption:"Waiting for user to sign..."});const o=[...Array.isArray(e)?e:[e],P.ixToIxReturn(new il(t).transferFeeIx(n))];if(Ke().useSquads){const d=await ol(o,t,a,s);await cl(d,c)}else{const d=await rl(o,t);await ul(d,i,r,c)}}catch(u){console.error(u),c({progress:!0,spinner:!1,icon:"error",color:"negative",timeout:5e3,caption:"Error signing transaction"})}}async function rl(a,e){(await O().connection.getAddressLookupTable(new v("5NrYTRkLRsSSJGgfX2vNRbSXiEFi9yUHV5n7bs7VM9P2"))).value;const t=await P.buildAndSignTransaction(a,e,{connection:O().connection,commitment:"confirmed"});return console.log("TX",t),t}async function ol(a,e,t,n=0){const s=await O().connection.getLatestBlockhash(),i=new ai({payerKey:Va(),recentBlockhash:s.blockhash,instructions:[]}),r=[],c=(await O().connection.getAddressLookupTable(new v("5NrYTRkLRsSSJGgfX2vNRbSXiEFi9yUHV5n7bs7VM9P2"))).value;return c&&r.push(c),(await P.buildDynamicTransactionsNoSigning(a,e)).map(d=>{console.log(d),d.forEach(m=>m.instructions.forEach(f=>{i.instructions.push(f.instruction)}))}),await Ke().update(),console.log(i),di.vaultTransactionCreate({blockhash:s.blockhash,feePayer:Be().publicKey.value,multisigPda:new v(Ke().multisigPDA.toString()),transactionIndex:Ke().getNewTransactionIndex,creator:Be().publicKey.value,rentPayer:Be().publicKey.value,vaultIndex:0,ephemeralSigners:n,transactionMessage:i,addressLookupTableAccounts:r,memo:t})}async function cl(a,e){const{sendTransaction:t}=Be(),n=await t(a,O().connection,{skipPreflight:!0}),s=await O().connection.getLatestBlockhash();let i;return e({color:"green-5",message:"[1/2] Waiting until processed...",caption:`${n}`}),i=await O().connection.confirmTransaction({signature:n,blockhash:s.blockhash,lastValidBlockHeight:s.lastValidBlockHeight},"processed"),e({color:"green-8",message:"[2/2]  Waiting for confirmation...",caption:`${n}`}),i=await O().connection.confirmTransaction({signature:n,blockhash:s.blockhash,lastValidBlockHeight:s.lastValidBlockHeight},"confirmed"),i.value.err!==null?(e({progress:!0,spinner:!1,icon:"error",color:"negative",timeout:5e3,caption:`Error sending transaction: ${Y.toString()}`}),{context:i.context,value:Y(i.value.err)}):(e({color:"positive",timeout:5e3,icon:"done",spinner:!1,message:"Send",caption:`${n}`}),{context:i.context,value:de(n)})}async function ul(a,e=3e3,t=10,n){const s=a.transaction.serialize();Pn(a.transaction)&&el(a.transaction);const i=await O().connection.sendRawTransaction(s,{skipPreflight:!0});let r=0;const c=setInterval(()=>{r<t&&O().connection.sendRawTransaction(s,{skipPreflight:!0}),r++},e);let u;try{n({color:"green-5",message:"[1/2] Waiting until processed...",caption:`${i}`}),u=await O().connection.confirmTransaction({signature:i,...a.rbh},"processed"),n({color:"green-8",message:"[2/2]  Waiting for confirmation...",caption:`${i}`}),u=await O().connection.confirmTransaction({signature:i,...a.rbh},"confirmed")}finally{clearInterval(c)}return u.value.err!==null?(n({progress:!0,spinner:!1,icon:"error",color:"negative",timeout:5e3,caption:`Error sending transaction: ${Y.toString()}`}),{context:u.context,value:Y(u.value.err)}):(n({color:"positive",timeout:5e3,icon:"done",spinner:!1,message:"Send",caption:`${i}`}),{context:u.context,value:de(i)})}function dl(a){return{publicKey:()=>a,requiresAsync(){return!0}}}function ll(a){return{inner(){return a},publicKey(){return a.publicKey.value},requiresAsync(){return!0},sign(e){return a.signTransaction.value(e)},signAll(e){return a.signAllTransactions.value(e)}}}function vl(){return Ke().useSquads?dl(Va()):ll(Be())}const ml='<g><path fill="none" stroke="currentColor" stroke-width="5" stroke-miterlimit="10" d="M58.4,51.7c-0.9-0.9-1.4-2-1.4-2.3s0.5-0.4,1.4-1.4 C70.8,43.8,79.8,30.5,80,15.5H70H30H20c0.2,15,9.2,28.1,21.6,32.3c0.9,0.9,1.4,1.2,1.4,1.5s-0.5,1.6-1.4,2.5 C29.2,56.1,20.2,69.5,20,85.5h10h40h10C79.8,69.5,70.8,55.9,58.4,51.7z"></path><clipPath id="uil-hourglass-clip1"><rect x="15" y="20" width="70" height="25"><animate attributeName="height" from="25" to="0" dur="1s" repeatCount="indefinite" values="25;0;0" keyTimes="0;0.5;1"></animate><animate attributeName="y" from="20" to="45" dur="1s" repeatCount="indefinite" values="20;45;45" keyTimes="0;0.5;1"></animate></rect></clipPath><clipPath id="uil-hourglass-clip2"><rect x="15" y="55" width="70" height="25"><animate attributeName="height" from="0" to="25" dur="1s" repeatCount="indefinite" values="0;25;25" keyTimes="0;0.5;1"></animate><animate attributeName="y" from="80" to="55" dur="1s" repeatCount="indefinite" values="80;55;55" keyTimes="0;0.5;1"></animate></rect></clipPath><path d="M29,23c3.1,11.4,11.3,19.5,21,19.5S67.9,34.4,71,23H29z" clip-path="url(#uil-hourglass-clip1)" fill="currentColor"></path><path d="M71.6,78c-3-11.6-11.5-20-21.5-20s-18.5,8.4-21.5,20H71.6z" clip-path="url(#uil-hourglass-clip2)" fill="currentColor"></path><animateTransform attributeName="transform" type="rotate" from="0 50 50" to="180 50 50" repeatCount="indefinite" dur="1s" values="0 50 50;0 50 50;180 50 50" keyTimes="0;0.7;1"></animateTransform></g>',fl=Ut({name:"QSpinnerHourglass",props:si,setup(a){const{cSize:e,classes:t}=ni(a);return()=>V("svg",{class:t.value,width:e.value,height:e.value,viewBox:"0 0 100 100",preserveAspectRatio:"xMidYMid",xmlns:"http://www.w3.org/2000/svg",innerHTML:ml})}}),gl={};function pl(a,e){return ii(),ri(fl,{color:"secondary",size:"250px"})}const Il=mi(gl,[["render",pl]]);export{il as F,Il as L,Od as P,Pl as Q,pa as S,$e as a,vl as b,Va as c,Al as d,Tl as e,nl as f,Ld as g,wl as h,kl as i,Cd as j,Ml as k,cu as l,dl as p,P as s,yn as u};
